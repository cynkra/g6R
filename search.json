[{"path":"https://cynkra.github.io/g6R/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 g6R authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://cynkra.github.io/g6R/articles/behaviors.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Behaviors","text":"Behaviors actions can applied graph, zooming, panning, selecting nodes. can added graph using g6_behaviors() function. 2 ways add behaviors graph. Either calling behaviors name string, passing behaviors functions. latter convenient control specific options:","code":"# Defaults g6() |> g6_behaviors(\"drag-canvas\", \"zoom-canvas\")  # Fine tune parameters g6() |>   g6_behaviors(     drag_canvas(       key = \"drag-canvas\",        enable = TRUE,       animation = NULL,        direction = c(\"both\", \"x\", \"y\"),       range = Inf,       sensitivity = 10,        trigger = NULL,       onFinish = NULL,       ... # extra options     ),     create_edge(       key = \"create-edge\",       trigger = \"drag\",       enable = FALSE,        onCreate = NULL,       onFinish = NULL,       style = NULL,       notify = FALSE     )   )"},{"path":"https://cynkra.github.io/g6R/articles/behaviors.html","id":"brush-select","dir":"Articles","previous_headings":"","what":"Brush Select","title":"Behaviors","text":"Enables rectangular brush selection selecting multiple elements . default, selection made clicking shift draging mouse canvas.","code":"nodes <- data.frame(id = letters[1:5])  g6(nodes) |>   g6_options(     nodes = list(       style = list(         labelText = JS(           \"(d) => {             return d.id           }\"         )       )     )   ) |>   g6_layout(d3_force_layout()) |>   g6_behaviors(\" brush-select \")"},{"path":"https://cynkra.github.io/g6R/articles/behaviors.html","id":"click-select","dir":"Articles","previous_headings":"","what":"Click Select","title":"Behaviors","text":"Allows selection elements mouse clicks. can also select multiple elements clicking holding shift key enabling option multiple = TRUE.","code":"nodes <- data.frame(id = letters[1:5])  g6(nodes) |>   g6_options(     nodes = list(       style = list(         labelText = JS(           \"(d) => {             return d.id           }\"         )       )     )   ) |>   g6_layout(d3_force_layout()) |>   g6_behaviors(\" click-select \")"},{"path":"https://cynkra.github.io/g6R/articles/behaviors.html","id":"drag-canvas","dir":"Articles","previous_headings":"","what":"Drag Canvas","title":"Behaviors","text":"Allows dragging entire canvas pan view. May incompatible behaviors create-edge depending trigger key.","code":"nodes <- data.frame(id = letters[1:5])  g6(nodes) |>   g6_options(     nodes = list(       style = list(         labelText = JS(           \"(d) => {             return d.id           }\"         )       )     )   ) |>   g6_layout(d3_force_layout()) |>   g6_behaviors(\" drag-canvas \")"},{"path":"https://cynkra.github.io/g6R/articles/behaviors.html","id":"drag-element","dir":"Articles","previous_headings":"","what":"Drag Element","title":"Behaviors","text":"Enables dragging individual elements reposition . May incompatible behaviors create-edge depending trigger key.","code":"nodes <- data.frame(id = letters[1:5])  g6(nodes) |>   g6_options(     nodes = list(       style = list(         labelText = JS(           \"(d) => {             return d.id           }\"         )       )     )   ) |>   g6_layout(d3_force_layout()) |>   g6_behaviors(\" drag-element \")"},{"path":"https://cynkra.github.io/g6R/articles/behaviors.html","id":"focus-element","dir":"Articles","previous_headings":"","what":"Focus Element","title":"Behaviors","text":"Provides focusing capabilities highlight specific elements. Click given element see canvas focusing .","code":"nodes <- data.frame(id = letters[1:5])  g6(nodes) |>   g6_options(     nodes = list(       style = list(         labelText = JS(           \"(d) => {             return d.id           }\"         )       )     )   ) |>   g6_layout(d3_force_layout()) |>   g6_behaviors(\" focus-element \")"},{"path":"https://cynkra.github.io/g6R/articles/behaviors.html","id":"hover-activate","dir":"Articles","previous_headings":"","what":"Hover Activate","title":"Behaviors","text":"Activates interactive features hovering elements.","code":"nodes <- data.frame(id = letters[1:5])  g6(nodes) |>   g6_options(     nodes = list(       style = list(         labelText = JS(           \"(d) => {             return d.id           }\"         )       )     )   ) |>   g6_layout(d3_force_layout()) |>   g6_behaviors(\" hover-activate \")"},{"path":"https://cynkra.github.io/g6R/articles/behaviors.html","id":"lasso-select","dir":"Articles","previous_headings":"","what":"Lasso Select","title":"Behaviors","text":"Enables free-form lasso selection selecting multiple elements. default, selection made clicking shift draging mouse canvas.","code":"nodes <- data.frame(id = letters[1:5])  g6(nodes) |>   g6_options(     nodes = list(       style = list(         labelText = JS(           \"(d) => {             return d.id           }\"         )       )     )   ) |>   g6_layout(d3_force_layout()) |>   g6_behaviors(\" lasso-select \")"},{"path":"https://cynkra.github.io/g6R/articles/behaviors.html","id":"scroll-canvas","dir":"Articles","previous_headings":"","what":"Scroll Canvas","title":"Behaviors","text":"Enables scrolling navigate large graphs.","code":"nodes <- data.frame(id = letters[1:5])  g6(nodes) |>   g6_options(     nodes = list(       style = list(         labelText = JS(           \"(d) => {             return d.id           }\"         )       )     )   ) |>   g6_layout(d3_force_layout()) |>   g6_behaviors(\" scroll-canvas \")"},{"path":"https://cynkra.github.io/g6R/articles/behaviors.html","id":"zoom-canvas","dir":"Articles","previous_headings":"","what":"Zoom Canvas","title":"Behaviors","text":"Provides zooming functionality canvas view.","code":"nodes <- data.frame(id = letters[1:5])  g6(nodes) |>   g6_options(     nodes = list(       style = list(         labelText = JS(           \"(d) => {             return d.id           }\"         )       )     )   ) |>   g6_layout(d3_force_layout()) |>   g6_behaviors(\" zoom-canvas \")"},{"path":"https://cynkra.github.io/g6R/articles/behaviors.html","id":"auto-adapt-label","dir":"Articles","previous_headings":"","what":"Auto adapt label","title":"Behaviors","text":"Automatically adapts label positioning avoid overlaps improve readability. adjusts label position based node’s size position, ensuring labels overlapping elements. works well zoom-canvas scroll-canvas behaviors.","code":"g6(nodes) |>   g6_options(     animation = FALSE,     node = nodes_options   ) |>   g6_layout(d3_force_layout()) |>   g6_behaviors(     \"auto-adapt-label\",     \"zoom-canvas\",     \"scroll-canvas\"   )"},{"path":"https://cynkra.github.io/g6R/articles/behaviors.html","id":"fix-element-size","dir":"Articles","previous_headings":"","what":"Fix element size","title":"Behaviors","text":"Maintains fixed element sizes transformations zooming panning. useful ensuring elements remain visually consistent regardless zoom level canvas position.","code":"g6(nodes) |>   g6_options(     animation = FALSE,     node = nodes_options   ) |>   g6_layout(d3_force_layout()) |>   g6_behaviors(     \"fix-element-size\",     \"zoom-canvas\",     \"scroll-canvas\"   )"},{"path":"https://cynkra.github.io/g6R/articles/behaviors.html","id":"optimize-viewport-transform","dir":"Articles","previous_headings":"","what":"Optimize viewport transform","title":"Behaviors","text":"Optimizes viewport transformations better performance. works well graph many nodes edges hardware limited resources. Edges hidden zooming .","code":"g6(jsonUrl = \"https://assets.antv.antgroup.com/g6/5000.json\") |>   g6_options(     animation = FALSE,     node = nodes_options   ) |>   g6_layout(d3_force_layout()) |>   g6_behaviors(     \"optimize-viewport-transform\",     \"zoom-canvas\",     \"scroll-canvas\"   )"},{"path":"https://cynkra.github.io/g6R/articles/behaviors.html","id":"create-edge","dir":"Articles","previous_headings":"","what":"Create edge","title":"Behaviors","text":"enables interactive creation new edges nodes. can drag one node another create edge also change trigger want press another key start edge creation. may incompatible behaviors drag-canvas. default, create-edge behavior disabled, need enable explicitly. avoid accidental edge creation dragging nodes panning canvas. practice, can use combination contextmenu() plugin allows right-click node create edge.","code":""},{"path":"https://cynkra.github.io/g6R/articles/behaviors.html","id":"manual-activation","dir":"Articles","previous_headings":"Create edge","what":"Manual activation","title":"Behaviors","text":"","code":"g6(nodes) |>   g6_options(     animation = FALSE,     node = nodes_options   ) |>   g6_layout(d3_force_layout()) |>   g6_behaviors(create_edge(enable = TRUE))"},{"path":"https://cynkra.github.io/g6R/articles/behaviors.html","id":"with-context-menu","dir":"Articles","previous_headings":"Create edge","what":"With context menu","title":"Behaviors","text":"","code":"g6(nodes) |>   g6_options(     animation = FALSE,     node = nodes_options   ) |>   g6_layout(d3_force_layout()) |>   g6_behaviors(create_edge()) |>   g6_plugins(context_menu())"},{"path":"https://cynkra.github.io/g6R/articles/behaviors.html","id":"collapse-and-expand","dir":"Articles","previous_headings":"","what":"Collapse and expand","title":"Behaviors","text":"provides functionality collapse expand graph structures. works combo context double click (default) enclosing combo.","code":"nodes$combo <- rep(1, nrow(nodes)) g6(nodes, combos = data.frame(id = 1)) |>   g6_options(     animation = FALSE,     node = nodes_options   ) |>   g6_layout(d3_force_layout()) |>   g6_behaviors(\"collapse-expand\")"},{"path":"https://cynkra.github.io/g6R/articles/behaviors.html","id":"drag-element-force","dir":"Articles","previous_headings":"","what":"Drag element force","title":"Behaviors","text":"Combines element dragging force simulation dynamic positioning. requires animation enabled g6_options().","code":"nodes <- data.frame(id = letters[1:5])  g6(   nodes,   edges = data.frame(     source = c(\"a\", \"b\", \"c\", \"d\"),     target = c(\"b\", \"c\", \"d\", \"e\")   ) ) |>   g6_options(     nodes = nodes_options   ) |>   g6_layout(d3_force_layout()) |>   g6_behaviors(drag_element_force(fixed = TRUE))"},{"path":[]},{"path":"https://cynkra.github.io/g6R/articles/behaviors.html","id":"add","dir":"Articles","previous_headings":"Dynamically interact with behaviors","what":"Add","title":"Behaviors","text":"TBD?","code":""},{"path":"https://cynkra.github.io/g6R/articles/behaviors.html","id":"update","dir":"Articles","previous_headings":"Dynamically interact with behaviors","what":"Update","title":"Behaviors","text":"update behavior server Shiny app, can use g6_update_behavior() function. function allows modify behaviors existing G6 graph.","code":""},{"path":"https://cynkra.github.io/g6R/articles/combos.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Combos","text":"Combos way group nodes graph. can used represent hierarchical structures visually organize nodes. g6R, combos can created dataframe list :","code":"combos <- data.frame(id = 1:2)  # or combos <- list(   list(id = 1, label = \"Combo 1\"),   list(id = 2, label = \"Combo 2\") )"},{"path":"https://cynkra.github.io/g6R/articles/combos.html","id":"data-properties","dir":"Articles","previous_headings":"","what":"Data properties","title":"Combos","text":"g6R combos allowed following properties: id: unique identifier combo, required. type: type combo. data: custom data combo can retrieved. style: style properties. comprehensive list available . states: initial states. combo: id parent combo .","code":""},{"path":"https://cynkra.github.io/g6R/articles/combos.html","id":"combo-types","dir":"Articles","previous_headings":"Data properties","what":"Combo types","title":"Combos","text":"2 main combo types, circle rect: using drag_element(dropEffect = \"link\"), can drag nodes combos, automatically create link node combo graph data. provide examples Shiny vignette (TBD). Like edges, implemented custom combo type circle-combo--extra-button, adds button bottom combo. button can used collapse expand combo:","code":"combos <- data.frame(   id = c(\"combo1\", \"combo2\", \"combo3\"),   type = c(\"circle\", \"rect\", \"circle\"),   combo = c(\"combo3\", \"combo3\", NA) ) nodes <- data.frame(   id = 1:4,   combo = c(     \"combo1\",     \"combo1\",     \"combo2\",     \"combo2\"   ) )  g6(nodes, combos = combos) |>   g6_layout(antv_dagre_layout()) |>   g6_options(     animation = FALSE,     node = list(       style = list(         labelText = JS(           \"(d) => {             return d.id           }\"         )       )     ),     combo = list(       style = list(         lineWidth = 2,         labelText = JS(           \"(d) => {             return d.id           }\"         )       )     )   ) |>   g6_behaviors(     zoom_canvas(),     collapse_expand(),     drag_element(dropEffect = \"link\")   ) combos <- data.frame(   id = c(\"combo1\"),   type = \"circle-combo-with-extra-button\" )  nodes <- data.frame(   id = 1,   combo = c(\"combo1\") )  g6(nodes, combos = combos, height = \"200px\") |>   g6_layout(antv_dagre_layout()) |>   g6_options(     animation = FALSE,     node = list(       style = list(         labelText = JS(           \"(d) => {             return d.id           }\"         )       )     ),     combo = list(       style = list(         lineWidth = 2,         labelPlacement = \"top\",         labelText = JS(           \"(d) => {             return d.id           }\"         )       )     )   ) |>   g6_behaviors(     collapse_expand(),     drag_element()   )"},{"path":"https://cynkra.github.io/g6R/articles/combos.html","id":"styling-combos","dir":"Articles","previous_headings":"Data properties","what":"Styling combos","title":"Combos","text":"g6 JavaScript library exposes wide range style properties combos, can set style property combo data. list outstanding properties, can find comprehensive list documentation.","code":""},{"path":"https://cynkra.github.io/g6R/articles/combos.html","id":"main-graphic-properties","dir":"Articles","previous_headings":"Data properties > Styling combos","what":"Main graphic properties","title":"Combos","text":"properties used define main graphic style combo depend expanded , color, width, line type. can applied global combo option level individual combo level. example set color combo graph:","code":"combos <- data.frame(id = c(\"combo1\")) nodes <- data.frame(   id = 1,   combo = c(\"combo1\") ) g6(nodes, combos = combos, height = \"200px\") |>   g6_layout(d3_force_layout()) |>   g6_options(     combo = list(       style = list(         fill = \"#FFB6C1\", # Combo fill color         fillOpacity = 0.5, # Combo fill opacity         stroke = \"#000\", # Combo border color         lineWidth = 2, # Combo border width         collapsedFill = \"pink\",         collapsedStroke = \"pink\",         collapsedSize = 10 # Default is 32       )     )   ) |>   g6_behaviors(     collapse_expand(),     drag_element()   )"},{"path":"https://cynkra.github.io/g6R/articles/combos.html","id":"label-styling","dir":"Articles","previous_headings":"Data properties > Styling combos","what":"Label styling","title":"Combos","text":"common properties include label styling:","code":"combos <- data.frame(id = c(\"combo1\")) nodes <- data.frame(   id = 1,   combo = c(\"combo1\") ) g6(nodes, combos = combos, height = \"200px\") |>   g6_layout(d3_force_layout()) |>   g6_options(     combo = list(       style = list(         label = TRUE, # Whether to display the combo label         labelText = \"Combo Name\", # Label text content         labelFill = \"#000\", # Label text color         labelFontSize = 12, # Label font size         labelFontWeight = \"normal\", # Label font weight         labelPlacement = \"bottom\", # Position of the label relative to the main graphic of the combo         labelBackground = TRUE, # Whether to display the combo label background         labelBackgroundFill = \"#000\", # Label background fill         labelBackgroundRadius = 10, # Label background corner radius         labelBackgroundFillOpacity = 0.5 # Label background fill color opacity       )     )   ) |>   g6_behaviors(     collapse_expand(),     drag_element()   )"},{"path":"https://cynkra.github.io/g6R/articles/combos.html","id":"states","dir":"Articles","previous_headings":"Data properties","what":"States","title":"Combos","text":"Combos can different states can used indicate different conditions interactions. States can set states property node data:","code":"states <- c(   \"default\",   \"selected\",   \"highlight\",   \"active\",   \"inactive\",   \"disabled\" ) combos <- lapply(seq_along(states), \\(i) {   list(     id = sprintf(\"combo-%s\", i),     states = list(states[[i]]),     data = list(state = states[[i]])   ) }) nodes <- lapply(seq_along(states), \\(i) {   list(     id = sprintf(\"node-%s\", i),     combo = sprintf(\"combo-%s\", i)   ) }) g6(nodes, combos = combos) |>   g6_layout(d3_force_layout()) |>   g6_options(     animation = FALSE,     combo = list(       style = list(         labelText = JS(           \"(d) => {             return d.data.state           }\"         )       )     )   )"},{"path":"https://cynkra.github.io/g6R/articles/combos.html","id":"color-palette","dir":"Articles","previous_headings":"Data properties","what":"Color palette","title":"Combos","text":"","code":"g6(poke$nodes, poke$edges, poke$combos) |>   g6_layout(combo_combined_layout(spacing = 50)) |>   g6_options(     animation = FALSE,     node = list(       style = list(         labelText = JS(           \"(d) => {             return d.data.label           }\"         )       )     ),     edge = list(       style = list(endArrow = TRUE)     ),     combo = list(       style = list(         fillOpacity = 0.5       ),       palette = list(         type = \"group\", # use discret palette         field = \"family\",         color = \"spectral\"       )     )   ) |>   g6_behaviors(     zoom_canvas(),     collapse_expand(),     drag_element()   )"},{"path":"https://cynkra.github.io/g6R/articles/edges.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Edges","text":"Edges belong graph data. g6R, edges can created dataframe list : former might convenient simple cases, latter provides flexibility advanced customization since edge properties nested lists, instance style properties:","code":"edges <- data.frame(   source = c(1, 2),   target = c(2, 3) ) edges <- list(   list(     source = \"1\",     target = \"2\",     style = list(       ...     )   ),   list(     source = \"2\",     target = \"3\",     style = list(       ...     )   ) )"},{"path":"https://cynkra.github.io/g6R/articles/edges.html","id":"data-properties","dir":"Articles","previous_headings":"","what":"Data properties","title":"Edges","text":"g6R edges allowed following properties: source: id source node, required. target: id target node, required. id: unique identifier edge (optional, passed <source>-<target>). type: type edge. data: custom data edge can retrieved. style: style properties. comprehensive list available . states: initial states.","code":""},{"path":"https://cynkra.github.io/g6R/articles/edges.html","id":"edge-types","dir":"Articles","previous_headings":"Data properties","what":"Edge types","title":"Edges","text":"Builtin types line, polyline, quadratic, cubic: Special type cubic-vertical cubic-horizontal respectively used vertical horizontal layouts:","code":"types <- c(   \"line\",   \"polyline\",   \"quadratic\",   \"cubic\" ) nodes <- data.frame(id = as.character(1:5)) edges <- lapply(seq_along(types), \\(i) {   list(     source = 1,     target = i + 1,     id = types[[i]],     type = types[[i]],     style = list(       labelText = types[[i]]     )   ) }) g6(nodes, edges) |>   g6_layout(d3_force_layout()) g6(tree$nodes, tree$edges) |>   g6_layout(dendrogram_layout(nodeSep = 36, rankSep = 250, direction = \"LR\")) |>   g6_options(edge = list(type = \"cubic-horizontal\"), autoFit = \"view\")"},{"path":"https://cynkra.github.io/g6R/articles/edges.html","id":"special-types","dir":"Articles","previous_headings":"Data properties","what":"Special types","title":"Edges","text":"g6R implements custom type animation, namely fly-marker-cubic. type implemented JavaScript code registered g6R package. may custom types.","code":"nodes <- data.frame(id = 1:2) edges <- list(   list(     source = 1,     target = 2,     type = \"fly-marker-cubic\"   ) ) g6(nodes, edges, height = \"200px\") |>   g6_layout(d3_force_layout())"},{"path":"https://cynkra.github.io/g6R/articles/edges.html","id":"styling-edges","dir":"Articles","previous_headings":"Data properties","what":"Styling edges","title":"Edges","text":"g6 JavaScript library exposes wide range style properties edges, can set style property edge data. list outstanding properties, can find comprehensive list documentation.","code":""},{"path":"https://cynkra.github.io/g6R/articles/edges.html","id":"main-graphic-properties","dir":"Articles","previous_headings":"Data properties > Styling edges","what":"Main graphic properties","title":"Edges","text":"properties used define main graphic style edge, color, width, line type. Like nodes, options may set either global edge option level individual edge level. example set color given edge:","code":"nodes <- data.frame(id = 1:2) edges <- list(   list(     source = 1,     target = 2,     style = list(       stroke = \"pink\",       lineWidth = 10     )   ) ) g6(nodes, edges, height = \"200px\") |>   g6_layout(d3_force_layout())"},{"path":"https://cynkra.github.io/g6R/articles/edges.html","id":"label-styling","dir":"Articles","previous_headings":"Data properties > Styling edges","what":"Label styling","title":"Edges","text":"common properties include label styling:","code":"nodes <- data.frame(id = 1:2) edges <- list(   list(     source = 1,     target = 2,     style = list(       labelText = \"Edge Label\", # Label text content       labelFill = \"blue\", # Label text color       labelOffsetY = 20, # Vertical offset of the label       labelFontSize = 14, # Label font size       labelPlacement = \"center\", # Position of the label relative to the edge,       labelBackground = TRUE, # Whether to display the label background       labelBackgroundFill = \"yellow\" # Background color of the label     )   ) ) g6(nodes, edges, height = \"200px\") |>   g6_layout(d3_force_layout())"},{"path":"https://cynkra.github.io/g6R/articles/edges.html","id":"badges","dir":"Articles","previous_headings":"Data properties > Styling edges","what":"Badges","title":"Edges","text":"can add badges edges using badge property style list. Badges small indicators can display additional information, counts statuses:","code":"nodes <- data.frame(id = 1:2) edges <- list(   list(     source = 1,     target = 2,     style = list(       labelText = \"Edge Label\", # Label text content       labelFill = \"blue\", # Label text color       labelFontSize = 14, # Label font size       labelOffsetY = 20, # Vertical offset of the label       labelPlacement = \"center\", # Position of the label relative to the edge,       badgeText = \"badge\", # Edge badge text       badgeFill = \"green\", # Edge badge text color       badgeOffsetX = -40, # Edge badge offset in the x-axis direction       badgePlacement = \"suffix\", # Position of the badge relative to the edge       badgeBackground = TRUE # Enable edge badge background     )   ) ) g6(nodes, edges, height = \"200px\") |>   g6_layout(d3_force_layout())"},{"path":"https://cynkra.github.io/g6R/articles/edges.html","id":"arrow-styling","dir":"Articles","previous_headings":"Data properties > Styling edges","what":"Arrow styling","title":"Edges","text":"End start arrows can styled :","code":"nodes <- data.frame(id = 1:2) edges <- list(   list(     source = 1,     target = 2,     style = list(       startArrow = TRUE, # Enable edge start arrow       startArrowFill = \"yellow\", # Edge start arrow fill color       startArrowType = \"rect\", # Edge start arrow type       endArrow = TRUE, # Enable edge end arrow       endArrowFill = \"orange\", # Edge end arrow fill color       endArrowType = \"triangle\" # Edge end arrow type     )   ) ) g6(nodes, edges, height = \"200px\") |>   g6_layout(d3_force_layout())"},{"path":"https://cynkra.github.io/g6R/articles/edges.html","id":"states","dir":"Articles","previous_headings":"Data properties","what":"States","title":"Edges","text":"Edges can different states can used indicate different conditions interactions. States can set states property edge data:","code":"states <- c(   \"default\",   \"selected\",   \"highlight\",   \"active\",   \"inactive\",   \"disabled\" ) nodes <- data.frame(id = 1:7) edges <- lapply(seq_along(states), \\(i) {   list(     source = 1,     target = i + 1,     states = list(states[[i]]),     style = list(       labelText = states[[i]]     )   ) }) g6(nodes, edges) |>   g6_layout(d3_force_layout())"},{"path":"https://cynkra.github.io/g6R/articles/edges.html","id":"color-palette","dir":"Articles","previous_headings":"Data properties","what":"Color palette","title":"Edges","text":"One can assign color palette edges may grouped given specific property. following, use “Les Misérables” dataset, contains edges value column, set color palette. length(unique(lesmis$edges$value)) color choices:","code":"edges <- unname(split(lesmis$edges, seq(nrow(lesmis$edges)))) edges <- lapply(edges, function(edge) {   edge <- as.list(edge)   edge$data <- list(value = edge$value)   edge }) g6(lesmis$nodes, edges) |>   g6_layout(d3_force_layout()) |>   g6_options(     animation = FALSE,     autoFit = \"view\",     autoResize = TRUE,     edge = list(       style = list(endArrow = TRUE),       palette = list(         type = \"group\", # use discret palette         field = \"value\", # The property to group edges by         color = \"tableau\"       )     )   )"},{"path":"https://cynkra.github.io/g6R/articles/edges.html","id":"update-edges-data","dir":"Articles","previous_headings":"","what":"Update edges data","title":"Edges","text":"functions can used Shiny app context. allow get update edges data graph created. functions : g6_add_edges(): adds new edges graph. g6_update_edges(): updates existing edges graph. g6_remove_edges(): removes edges graph. g6_set_edges(): set edges state. g6_get_edges(): get edges data graph.","code":""},{"path":"https://cynkra.github.io/g6R/articles/g6R.html","id":"graph-data","dir":"Articles","previous_headings":"","what":"Graph data","title":"g6R","text":"setup g6R graph, first define node, edges combos (collection nodes), like : also pass elements list, faster dataframe approach since hood, g6R send list JavaScript: define random edges: dealing large graphs, might want use jsonUrl parameter fetch graph data hosted JSON file instead. , leave nodes, edges combos NULL. allows bypass serialization graph data JavaScript, can slow large graphs. ’s done shinyAppDir(system.file(\"examples\", \"json\", package = \"g6R\")) example.","code":"nodes <- data.frame(id = 1:10) nodes$label <- nodes$id nodes <- lapply(seq_len(10), function(i) {   list(id = i, label = i) }) # Set a seed for reproducibility set.seed(123)  # Define the number of edges to create (e.g., 200 random connections) num_edges <- 5  # Generate random edges edges <- data.frame(   source = sample(nodes$id, num_edges, replace = TRUE),   target = sample(nodes$id, num_edges, replace = TRUE) )  edges$id <- paste0(edges$source, edges$target) duplicated_id <- which(duplicated(edges$id) == TRUE) if (length(duplicated_id)) {   edges <- edges[-duplicated_id, ] } shinyAppDir(system.file(\"examples\", \"json\", package = \"g6R\"))"},{"path":"https://cynkra.github.io/g6R/articles/g6R.html","id":"data-formats","dir":"Articles","previous_headings":"","what":"Data formats","title":"g6R","text":"setup g6R graph, first define node, edges combos (collection nodes), like : also pass elements list, faster dataframe approach since hood, g6R send list JavaScript: define random edges:","code":"nodes <- data.frame(id = 1:10) nodes$label <- nodes$id nodes <- lapply(seq_len(10), function(i) {   list(id = i, label = i) }) # Set a seed for reproducibility set.seed(123)  # Define the number of edges to create (e.g., 200 random connections) num_edges <- 5  # Generate random edges edges <- data.frame(   source = sample(nodes$id, num_edges, replace = TRUE),   target = sample(nodes$id, num_edges, replace = TRUE) )  edges$id <- paste0(edges$source, edges$target) duplicated_id <- which(duplicated(edges$id) == TRUE) if (length(duplicated_id)) {   edges <- edges[-duplicated_id, ] }"},{"path":"https://cynkra.github.io/g6R/articles/g6R.html","id":"performance","dir":"Articles","previous_headings":"","what":"Performance","title":"g6R","text":"dealing large graphs, might want use jsonUrl parameter fetch graph data hosted JSON file instead. , leave nodes, edges combos NULL. allows bypass serialization graph data JavaScript, can slow large graphs. ’s done shinyAppDir(system.file(\"examples\", \"json\", package = \"g6R\")) example.","code":"shinyAppDir(system.file(\"examples\", \"json\", package = \"g6R\"))"},{"path":"https://cynkra.github.io/g6R/articles/g6R.html","id":"initialise-the-graph","dir":"Articles","previous_headings":"","what":"Initialise the graph","title":"g6R","text":"leverage g6 create instance network: can see, nodes don’t render well yet. Let’s add layout.","code":"g6(nodes, edges, width = 200, height = 200)"},{"path":"https://cynkra.github.io/g6R/articles/g6R.html","id":"layout","dir":"Articles","previous_headings":"","what":"Layout","title":"g6R","text":"g6_layout() allows pass supported layout. example, select d3_force_layout(): ’s better! go displaying nodes label.","code":"g <- g6(nodes, edges) |>   g6_layout(d3_force_layout()) g"},{"path":"https://cynkra.github.io/g6R/articles/g6R.html","id":"tweak-options","dir":"Articles","previous_headings":"","what":"Tweak options","title":"g6R","text":"g6_options() go tool comes change style graph element nodes. Properties selected documentation:","code":"g <- g |>   g6_options(     node = list(       style = list(         labelBackground = TRUE,         labelBackgroundFill = '#FFB6C1',         labelBackgroundRadius = 4,         labelFontFamily = 'Arial',         labelPadding = c(0, 4),         labelText = JS(           \"(d) => {               return d.id             }\"         )       )     )   ) g"},{"path":"https://cynkra.github.io/g6R/articles/g6R.html","id":"plugins","dir":"Articles","previous_headings":"","what":"Plugins","title":"g6R","text":"Plugins allowing users improve user experience adding graphical components canvas like minimaps tooltips. can pass inside g6_plugins either character string reference plugin name using correponding function pass configuration options:","code":"# Use defaults g6_plugins(\"minimap\")  # Custom options g6_plugins(   minimap(size = c(100, 100)) ) g <- g |>   g6_plugins(     minimap(size = c(100, 100))   ) g"},{"path":"https://cynkra.github.io/g6R/articles/g6R.html","id":"behaviors","dir":"Articles","previous_headings":"","what":"Behaviors","title":"g6R","text":"Behaviors correspond interactions users graph elements, dragging nodes selecting nodes. mindful behaviors compatible: dragging canvas canvas elements require specify different triggers behavior. g6R behaviors can added g6_behaviors, like plugins: Notice can pass callback functions R JavaScript. useful combination Shiny set custom inputs, instance.","code":"g <- g |>   g6_behaviors(     \"zoom-canvas\",     drag_element_force(fixed = TRUE),     click_select(       multiple = TRUE,       onClick = JS(         \"(e) => {             console.log(e);           }\"       )     ),     brush_select()   ) g"},{"path":"https://cynkra.github.io/g6R/articles/layouts.html","id":"force-directed-layouts","dir":"Articles","previous_headings":"","what":"Force directed layouts","title":"Layouts","text":"G6 implements several force-directed layouts, simulate physical forces position nodes. d3_force_layout() function wrapper around D3 force layout algorithm force_atlas_layout() wrapper around Force Atlas2 layout algorithm. layouts commonly used visualizing networks later particularly suited large networks. D3 force layout quite sensible defaults. Force Atlas2 layout might need parameter tweaking get best results. g6_options(), see options vignette. Fruchterman layout another force-directed layout particularly useful smaller graphs. positions nodes based attractive repulsive forces, creating balanced distribution.","code":"g6(lesmis$nodes, lesmis$edges) |>   g6_layout(d3_force_layout()) |>   g6_options(autoFit = \"view\", autoResize = TRUE) g6(lesmis$nodes, lesmis$edges) |>   g6_layout(force_atlas2_layout(preventOverlap = TRUE, kr = 20)) |>   g6_options(autoFit = \"view\", autoResize = TRUE) g6(radial$nodes, radial$edges) |>   g6_layout(fruchterman_layout()) |>   g6_options(autoFit = \"view\", autoResize = TRUE)"},{"path":"https://cynkra.github.io/g6R/articles/layouts.html","id":"circular-layouts","dir":"Articles","previous_headings":"","what":"Circular layouts","title":"Layouts","text":"Circular layouts arrange nodes circular pattern, can useful highlighting relationships cyclic radial structures. G6 provides several circular layout algorithms. Exposed g6R circular_layout(), radial_layout(), concentric_layout(). circular_layout() function arranges nodes circle. limited use case can useful small graphs. radial_layout() function arranges nodes radial pattern, useful hierarchical structures. positions nodes around central node, making easier visualize hierarchical relationships. node styles, see nodes vignette. focus node can set node graph. focusNode parameter used specify central node around radial layout arranged. concentric_layout() function arranges nodes concentric circles, based degree attributes. layout useful visualizing structure networks varying node importance connectivity. sortBy parameter can used sort nodes degree, existing node attribute.","code":"g6(radial$nodes, radial$edges) |>   g6_layout(circular_layout()) |>   g6_options(autoFit = \"view\", autoResize = TRUE) g6(radial$nodes, radial$edges) |>   g6_layout(radial_layout()) |>   g6_options(     autoFit = \"view\",     autoResize = TRUE,     node = list(       style = list(         labelFill = '#fff',         labelPlacement = \"center\",         labelText = JS(           \"(d) => {               return d.id             }\"         )       )     )   ) g6(radial$nodes, radial$edges) |>   g6_layout(radial_layout(focusNode = \"22\")) |>   g6_options(     autoFit = \"view\",     autoResize = TRUE,     node = list(       style = list(         labelFill = '#fff',         labelPlacement = \"center\",         labelText = JS(           \"(d) => {               return d.id             }\"         )       )     )   ) g6(lesmis$nodes, lesmis$edges) |>   g6_layout(concentric_layout(sortBy = \"degree\", preventOverlap = TRUE)) |>   g6_options(autoFit = \"view\", autoResize = TRUE)"},{"path":"https://cynkra.github.io/g6R/articles/layouts.html","id":"tree-layouts","dir":"Articles","previous_headings":"","what":"Tree layouts","title":"Layouts","text":"package also implements layouts trees. dendrogram_layout() function wrapper around Dendrogram layout algorithm. edge styles can found edges vignette. direction dendrogram can changed using direction parameter. default “LR” (left right), can example also set “TB” (top bottom). compact_box_layout() function wrapper around Compact Box layout algorithm. can used create compact visualizations trees.","code":"g6(tree$nodes, tree$edges) |>   g6_layout(dendrogram_layout(nodeSep = 36, rankSep = 250, direction = \"LR\")) |>   g6_options(edge = list(type = \"cubic-horizontal\"), autoFit = \"view\") g6(tree$nodes, tree$edges) |>   g6_layout(dendrogram_layout(nodeSep = 36, rankSep = 250, direction = \"TB\")) |>   g6_options(edge = list(type = \"cubic-horizontal\"), autoFit = \"view\") g6(tree$nodes, tree$edges) |>   g6_layout(compact_box_layout(     getHeight = JS(       \"function getHeight() {           return 32;         }\"     ),     getWidth = JS(       \"function getWidth() {           return 32;         }\"     ),     getVGap = JS(       \"function getVGap() {           return 10;         }\"     ),     getHGap = JS(       \"function getHGap() {           return 100;         }\"     )   )) |>   g6_options(edge = list(type = \"cubic-horizontal\"), autoFit = \"view\")"},{"path":"https://cynkra.github.io/g6R/articles/layouts.html","id":"manual-layout","dir":"Articles","previous_headings":"","what":"Manual layout","title":"Layouts","text":"Sometimes, might want manually specify positions nodes graph. straightforward way add coordinates nodes data frame use g6_options() function set node styles accordingly.","code":"g6(lesmis$nodes, lesmis$edges) |>   g6_options(     autoFit = \"view\",     autoResize = TRUE,     node = list(       style = list(         x = JS(\"(d) => {return 500*d.x}\"),         y = JS(\"(d) => {return 500*d.y}\")       )     )   )"},{"path":"https://cynkra.github.io/g6R/articles/nodes.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Nodes","text":"Nodes belong graph data. g6R, nodes can created dataframe list : dataframes might convenient simple cases, lists provides flexibility advanced customization since node properties nested lists, instance style properties:","code":"nodes <- data.frame(id = 1:2) nodes$label <- nodes$id  # or nodes <- list(   list(id = 1, label = \"Node 1\"),   list(id = 2, label = \"Node 2\") ) nodes <- list(   list(     id = 1,     label = \"Node 1\",     style = list(fill = \"#FF0000\", fillOpacity = 0.5)   ), )"},{"path":"https://cynkra.github.io/g6R/articles/nodes.html","id":"data-properties","dir":"Articles","previous_headings":"","what":"Data properties","title":"Nodes","text":"g6R nodes allowed following properties: id: unique identifier node, required. type: type node. data: custom data node can retrieved. style: style properties. comprehensive list available . states: initial states. combo: id combo node belongs . Combo describes another vignette (TBD link). children: nodes ids tree.","code":""},{"path":"https://cynkra.github.io/g6R/articles/nodes.html","id":"node-type","dir":"Articles","previous_headings":"Data properties","what":"Node type","title":"Nodes","text":"Builtin types circle, rect, ellipse, diamond, triangle, hexagon, star, donut:","code":"types <- c(   \"circle\",   \"rect\",   \"ellipse\",   \"diamond\",   \"triangle\",   \"hexagon\",   \"star\" ) nodes <- lapply(seq_along(types), \\(i) {   list(id = types[[i]], type = types[[i]]) }) g6(nodes) |>   g6_layout(d3_force_layout()) |>   g6_options(     animation = FALSE,     node = list(       style = list(         labelText = JS(           \"(d) => {             return d.id           }\"         )       )     )   )"},{"path":[]},{"path":"https://cynkra.github.io/g6R/articles/nodes.html","id":"images","dir":"Articles","previous_headings":"Data properties > Special types","what":"Images","title":"Nodes","text":"can create nodes images setting type image providing src property style. image displayed node content:","code":"nodes <- list(   list(     id = 1,     type = \"image\",     style = list(       src = \"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ\"     )   ) ) g6(nodes, height = \"100px\") |>   g6_layout(d3_force_layout()) |>   g6_options(     animation = FALSE,     node = list(       style = list(         labelText = JS(           \"(d) => {             return d.id           }\"         )       )     )   )"},{"path":"https://cynkra.github.io/g6R/articles/nodes.html","id":"html-nodes","dir":"Articles","previous_headings":"Data properties > Special types","what":"HTML nodes","title":"Nodes","text":"exists last type allows create nodes custom html. Importantly, can’t html nodes type nodes. type applies global node option level shown following. node structure created innerHTML property JavaScript callback taking node data parameter:","code":"nodes <- data.frame(id = 1:3) g6(nodes, height = \"200px\") |>   g6_layout(d3_force_layout()) |>   g6_options(     animation = FALSE,     node = list(       type = \"html\",       style = list(         innerHTML = JS(           \"(d) => {             return `               <div class=\\\"card\\\" style=\\\"width: 13rem;\\\">                 <div class=\\\"card-body\\\">                   This is node: ${d.id}                 <\/div>               <\/div>`;             }\"         )       )     )   )"},{"path":"https://cynkra.github.io/g6R/articles/nodes.html","id":"donut","dir":"Articles","previous_headings":"Data properties > Special types","what":"Donut","title":"Nodes","text":"can create donut nodes setting type donut. style property contain JavaScript function returns array objects, value, color possible properties described , want customize segments donut. may give index property node distinguish different donuts customize output, shown example .","code":"nodes <- list(   list(     id = 1,     index = 0   ),   list(     id = 2,     index = 1   ) ) g6(nodes, height = \"200px\") |>   g6_layout(d3_force_layout()) |>   g6_options(     animation = FALSE,     node = list(       type = \"donut\",       style = list(         donuts = JS(           \"(item) => {             const { index } = item;             if (index === 0) {               return [                   { value: 50, color: 'red' },                   { value: 150, color: 'green' },                   { value: 100, color: 'blue' },                 ];             }             if (index === 1) {               return [                   { value: 100, color: 'yellow' },                   { value: 50, color: 'purple' },                   { value: 150, color: 'orange' },                 ];             }           }\"         )       )     )   )"},{"path":"https://cynkra.github.io/g6R/articles/nodes.html","id":"styling-nodes","dir":"Articles","previous_headings":"Data properties","what":"Styling nodes","title":"Nodes","text":"g6 JavaScript library exposes wide range style properties nodes, can set style property node data. list outstanding properties, can find comprehensive list documentation.","code":""},{"path":"https://cynkra.github.io/g6R/articles/nodes.html","id":"main-graphic-properties","dir":"Articles","previous_headings":"Data properties > Styling nodes","what":"Main graphic properties","title":"Nodes","text":"properties used define main graphic style node, color, width, line type. can applied global node option level individual node level. example set color nodes graph:","code":"nodes <- data.frame(id = 1:2) g6(nodes, height = \"200px\") |>   g6_layout(d3_force_layout()) |>   g6_options(     node = list(       style = list(         fill = \"#FFB6C1\", # Node fill color         fillOpacity = 0.5, # Node fill opacity         stroke = \"#000\", # Node border color         lineWidth = 2, # Node border width         radius = 10 # Node corner radius       )     )   )"},{"path":"https://cynkra.github.io/g6R/articles/nodes.html","id":"label-styling","dir":"Articles","previous_headings":"Data properties > Styling nodes","what":"Label styling","title":"Nodes","text":"common properties include label styling:","code":"nodes <- list(   list(     id = 1,     style = list(       label = TRUE, # Whether to display the node label       labelText = \"Node Name\", # Label text content       labelFill = \"#000\", # Label text color       labelFontSize = 15, # Label font size       labelFontWeight = \"normal\", # Label font weight       labelPlacement = \"bottom\" # Label position relative to the main graphic of the node     )   ) )  g6(nodes, height = \"200px\") |>   g6_layout(d3_force_layout())"},{"path":"https://cynkra.github.io/g6R/articles/nodes.html","id":"badges","dir":"Articles","previous_headings":"Data properties > Styling nodes","what":"Badges","title":"Nodes","text":"can add badges nodes using badge property style list. Badges small indicators can display additional information, counts statuses:","code":"nodes <- list(   list(     id = 1,     style = list(       badge = TRUE, # Whether to display the badge       badges = list(         list(text = \"A\", placement = \"right-top\"),         list(text = \"Important\", placement = \"right\"),         list(text = \"Notice\", placement = \"right-bottom\")       ),       badgePalette = c(\"#7E92B5\", \"#F4664A\", \"#FFBE3A\"), # Badge background color palette       badgeFontSize = 7 # Badge font size     )   ) )  g6(nodes, height = \"200px\") |>   g6_layout(d3_force_layout())"},{"path":"https://cynkra.github.io/g6R/articles/nodes.html","id":"ports","dir":"Articles","previous_headings":"Data properties > Styling nodes","what":"Ports","title":"Nodes","text":"Ports special points nodes can used connecting edges. can defined style property node data. can specify position properties port:","code":"nodes <- list(   list(     id = 1,     style = list(       port = TRUE,       ports = list(         list(           key = \"top\",           placement = c(0.5, 1),           fill = \"#7E92B5\"         ),         list(           key = \"right\",           placement = c(1, 0.5),           fill = \"#F4664A\"         ),         list(           key = \"bottom\",           placement = c(0.5, 0),           fill = \"#FFBE3A\"         ),         list(           key = \"left\",           placement = c(0, 0.5),           fill = \"#D580FF\"         )       ),       portR = 3,       portLineWidth = 1,       portStroke = \"#fff\"     )   ) )  g6(nodes, height = \"200px\") |>   g6_layout(d3_force_layout())"},{"path":"https://cynkra.github.io/g6R/articles/nodes.html","id":"states","dir":"Articles","previous_headings":"Data properties","what":"States","title":"Nodes","text":"Nodes can different states can used indicate different conditions interactions. States can set states property node data:","code":"states <- c(   \"default\",   \"selected\",   \"highlight\",   \"active\",   \"inactive\",   \"disabled\" ) nodes <- lapply(seq_along(states), \\(i) {   list(id = i, states = list(states[[i]]), data = list(state = states[[i]])) }) g6(nodes) |>   g6_layout(d3_force_layout()) |>   g6_options(     animation = FALSE,     node = list(       style = list(         labelText = JS(           \"(d) => {             return d.data.state           }\"         )       )     )   )"},{"path":"https://cynkra.github.io/g6R/articles/nodes.html","id":"color-palette","dir":"Articles","previous_headings":"Data properties","what":"Color palette","title":"Nodes","text":"TBD","code":""},{"path":"https://cynkra.github.io/g6R/articles/nodes.html","id":"update-nodes-data","dir":"Articles","previous_headings":"","what":"Update nodes data","title":"Nodes","text":"functions can used Shiny app context. allow get update nodes data graph created. functions : g6_add_nodes(): adds new nodes graph. g6_update_nodes(): updates existing nodes graph. g6_remove_nodes(): removes nodes graph. g6_set_nodes(): set node state. g6_get_nodes(): get nodes data graph.","code":""},{"path":"https://cynkra.github.io/g6R/articles/plugins.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Plugins","text":"Plugins extend functionality G6 graphs adding interactive features, UI components, visual enhancements. can added graph using g6_plugins() function. Similar behaviors, 2 ways add plugins graph - either calling plugin names strings passing plugin functions specific configurations:","code":"# Defaults g6() |>   g6_plugins(\"minimap\", \"tooltip\")  # Fine tune parameters g6() |>   g6_plugins(     minimap(...),     tooltip_plugin(...)   )"},{"path":"https://cynkra.github.io/g6R/articles/plugins.html","id":"contextmenu","dir":"Articles","previous_headings":"","what":"Contextmenu","title":"Plugins","text":"Displays menu selectable operations right-click context-sensitive actions.","code":"nodes <- data.frame(   id = letters[1:8] )  edges <- data.frame(   source = c(\"a\", \"b\", \"c\", \"e\", \"f\", \"g\", \"a\", \"d\"),   target = c(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"e\", \"h\") )  g6(nodes, edges) |>   g6_options(     nodes = list(       style = list(         labelText = JS(           \"(d) => {             return d.id           }\"         ),         labelPlacement = \"center\",         labelFontSize = 12       )     ),     edges = list(       style = list(         stroke = \"#666\",         lineWidth = 2       )     )   ) |>   g6_plugins(\" contextmenu \")"},{"path":"https://cynkra.github.io/g6R/articles/plugins.html","id":"edge-filter-lens","dir":"Articles","previous_headings":"","what":"Edge Filter Lens","title":"Plugins","text":"Filters displays edges within specified area focused analysis.","code":"nodes <- data.frame(   id = letters[1:8] )  edges <- data.frame(   source = c(\"a\", \"b\", \"c\", \"e\", \"f\", \"g\", \"a\", \"d\"),   target = c(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"e\", \"h\") )  g6(nodes, edges) |>   g6_options(     nodes = list(       style = list(         labelText = JS(           \"(d) => {             return d.id           }\"         ),         labelPlacement = \"center\",         labelFontSize = 12       )     ),     edges = list(       style = list(         stroke = \"#666\",         lineWidth = 2       )     )   ) |>   g6_plugins(\" edge-filter-lens \")"},{"path":"https://cynkra.github.io/g6R/articles/plugins.html","id":"fisheye","dir":"Articles","previous_headings":"","what":"Fisheye","title":"Plugins","text":"Provides focus + context exploration experience distortion effects.","code":"nodes <- data.frame(   id = letters[1:8] )  edges <- data.frame(   source = c(\"a\", \"b\", \"c\", \"e\", \"f\", \"g\", \"a\", \"d\"),   target = c(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"e\", \"h\") )  g6(nodes, edges) |>   g6_options(     nodes = list(       style = list(         labelText = JS(           \"(d) => {             return d.id           }\"         ),         labelPlacement = \"center\",         labelFontSize = 12       )     ),     edges = list(       style = list(         stroke = \"#666\",         lineWidth = 2       )     )   ) |>   g6_plugins(\" fisheye \")"},{"path":"https://cynkra.github.io/g6R/articles/plugins.html","id":"grid-line","dir":"Articles","previous_headings":"","what":"Grid Line","title":"Plugins","text":"Displays grid reference lines canvas help element alignment positioning.","code":"nodes <- data.frame(   id = letters[1:8] )  edges <- data.frame(   source = c(\"a\", \"b\", \"c\", \"e\", \"f\", \"g\", \"a\", \"d\"),   target = c(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"e\", \"h\") )  g6(nodes, edges) |>   g6_options(     nodes = list(       style = list(         labelText = JS(           \"(d) => {             return d.id           }\"         ),         labelPlacement = \"center\",         labelFontSize = 12       )     ),     edges = list(       style = list(         stroke = \"#666\",         lineWidth = 2       )     )   ) |>   g6_plugins(\" grid-line \")"},{"path":"https://cynkra.github.io/g6R/articles/plugins.html","id":"minimap","dir":"Articles","previous_headings":"","what":"Minimap","title":"Plugins","text":"Displays thumbnail preview graph, supporting navigation large graphs.","code":"nodes <- data.frame(   id = letters[1:8] )  edges <- data.frame(   source = c(\"a\", \"b\", \"c\", \"e\", \"f\", \"g\", \"a\", \"d\"),   target = c(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"e\", \"h\") )  g6(nodes, edges) |>   g6_options(     nodes = list(       style = list(         labelText = JS(           \"(d) => {             return d.id           }\"         ),         labelPlacement = \"center\",         labelFontSize = 12       )     ),     edges = list(       style = list(         stroke = \"#666\",         lineWidth = 2       )     )   ) |>   g6_plugins(\" minimap \")"},{"path":"https://cynkra.github.io/g6R/articles/plugins.html","id":"snapline","dir":"Articles","previous_headings":"","what":"Snapline","title":"Plugins","text":"Displays alignment reference lines dragging elements ensure precise positioning.","code":"nodes <- data.frame(   id = letters[1:8] )  edges <- data.frame(   source = c(\"a\", \"b\", \"c\", \"e\", \"f\", \"g\", \"a\", \"d\"),   target = c(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"e\", \"h\") )  g6(nodes, edges) |>   g6_options(     nodes = list(       style = list(         labelText = JS(           \"(d) => {             return d.id           }\"         ),         labelPlacement = \"center\",         labelFontSize = 12       )     ),     edges = list(       style = list(         stroke = \"#666\",         lineWidth = 2       )     )   ) |>   g6_plugins(\" snapline \")"},{"path":"https://cynkra.github.io/g6R/articles/plugins.html","id":"toolbar","dir":"Articles","previous_headings":"","what":"Toolbar","title":"Plugins","text":"Provides collection common operation buttons graph manipulation. wish use custom icons, can browse https://.alicdn.com/t/project/2678727/caef142c-804a-4a2f-a914-ae82666a31ee.html?spm=a313x.7781069.1998910419.35 pass icon name icon-<NAME> toolbar getItems parameter. See .","code":"nodes <- data.frame(   id = letters[1:8] )  edges <- data.frame(   source = c(\"a\", \"b\", \"c\", \"e\", \"f\", \"g\", \"a\", \"d\"),   target = c(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"e\", \"h\") )  g6(nodes, edges) |>   g6_options(     nodes = list(       style = list(         labelText = JS(           \"(d) => {             return d.id           }\"         ),         labelPlacement = \"center\",         labelFontSize = 12       )     ),     edges = list(       style = list(         stroke = \"#666\",         lineWidth = 2       )     )   ) |>   g6_plugins(\" toolbar \")"},{"path":"https://cynkra.github.io/g6R/articles/plugins.html","id":"tooltip","dir":"Articles","previous_headings":"","what":"Tooltip","title":"Plugins","text":"Displays detailed information elements hover enhanced interactivity. Doesn’t work Shiny yet due compatibility issue Bootstrap tooltips class.","code":"nodes <- data.frame(   id = letters[1:8] )  edges <- data.frame(   source = c(\"a\", \"b\", \"c\", \"e\", \"f\", \"g\", \"a\", \"d\"),   target = c(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"e\", \"h\") )  g6(nodes, edges) |>   g6_options(     nodes = list(       style = list(         labelText = JS(           \"(d) => {             return d.id           }\"         ),         labelPlacement = \"center\",         labelFontSize = 12       )     ),     edges = list(       style = list(         stroke = \"#666\",         lineWidth = 2       )     )   ) |>   g6_plugins(\" tooltip \")"},{"path":"https://cynkra.github.io/g6R/articles/plugins.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Plugins","text":"Adds background images colors canvas visual enhancement branding.","code":"# Create and render the G6 plot g6(nodes, edges) |>   g6_layout() |>   g6_behaviors(\"drag-element\") |>   g6_options(     animation = FALSE,     node = nodes_options   ) |>   g6_plugins(     background(backgroundColor = \"#f0f2f5\")   )"},{"path":"https://cynkra.github.io/g6R/articles/plugins.html","id":"bubble-sets","dir":"Articles","previous_headings":"","what":"Bubble sets","title":"Plugins","text":"Creates smooth bubble-like element outlines enhanced visual grouping.","code":"# Create and render the G6 plot g6(nodes, edges) |>   g6_layout() |>   g6_behaviors(\"drag-element\") |>   g6_options(     animation = FALSE,     node = nodes_options   ) |>   g6_plugins(     bubble_sets(       key = \"bubble-set-1\",       members = c(\"a\", \"b\", \"c\", \"d\"),       label = TRUE,       labelText = \"cluster 1\",       fill = \"#F08F56\",       stroke = \"#F08F56\",       labelBackground = TRUE,       labelPlacement = \"top\",       labelFill = \"#fff\",       labelPadding = 2,       labelBackgroundFill = \"#F08F56\",       labelBackgroundRadius = 5     ),     bubble_sets(       key = \"bubble-set-2\",       members = c(\"e\", \"f\", \"g\", \"h\"),       label = TRUE,       labelText = \"cluster 2\",       fill = \"#D580FF\",       stroke = \"#D580FF\",       labelBackground = TRUE,       labelPlacement = \"top\",       labelFill = \"#fff\",       labelPadding = 2,       labelBackgroundFill = \"#D580FF\",       labelBackgroundRadius = 5     )   )"},{"path":"https://cynkra.github.io/g6R/articles/plugins.html","id":"fullscreen","dir":"Articles","previous_headings":"","what":"Fullscreen","title":"Plugins","text":"Supports full-screen display exit charts maximize viewing area.","code":"g6(nodes, edges) |>   g6_layout() |>   g6_behaviors(\"drag-element\") |>   g6_options(     animation = FALSE,     nodes = nodes_options   ) |>   g6_plugins(     toolbar(),     fullscreen()   )"},{"path":"https://cynkra.github.io/g6R/articles/plugins.html","id":"hull","dir":"Articles","previous_headings":"","what":"Hull","title":"Plugins","text":"Creates outline specified set nodes visually group related elements.","code":"# Create and render the G6 plot g6(nodes, edges) |>   g6_layout() |>   g6_behaviors(\"drag-element\") |>   g6_options(     animation = FALSE,     node = nodes_options   ) |>   g6_plugins(     hull(       key = \"bubble-set-1\",       members = c(\"a\", \"b\", \"c\", \"d\"),       labelText = \"cluster 1\",       fill = \"#F08F56\",       stroke = \"#F08F56\",       labelFill = \"#fff\",       labelPadding = 2,       labelBackgroundFill = \"#F08F56\",       labelBackgroundRadius = 5     ),     hull(       key = \"bubble-set-2\",       members = c(\"e\", \"f\", \"g\", \"h\"),       labelText = \"cluster 2\",       fill = \"#D580FF\",       stroke = \"#D580FF\",       labelFill = \"#fff\",       labelPadding = 2,       labelBackgroundFill = \"#D580FF\",       labelBackgroundRadius = 5     )   )"},{"path":"https://cynkra.github.io/g6R/articles/plugins.html","id":"legend","dir":"Articles","previous_headings":"","what":"Legend","title":"Plugins","text":"Displays categories corresponding style descriptions chart data.","code":"custom_nodes <- lapply(1:8, \\(i) {   list(     id = letters[i],     style = list(       fill = ifelse(i <= 4, \"#F08F56\", \"#D580FF\")     ),     data = list(cluster = ifelse(i <= 4, \"1\", \"2\"))   ) }) # Create and render the G6 plot g6(custom_nodes, edges) |>   g6_layout() |>   g6_behaviors(\"drag-element\") |>   g6_options(     animation = FALSE,     node = nodes_options   ) |>   g6_plugins(     legend(       position = \"top-left\",       nodeField = \"cluster\"     )   )"},{"path":"https://cynkra.github.io/g6R/articles/plugins.html","id":"timebar","dir":"Articles","previous_headings":"","what":"Timebar","title":"Plugins","text":"work yet … Provides filtering playback control temporal data visualization.","code":"start_date <- as.POSIXct(\"2023-08-01\", tz = \"UTC\") dates <- as.character(seq(start_date, by = \"1 days\", length.out = 3)) times <- lapply(seq_along(dates), \\(i) {   list(     value = i,     time = JS(sprintf(\"new Date('%s').getTime()\", dates[i]))   ) })  custom_nodes <- lapply(seq_along(times), \\(i) {   list(     id = letters[i],     data = list(timestamp = JS(sprintf(\"new Date('%s').getTime()\", dates[i])))   ) }) # Create and render the G6 plot g6(custom_nodes) |>   g6_layout() |>   g6_behaviors(\"drag-element\") |>   g6_options(     animation = FALSE,     node = nodes_options   ) |>   g6_plugins(     timebar(       data = times,       height = 100     )   )"},{"path":"https://cynkra.github.io/g6R/articles/plugins.html","id":"watermark","dir":"Articles","previous_headings":"","what":"Watermark","title":"Plugins","text":"Adds watermark canvas protect copyright brand visualization.","code":"g6(nodes, edges) |>   g6_layout() |>   g6_behaviors(\"drag-element\") |>   g6_options(     animation = FALSE,     node = nodes_options   ) |>   g6_plugins(     watermark(       text = \"G6 Graph\",       opacity = 0.2,       rotate = pi / 12     )   )"},{"path":"https://cynkra.github.io/g6R/articles/plugins.html","id":"history","dir":"Articles","previous_headings":"","what":"History","title":"Plugins","text":"history plugin provides undo redo functionality graph modifications, allowing users revert changes reapply . works well toolbar plugin provide user interface actions:","code":"g6(nodes, edges) |>   g6_layout() |>   g6_behaviors(\"drag-element\") |>   g6_options(     animation = FALSE,     node = nodes_options   ) |>   g6_plugins(     toolbar(       getItems = JS(         \"() => [           { id: 'undo', value: 'undo' },           { id: 'redo', value: 'redo' },         ]\"       ),       onClick = JS(         \"(value, target, current) => {           // redo, undo need to be used with the history plugin           const graph = HTMLWidgets             .find(`#${target.closest('.g6').id}`)             .getWidget();           const history = graph.getPluginInstance('history');           switch (value) {             case 'undo':               history?.undo();               break;             case 'redo':               history?.redo();               break;             default:               break;           }         }\"       )     ),     # Keep 100 events in memory     history(stackSize = 100)   )"},{"path":[]},{"path":"https://cynkra.github.io/g6R/articles/plugins.html","id":"add","dir":"Articles","previous_headings":"Dynamically interact with plugins","what":"Add","title":"Plugins","text":"add plugin dynamically server side Shiny app, can use g6_add_plugin() function. function allows append new plugins existing G6 graph based user interactions reactive data.","code":""},{"path":"https://cynkra.github.io/g6R/articles/plugins.html","id":"update","dir":"Articles","previous_headings":"Dynamically interact with plugins","what":"Update","title":"Plugins","text":"update plugin server side Shiny app, can use g6_update_plugin() function. function allows modify plugin’s parameters dynamically based user input reactive data.","code":""},{"path":"https://cynkra.github.io/g6R/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Granjon. Author, maintainer. David Schoch. Author. cynkra GmbH. Funder. Bristol Myers Squibb. Funder.","code":""},{"path":"https://cynkra.github.io/g6R/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Granjon D, Schoch D (2025). g6R: Graph Visualisation Engine Widget R 'shiny' Apps. R package version 0.2.0, https://github.com/cynkra/g6R.","code":"@Manual{,   title = {g6R: Graph Visualisation Engine Widget for R and 'shiny' Apps},   author = {David Granjon and David Schoch},   year = {2025},   note = {R package version 0.2.0},   url = {https://github.com/cynkra/g6R}, }"},{"path":"https://cynkra.github.io/g6R/index.html","id":"g6r","dir":"","previous_headings":"","what":"Graph Visualisation Engine Widget for R and shiny Apps","title":"Graph Visualisation Engine Widget for R and shiny Apps","text":"g6R provides R bindings G6 graph library. allows create interactive network R, stunning set features, including: Support various layouts, force-directed, radial, circular, hierarchical layouts. Interactive behaviors like zooming, dragging, selecting elements. Plugins additional functionality, minimaps tooltips, context menus, node grouping features like bubble sets, hulls legends. Various data sources including data frames, lists remote JSON urls. Support combos allowing nested nodes. High performance rendering (>20000 nodes).","code":"shinyAppDir(system.file(\"examples\", \"demo\", package = \"g6R\"))"},{"path":"https://cynkra.github.io/g6R/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Graph Visualisation Engine Widget for R and shiny Apps","text":"can install development version g6R GitHub :","code":"# install.packages(\"pak\") pak::pak(\"cynkra/g6R\")"},{"path":"https://cynkra.github.io/g6R/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Graph Visualisation Engine Widget for R and shiny Apps","text":"create g6R graph:","code":"library(g6R) nodes <- data.frame(   id = 1:10,   label = 1:10 )  # Generate random edges edges <- data.frame(   source = c(2, 6, 7),   target = c(1, 3, 9) )  g6(nodes, edges) |>   g6_options(     node = list(       style = list(         labelBackground = TRUE,         labelBackgroundFill = '#FFB6C1',         labelBackgroundRadius = 4,         labelFontFamily = 'Arial',         labelPadding = c(0, 4),         labelText = JS(           \"(d) => {             return d.id         }\"         )       )     )   ) |>   g6_layout(d3_force_layout()) |>   g6_behaviors(     \"zoom-canvas\",     drag_element_force(fixed = TRUE),     click_select(       multiple = TRUE,       onClick = JS(         \"(e) => {             console.log(e);           }\"       )     ),     brush_select(),     create_edge()   ) |>   g6_plugins(     \"minimap\",     \"tooltip\",     context_menu()   )"},{"path":"https://cynkra.github.io/g6R/reference/JS.html","id":null,"dir":"Reference","previous_headings":"","what":"Marks as string to be processed as a JS function — JS","title":"Marks as string to be processed as a JS function — JS","text":"Useful htmlwidgets","code":""},{"path":"https://cynkra.github.io/g6R/reference/JS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Marks as string to be processed as a JS function — JS","text":"","code":"JS(...)"},{"path":"https://cynkra.github.io/g6R/reference/JS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Marks as string to be processed as a JS function — JS","text":"... valid JS element.","code":""},{"path":"https://cynkra.github.io/g6R/reference/JS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Marks as string to be processed as a JS function — JS","text":"character vector class \"JS_EVAL\" can used htmlwidgets mark JavaScript function.","code":""},{"path":"https://cynkra.github.io/g6R/reference/animation_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Animation Configuration for G6 Graphs — animation_config","title":"Create Animation Configuration for G6 Graphs — animation_config","text":"Configures animation settings G6 graph elements. settings control graph elements animate changes occur.","code":""},{"path":"https://cynkra.github.io/g6R/reference/animation_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Animation Configuration for G6 Graphs — animation_config","text":"","code":"animation_config(   delay = NULL,   direction = c(\"forward\", \"alternate\", \"alternate-reverse\", \"normal\", \"reverse\"),   duration = NULL,   easing = NULL,   fill = c(\"none\", \"auto\", \"backwards\", \"both\", \"forwards\"),   iterations = NULL )"},{"path":"https://cynkra.github.io/g6R/reference/animation_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Animation Configuration for G6 Graphs — animation_config","text":"delay Animation delay time milliseconds. time wait animation begins. Must non-negative numeric value. direction Animation playback direction. Options: \"forward\": Plays normally (default) \"alternate\": Plays forward, reverse \"alternate-reverse\": Plays reverse, forward \"normal\": forward \"reverse\": Plays reverse direction duration Animation duration milliseconds. length time animation take complete one cycle. Must non-negative numeric value. easing Animation easing function. Controls rate change animation. Common values include \"linear\", \"ease\", \"ease-\", \"ease-\", \"ease--\", cubic-bezier values. fill Fill mode animation ends. Options: \"none\": Element returns initial state animation ends (default) \"auto\": Follows rules animation effect \"backwards\": Element retains first keyframe values delay period \"\": Combines forwards backwards behavior \"forwards\": Element retains final keyframe values animation ends iterations Number times animation repeat. value Inf cause animation repeat indefinitely. Must non-negative numeric value.","code":""},{"path":"https://cynkra.github.io/g6R/reference/animation_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Animation Configuration for G6 Graphs — animation_config","text":"list containing animation configuration can passed g6_options().","code":""},{"path":"https://cynkra.github.io/g6R/reference/animation_config.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Animation Configuration for G6 Graphs — animation_config","text":"Animation configuration allows fine-tuning timing behavior animations G6 graphs. includes controlling duration, delay, easing function, direction, aspects graph elements animate.","code":""},{"path":"https://cynkra.github.io/g6R/reference/animation_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Animation Configuration for G6 Graphs — animation_config","text":"","code":"# Basic animation with duration config <- animation_config(   duration = 500 )  # Complex animation configuration config <- animation_config(   delay = 100,   duration = 800,   easing = \"ease-in-out\",   direction = \"alternate\",   fill = \"forwards\",   iterations = 2 )  # Infinite animation config <- animation_config(   duration = 1000,   easing = \"linear\",   iterations = Inf )"},{"path":"https://cynkra.github.io/g6R/reference/antv_dagre_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate G6 AntV Dagre layout configuration — antv_dagre_layout","title":"Generate G6 AntV Dagre layout configuration — antv_dagre_layout","text":"function creates configuration list G6 AntV Dagre layout available options parameters.","code":""},{"path":"https://cynkra.github.io/g6R/reference/antv_dagre_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate G6 AntV Dagre layout configuration — antv_dagre_layout","text":"","code":"antv_dagre_layout(   rankdir = c(\"TB\", \"BT\", \"LR\", \"RL\"),   align = c(\"UL\", \"UR\", \"DL\", \"DR\"),   nodesep = 50,   nodesepFunc = NULL,   ranksep = 100,   ranksepFunc = NULL,   ranker = c(\"network-simplex\", \"tight-tree\", \"longest-path\"),   nodeSize = NULL,   controlPoints = FALSE,   begin = NULL,   sortByCombo = FALSE,   edgeLabelSpace = TRUE,   nodeOrder = NULL,   radial = FALSE,   focusNode = NULL,   preset = NULL,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/antv_dagre_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate G6 AntV Dagre layout configuration — antv_dagre_layout","text":"rankdir Layout direction: \"TB\" (top bottom), \"BT\" (bottom top), \"LR\" (left right), \"RL\" (right left). align Node alignment: \"UL\" (upper left), \"UR\" (upper right), \"DL\" (left), \"DR\" (right). nodesep Node spacing (px). rankdir \"TB\" \"BT\", horizontal. spacing nodes; rankdir \"LR\" \"RL\", vertical spacing nodes. nodesepFunc Function customize node spacing different nodes, form function(node) returns number. higher priority nodesep. ranksep Layer spacing (px). rankdir \"TB\" \"BT\", vertical spacing adjacent layers; rankdir \"LR\" \"RL\", horizontal spacing. ranksepFunc Function customize layer spacing, form function(node) returns number. higher priority ranksep. ranker Algorithm assigning ranks nodes: \"network-simplex\", \"tight-tree\", \"longest-path\". nodeSize Node size collision detection. Can single number (width/height), array [width, height], function returns either. controlPoints Whether retain edge control points. begin Alignment position upper left corner layout. Can [x, y] [x, y, z]. sortByCombo Whether sort nodes layer parentId prevent combo overlap. edgeLabelSpace Whether leave space edge labels. nodeOrder Reference array node order layer, containing node id values. radial Whether perform radial layout based dagre. focusNode Focused node (used radial=TRUE). Can node ID node object. preset Node positions reference layout calculation. ... Additional parameters pass layout.","code":""},{"path":"https://cynkra.github.io/g6R/reference/antv_dagre_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate G6 AntV Dagre layout configuration — antv_dagre_layout","text":"list containing configuration G6 AntV Dagre layout.","code":""},{"path":"https://cynkra.github.io/g6R/reference/antv_dagre_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate G6 AntV Dagre layout configuration — antv_dagre_layout","text":"","code":"# Basic dagre layout dagre_config <- antv_dagre_layout()  # Horizontal layout with custom spacing dagre_config <- antv_dagre_layout(   rankdir = \"LR\",   align = \"UL\",   nodesep = 80,   ranksep = 150 )  # Radial layout with focus node dagre_config <- antv_dagre_layout(   radial = TRUE,   focusNode = \"node1\",   ranker = \"tight-tree\" )"},{"path":"https://cynkra.github.io/g6R/reference/auto_adapt_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Auto Adapt Label Behavior — auto_adapt_label","title":"Configure Auto Adapt Label Behavior — auto_adapt_label","text":"Creates configuration object auto-adapt-label behavior G6. behavior automatically adjusts label positions reduce overlapping improve readability graph visualization.","code":""},{"path":"https://cynkra.github.io/g6R/reference/auto_adapt_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Auto Adapt Label Behavior — auto_adapt_label","text":"","code":"auto_adapt_label(   key = \"auto-adapt-label\",   enable = TRUE,   throttle = 100,   padding = 0,   sort = NULL,   sortNode = list(type = \"degree\"),   sortEdge = NULL,   sortCombo = NULL,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/auto_adapt_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Auto Adapt Label Behavior — auto_adapt_label","text":"key Unique identifier behavior (string, default: \"auto-adapt-label\"). enable Whether enable behavior (JS function, default: returns TRUE events). throttle Throttle time milliseconds optimize performance (numeric, default: 100). padding Padding space around labels pixels (numeric, default: 0). sort Global sorting rule element types (list JS function, default: NULL). sortNode Sorting rule specifically node labels (list, default: list(type = \"degree\")). sortEdge Sorting rule specifically edge labels (list, default: NULL). sortCombo Sorting rule specifically combo labels (list, default: NULL). ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/behavior/auto-adapt-label. Sorting parameters determine labels take priority space limited: sort provided, applies element types overrides type-specific settings Type-specific sorting (sortNode, sortEdge, sortCombo) applies sort NULL default sorting nodes degree (higher degree nodes' labels shown first)","code":""},{"path":"https://cynkra.github.io/g6R/reference/auto_adapt_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Auto Adapt Label Behavior — auto_adapt_label","text":"list configuration settings auto-adapt-label behavior.","code":""},{"path":"https://cynkra.github.io/g6R/reference/auto_adapt_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Auto Adapt Label Behavior — auto_adapt_label","text":"","code":"# Basic configuration with defaults config <- auto_adapt_label()  # Custom configuration with more padding and custom throttle config <- auto_adapt_label(   key = \"my-label-adapter\",   throttle = 200,   padding = 5 )   # Using a custom enable function config <- auto_adapt_label(   enable = JS(\"(e) => e.targetType === 'node'\") )"},{"path":"https://cynkra.github.io/g6R/reference/auto_fit_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Auto-Fit Configuration for G6 Graphs — auto_fit_config","title":"Create Auto-Fit Configuration for G6 Graphs — auto_fit_config","text":"Configures auto-fit behavior G6 graph. Auto-fit automatically adjusts view fit elements centers within canvas.","code":""},{"path":"https://cynkra.github.io/g6R/reference/auto_fit_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Auto-Fit Configuration for G6 Graphs — auto_fit_config","text":"","code":"auto_fit_config(   type = c(\"view\", \"center\"),   when = c(\"overflow\", \"always\"),   direction = c(\"x\", \"y\", \"both\"),   duration = 1000,   easing = c(\"ease-in-out\", \"ease\", \"ease-in\", \"ease-out\", \"linear\", \"cubic-bezier\",     \"step-start\", \"step-end\") )"},{"path":"https://cynkra.github.io/g6R/reference/auto_fit_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Auto-Fit Configuration for G6 Graphs — auto_fit_config","text":"type auto-fit mode use. Options: \"view\": Scale translate graph fit elements within view (default) \"center\": translate graph center elements without scaling auto-fit triggered. Options: \"overflow\": Trigger auto-fit elements overflow canvas (default) \"always\": Always perform auto-fit graph data changes direction direction auto-fit adjustment. Options: \"x\": Adjust along x-axis \"y\": Adjust along y-axis \"\": Adjust x y directions (default) duration duration auto-fit animation milliseconds (default: 1000) easing animation easing function use. Options: \"ease--\": Slow beginning end animation (default) \"ease\": Standard easing \"ease-\": Slow beginning \"ease-\": Slow end \"linear\": Constant speed throughout \"cubic-bezier\": Custom cubic-bezier curve \"step-start\": Jump immediately end state \"step-end\": Jump end end state","code":""},{"path":"https://cynkra.github.io/g6R/reference/auto_fit_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Auto-Fit Configuration for G6 Graphs — auto_fit_config","text":"list containing auto-fit configuration can passed g6_options().","code":""},{"path":"https://cynkra.github.io/g6R/reference/auto_fit_config.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Auto-Fit Configuration for G6 Graphs — auto_fit_config","text":"auto-fit feature helps ensure graph elements remain visible within canvas. can configured either fit elements view center , can triggered different conditions.","code":""},{"path":"https://cynkra.github.io/g6R/reference/auto_fit_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Auto-Fit Configuration for G6 Graphs — auto_fit_config","text":"","code":"# Basic auto-fit configuration with default settings config <- auto_fit_config()  # Auto-fit with only centering (no scaling) config <- auto_fit_config(type = \"center\")  # Auto-fit that always triggers when graph data changes config <- auto_fit_config(when = \"always\")  # Auto-fit only in the x direction config <- auto_fit_config(direction = \"x\")  # Auto-fit with a fast animation config <- auto_fit_config(duration = 300, easing = \"ease-out\")"},{"path":"https://cynkra.github.io/g6R/reference/background.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Background Plugin for G6 — background","title":"Configure Background Plugin for G6 — background","text":"Creates configuration object background plugin G6. plugin adds customizable background graph canvas.","code":""},{"path":"https://cynkra.github.io/g6R/reference/background.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Background Plugin for G6 — background","text":"","code":"background(   key = NULL,   width = \"100%\",   height = \"100%\",   backgroundColor = NULL,   backgroundImage = NULL,   backgroundSize = \"cover\",   backgroundPosition = NULL,   backgroundRepeat = NULL,   opacity = NULL,   transition = \"background 0.5s\",   zIndex = \"-1\",   ... )"},{"path":"https://cynkra.github.io/g6R/reference/background.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Background Plugin for G6 — background","text":"key Unique identifier updates (string, default: NULL). width Background width (string, default: \"100%\"). height Background height (string, default: \"100%\"). backgroundColor Background color (string, default: NULL). backgroundImage Background image URL (string, default: NULL). backgroundSize Background size (string, default: \"cover\"). backgroundPosition Background position (string, default: NULL). backgroundRepeat Background repeat (string, default: NULL). opacity Background opacity (string, default: NULL). transition Transition animation (string, default: \"background 0.5s\"). zIndex Stacking order (string, default: \"-1\"). ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/plugin/background.","code":""},{"path":"https://cynkra.github.io/g6R/reference/background.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Background Plugin for G6 — background","text":"list configuration settings background plugin.","code":""},{"path":"https://cynkra.github.io/g6R/reference/background.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Background Plugin for G6 — background","text":"","code":"# Basic background color bg <- background(backgroundColor = \"#f0f0f0\")  # Background with image bg <- background(   backgroundImage = \"https://example.com/background.jpg\",   backgroundSize = \"contain\",   backgroundRepeat = \"no-repeat\",   backgroundPosition = \"center\" )  # Semi-transparent background with transition bg <- background(   backgroundColor = \"#000000\",   opacity = \"0.3\",   transition = \"all 1s ease-in-out\" )"},{"path":"https://cynkra.github.io/g6R/reference/brush_select.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Brush Selection Interaction — brush_select","title":"Configure Brush Selection Interaction — brush_select","text":"Creates configuration object brush selection interaction graph visualizations. function configures elements selected using brush selection tool.","code":""},{"path":"https://cynkra.github.io/g6R/reference/brush_select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Brush Selection Interaction — brush_select","text":"","code":"brush_select(   key = \"brush-select\",   animation = FALSE,   enable = JS(\"(e) => {\\n      return true\\n    }\"),   enableElements = \"node\",   immediately = FALSE,   mode = c(\"default\", \"union\", \"intersect\", \"diff\"),   onSelect = NULL,   state = c(\"selected\", \"active\", \"inactive\", \"disabled\", \"highlight\"),   style = NULL,   trigger = \"shift\",   ... )"},{"path":"https://cynkra.github.io/g6R/reference/brush_select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Brush Selection Interaction — brush_select","text":"key Behavior unique identifier. Useful modify behavior JS side. animation Whether enable animation (boolean, default: FALSE). enable Whether enable brush select functionality (boolean function, default: TRUE). enableElements Types elements can selected (character vector, default: \"node\"). Can c(\"node\", \"edge\", \"combo\"). immediately Whether select immediately default mode (boolean, default: FALSE). mode Selection mode: \"union\", \"intersect\", \"diff\", \"default\" (string, default: \"default\"). onSelect Callback selected element state (JS function). state State switch selected (string, default: \"selected\"). style Style specification selection box (list). See https://g6.antv.antgroup.com/en/manual/behavior/brush-select#style. trigger Shortcut keys selection (character vector). ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/behavior/brush-select.","code":""},{"path":"https://cynkra.github.io/g6R/reference/brush_select.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Brush Selection Interaction — brush_select","text":"list configuration settings brush select behavior.","code":""},{"path":"https://cynkra.github.io/g6R/reference/brush_select.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Brush Selection Interaction — brush_select","text":"","code":"# Basic configuration config <- brush_select()  # Custom configuration config <- brush_select(   animation = TRUE,   enableElements = c(\"node\", \"edge\"),   mode = \"union\",   state = \"highlight\",   style = list(     fill = \"rgba(0, 0, 255, 0.1)\",     stroke = \"blue\",     lineWidth = 2   ),   trigger = c(\"Shift\") )"},{"path":"https://cynkra.github.io/g6R/reference/bubble_sets.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Bubble Sets Plugin for G6 — bubble_sets","title":"Configure Bubble Sets Plugin for G6 — bubble_sets","text":"Creates configuration object bubble-sets plugin G6. plugin creates bubble-like contours around groups specified elements.","code":""},{"path":"https://cynkra.github.io/g6R/reference/bubble_sets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Bubble Sets Plugin for G6 — bubble_sets","text":"","code":"bubble_sets(   members,   key = \"bubble-sets\",   avoidMembers = NULL,   label = TRUE,   labelPlacement = c(\"bottom\", \"left\", \"right\", \"top\", \"center\"),   labelBackground = FALSE,   labelPadding = 0,   labelCloseToPath = TRUE,   labelAutoRotate = TRUE,   labelOffsetX = 0,   labelOffsetY = 0,   labelMaxWidth = NULL,   maxRoutingIterations = 100,   maxMarchingIterations = 20,   pixelGroup = 4,   edgeR0 = NULL,   edgeR1 = NULL,   nodeR0 = NULL,   nodeR1 = NULL,   morphBuffer = NULL,   threshold = NULL,   memberInfluenceFactor = NULL,   edgeInfluenceFactor = NULL,   nonMemberInfluenceFactor = NULL,   virtualEdges = NULL,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/bubble_sets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Bubble Sets Plugin for G6 — bubble_sets","text":"members Member elements, including nodes edges (character/numeric vector, required). key Unique identifier updates (string, default: NULL). avoidMembers Elements avoid drawing contours (character/numeric vector, default: NULL). label Whether display labels (boolean, default: TRUE). labelPlacement Label position (string, default: \"bottom\"). labelBackground Whether display background (boolean, default: FALSE). labelPadding Label padding (numeric numeric vector, default: 0). labelCloseToPath Whether label close contour (boolean, default: TRUE). labelAutoRotate Whether label rotates contour (boolean, default: TRUE). labelOffsetX Label x-axis offset (numeric, default: 0). labelOffsetY Label y-axis offset (numeric, default: 0). labelMaxWidth Maximum width text (numeric, default: NULL). maxRoutingIterations Maximum iterations path calculation (numeric, default: 100). maxMarchingIterations Maximum iterations contour calculation (numeric, default: 20). pixelGroup Number pixels per potential area group (numeric, default: 4). edgeR0 Edge radius parameter R0 (numeric, default: NULL). edgeR1 Edge radius parameter R1 (numeric, default: NULL). nodeR0 Node radius parameter R0 (numeric, default: NULL). nodeR1 Node radius parameter R1 (numeric, default: NULL). morphBuffer Morph buffer size (numeric, default: NULL). threshold Threshold (numeric, default: NULL). memberInfluenceFactor Member influence factor (numeric, default: NULL). edgeInfluenceFactor Edge influence factor (numeric, default: NULL). nonMemberInfluenceFactor Non-member influence factor (numeric, default: NULL). virtualEdges Whether use virtual edges (boolean, default: NULL). ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/plugin/bubble-sets.","code":""},{"path":"https://cynkra.github.io/g6R/reference/bubble_sets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Bubble Sets Plugin for G6 — bubble_sets","text":"list configuration settings bubble-sets plugin.","code":""},{"path":"https://cynkra.github.io/g6R/reference/bubble_sets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Bubble Sets Plugin for G6 — bubble_sets","text":"","code":"# Basic bubble set around specific nodes bubble <- bubble_sets(   members = c(\"node1\", \"node2\", \"node3\"),   label = TRUE )  # More customized bubble set bubble <- bubble_sets(   key = \"team-a\",   members = c(\"node1\", \"node2\", \"node3\", \"edge1\", \"edge2\"),   avoidMembers = c(\"node4\", \"node5\"),   labelPlacement = \"top\",   labelBackground = TRUE,   labelPadding = c(4, 2),   maxRoutingIterations = 150 )  # Bubble set with advanced parameters bubble <- bubble_sets(   members = c(\"node1\", \"node2\", \"node3\"),   pixelGroup = 6,   edgeR0 = 10,   nodeR0 = 5,   memberInfluenceFactor = 0.8,   edgeInfluenceFactor = 0.5,   nonMemberInfluenceFactor = 0.3,   virtualEdges = TRUE )"},{"path":"https://cynkra.github.io/g6R/reference/canvas_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Canvas Configuration for G6 Graphs — canvas_config","title":"Create Canvas Configuration for G6 Graphs — canvas_config","text":"Configures canvas settings G6 graph. canvas rendering surface graph drawn.","code":""},{"path":"https://cynkra.github.io/g6R/reference/canvas_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Canvas Configuration for G6 Graphs — canvas_config","text":"","code":"canvas_config(   container = NULL,   devicePixelRatio = NULL,   width = NULL,   height = NULL,   cursor = NULL,   background = NULL,   renderer = NULL,   enableMultiLayer = NULL )"},{"path":"https://cynkra.github.io/g6R/reference/canvas_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Canvas Configuration for G6 Graphs — canvas_config","text":"container container element canvas. Can CSS selector string HTML element reference. devicePixelRatio device pixel ratio use rendering. Higher values provide sharper rendering high-DPI displays may impact performance. specified, device's pixel ratio used. width width canvas pixels. height height canvas pixels. cursor CSS cursor style use hovering canvas. Common values include \"default\", \"pointer\", \"move\", etc. background background color canvas. Can valid CSS color value (hex, rgb, rgba, named colors). renderer function returns renderer different layers. function takes layer parameter can 'background', 'main', 'label', 'transient'. enableMultiLayer Whether enable multi-layer rendering. non-dynamic parameter effective initialization. Multi-layer rendering can improve performance complex graphs separating elements different rendering layers.","code":""},{"path":"https://cynkra.github.io/g6R/reference/canvas_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Canvas Configuration for G6 Graphs — canvas_config","text":"list containing canvas configuration can passed g6_options().","code":""},{"path":"https://cynkra.github.io/g6R/reference/canvas_config.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Canvas Configuration for G6 Graphs — canvas_config","text":"Canvas configuration controls graph rendered, including size, scaling, background, rendering layer settings. function provides structured way configure canvas-related options. Note many settings (container, width, height, devicePixelRatio, background, cursor) can also set directly main graph configuration, automatically converted canvas configuration items.","code":""},{"path":"https://cynkra.github.io/g6R/reference/canvas_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Canvas Configuration for G6 Graphs — canvas_config","text":"","code":"# Basic canvas configuration config <- canvas_config(   container = \"#graph-container\",   width = 800,   height = 600 )  # Canvas with multi-layer rendering enabled config <- canvas_config(   container = \"#graph-container\",   width = 1000,   height = 700,   enableMultiLayer = TRUE,   cursor = \"grab\" )"},{"path":"https://cynkra.github.io/g6R/reference/circular_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate G6 AntV circular layout configuration — circular_layout","title":"Generate G6 AntV circular layout configuration — circular_layout","text":"function creates configuration list G6 AntV circular layout available options parameters.","code":""},{"path":"https://cynkra.github.io/g6R/reference/circular_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate G6 AntV circular layout configuration — circular_layout","text":"","code":"circular_layout(   angleRatio = 1,   center = NULL,   clockwise = TRUE,   divisions = 1,   nodeSize = 10,   nodeSpacing = 10,   ordering = NULL,   radius = NULL,   startAngle = 0,   endAngle = 2 * pi,   startRadius = NULL,   endRadius = NULL,   width = NULL,   height = NULL,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/circular_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate G6 AntV circular layout configuration — circular_layout","text":"angleRatio many 2*PI first node last node. center Center layout vector c(x, y) c(x, y, z). clockwise arranged clockwise? divisions Number segments nodes placed ring. nodeSize Node size (diameter) collision detection. nodeSpacing Minimum distance rings. ordering Basis sorting nodes (\"topology\", \"topology-directed\", \"degree\"). radius Radius circle (overrides startRadius endRadius). startAngle Starting angle layout. endAngle End angle layout. startRadius Starting radius spiral layout. endRadius End radius spiral layout. width Width layout. height Height layout. ... Additional parameters pass layout. See https://g6.antv.antgroup.com/en/manual/layout/circular-layout.","code":""},{"path":"https://cynkra.github.io/g6R/reference/circular_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate G6 AntV circular layout configuration — circular_layout","text":"list containing configuration G6 AntV circular layout.","code":""},{"path":"https://cynkra.github.io/g6R/reference/circular_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate G6 AntV circular layout configuration — circular_layout","text":"","code":"circular_config <- circular_layout(   radius = 200,   startAngle = 0,   endAngle = pi,   clockwise = FALSE )"},{"path":"https://cynkra.github.io/g6R/reference/click_select.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Click Select Behavior — click_select","title":"Configure Click Select Behavior — click_select","text":"Creates configuration object click-select behavior G6. allows users select graph elements clicking.","code":""},{"path":"https://cynkra.github.io/g6R/reference/click_select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Click Select Behavior — click_select","text":"","code":"click_select(   key = \"click-select\",   animation = TRUE,   degree = 0,   enable = TRUE,   multiple = FALSE,   state = c(\"selected\", \"active\", \"inactive\", \"disabled\", \"highlight\"),   neighborState = c(\"selected\", \"active\", \"inactive\", \"disabled\", \"highlight\"),   unselectedState = NULL,   onClick = NULL,   trigger = \"shift\",   ... )"},{"path":"https://cynkra.github.io/g6R/reference/click_select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Click Select Behavior — click_select","text":"key Behavior unique identifier. Useful modify behavior JS side. animation Whether enable animation effects switching element states (boolean, default: TRUE). degree Controls highlight spread range (number function, default: 0). enable Whether enable click element function (boolean function, default: TRUE). multiple Whether allow multiple selections (boolean, default: FALSE). state state applied element selected (string, default: \"selected\"). neighborState state applied elements n-degree relationships (string, default: \"selected\"). unselectedState state applied elements (string, default: NULL). onClick Callback element clicked (function, default: NULL). trigger Keys multi-selection (character vector, default: c(\"shift\")). ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/behavior/click-select.","code":""},{"path":"https://cynkra.github.io/g6R/reference/click_select.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Click Select Behavior — click_select","text":"list configuration settings click select behavior.","code":""},{"path":"https://cynkra.github.io/g6R/reference/click_select.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Click Select Behavior — click_select","text":"","code":"# Basic configuration config <- click_select()  # Custom configuration config <- click_select(   animation = FALSE,   degree = 1,   multiple = TRUE,   state = \"active\",   neighborState = \"highlight\",   unselectedState = \"inactive\",   trigger = c(\"Control\") )"},{"path":"https://cynkra.github.io/g6R/reference/collapse_expand.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Collapse Expand Behavior — collapse_expand","title":"Configure Collapse Expand Behavior — collapse_expand","text":"Creates configuration object collapse-expand behavior G6. allows users collapse expand nodes/combos child elements.","code":""},{"path":"https://cynkra.github.io/g6R/reference/collapse_expand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Collapse Expand Behavior — collapse_expand","text":"","code":"collapse_expand(   key = \"collapse-expand\",   animation = TRUE,   enable = TRUE,   trigger = \"dblclick\",   onCollapse = NULL,   onExpand = NULL,   align = TRUE,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/collapse_expand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Collapse Expand Behavior — collapse_expand","text":"key Behavior unique identifier. Useful modify behavior JS side. animation Enable expand/collapse animation effects (boolean, default: TRUE). enable Enable expand/collapse functionality (boolean function, default: TRUE). trigger Trigger method: \"click\" \"dblclick\" (string, default: \"dblclick\"). onCollapse Callback function collapse completed (function, default: NULL). onExpand Callback function expand completed (function, default: NULL). align Align target element avoid view offset (boolean, default: TRUE). ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/behavior/collapse-expand.","code":""},{"path":"https://cynkra.github.io/g6R/reference/collapse_expand.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Collapse Expand Behavior — collapse_expand","text":"list configuration settings collapse-expand behavior.","code":""},{"path":"https://cynkra.github.io/g6R/reference/collapse_expand.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Collapse Expand Behavior — collapse_expand","text":"","code":"# Basic configuration config <- collapse_expand()"},{"path":"https://cynkra.github.io/g6R/reference/combo_combined_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an AntV Combo Combined Layout — combo_combined_layout","title":"Create an AntV Combo Combined Layout — combo_combined_layout","text":"Creates combo combined layout configuration G6 graphs. layout algorithm combines different layout strategies elements inside combos outermost layer, providing hierarchical organization graph elements.","code":""},{"path":"https://cynkra.github.io/g6R/reference/combo_combined_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an AntV Combo Combined Layout — combo_combined_layout","text":"","code":"combo_combined_layout(   center = NULL,   comboPadding = 10,   innerLayout = NULL,   nodeSize = 10,   outerLayout = NULL,   spacing = NULL,   treeKey = NULL,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/combo_combined_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an AntV Combo Combined Layout — combo_combined_layout","text":"center Layout center coordinates. numeric vector length 2 [x, y]. NULL, uses graph center. Default NULL. comboPadding Padding value inside combo, used force calculation, rendering. recommended set value visual padding. Can number, numeric vector, function, JS function. Default 10. innerLayout Layout algorithm elements inside combo. Layout object function. NULL, uses ConcentricLayout default. nodeSize Node size (diameter), used collision detection. specified, calculated node's size property. Can number, numeric vector, function, JS function. Default 10. outerLayout Layout algorithm outermost layer. Layout object function. NULL, uses ForceLayout default. spacing Minimum spacing node/combo edges preventNodeOverlap preventOverlap true. Can number, function, JS function different nodes. Default NULL. treeKey Tree key identifier character string. Default NULL. ... Additional parameters passed layout configuration. See https://g6.antv.antgroup.com/en/manual/layout/combo-combined-layout.","code":""},{"path":"https://cynkra.github.io/g6R/reference/combo_combined_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an AntV Combo Combined Layout — combo_combined_layout","text":"layout configuration object use G6 graphs.","code":""},{"path":"https://cynkra.github.io/g6R/reference/combo_combined_layout.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an AntV Combo Combined Layout — combo_combined_layout","text":"combo combined layout particularly useful graphs hierarchical structures want different layout algorithms different levels hierarchy. inner layout handles elements within combos, outer layout manages overall arrangement.","code":""},{"path":[]},{"path":"https://cynkra.github.io/g6R/reference/combo_combined_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an AntV Combo Combined Layout — combo_combined_layout","text":"","code":"# Basic combo combined layout layout <- combo_combined_layout()  # Custom configuration with specific center and padding layout <- combo_combined_layout(   comboPadding = 20,   nodeSize = 15,   spacing = 10 )"},{"path":"https://cynkra.github.io/g6R/reference/combo_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Combo Options Configuration for G6 Graphs — combo_options","title":"Create Combo Options Configuration for G6 Graphs — combo_options","text":"Configures general options combos G6 graph. settings control type, style, state, palette, animation combos.","code":""},{"path":"https://cynkra.github.io/g6R/reference/combo_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Combo Options Configuration for G6 Graphs — combo_options","text":"","code":"combo_options(   type = \"circle\",   style = NULL,   state = NULL,   palette = NULL,   animation = NULL )"},{"path":"https://cynkra.github.io/g6R/reference/combo_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Combo Options Configuration for G6 Graphs — combo_options","text":"type Combo type. Can built-combo type name custom combo name. Built-types include \"circle\", \"rect\", \"polygon\", etc. Default: \"circle\". style Combo style configuration. Controls appearance combos including color, size, border, etc. Default: NULL. state Defines style combo different states, hover, selected, disabled, etc. list mapping state names style configurations. Default: NULL. palette Defines color palette combo, used map colors based different data. Default: NULL. animation Defines animation effect combo. Can created animation_config(). Default: NULL.","code":""},{"path":"https://cynkra.github.io/g6R/reference/combo_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Combo Options Configuration for G6 Graphs — combo_options","text":"list containing combo options configuration can passed g6_options().","code":""},{"path":"https://cynkra.github.io/g6R/reference/combo_options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Combo Options Configuration for G6 Graphs — combo_options","text":"Combo options allow defining combos (node groupings) appear behave G6 graph. includes selecting combo types, setting styles, configuring state-based appearances, defining color palettes, specifying animation effects.","code":""},{"path":"https://cynkra.github.io/g6R/reference/combo_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Combo Options Configuration for G6 Graphs — combo_options","text":"","code":"# Basic combo options with default circle type options <- combo_options()  # Rectangle combo with custom style options <- combo_options(   type = \"rect\",   style = list(     fill = \"#F6F6F6\",     stroke = \"#CCCCCC\",     lineWidth = 1   ) )"},{"path":"https://cynkra.github.io/g6R/reference/compact_box_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate G6 AntV Compact Box layout configuration — compact_box_layout","title":"Generate G6 AntV Compact Box layout configuration — compact_box_layout","text":"function creates configuration list G6 AntV Compact Box layout available options parameters. Compact Box layout designed efficiently laying trees hierarchical structures.","code":""},{"path":"https://cynkra.github.io/g6R/reference/compact_box_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate G6 AntV Compact Box layout configuration — compact_box_layout","text":"","code":"compact_box_layout(   direction = c(\"LR\", \"RL\", \"TB\", \"BT\", \"H\", \"V\"),   getSide = NULL,   getId = NULL,   getWidth = NULL,   getHeight = NULL,   getHGap = NULL,   getVGap = NULL,   radial = FALSE,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/compact_box_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate G6 AntV Compact Box layout configuration — compact_box_layout","text":"direction Layout direction: \"LR\" (left right), \"RL\" (right left), \"TB\" (top bottom), \"BT\" (bottom top), \"H\" (horizontal), \"V\" (vertical) getSide Function set nodes arranged left/right side root node. set, algorithm automatically assigns nodes left/right side. Note: parameter effective layout direction \"H\". Function format: function(node) { return \"left\" \"right\" } getId Callback function generating node IDs. Function format: function(node) { return string } getWidth Function calculate width node. Function format: function(node) { return number } getHeight Function calculate height node. Function format: function(node) { return number } getHGap Function calculate horizontal gap node. Function format: function(node) { return number } getVGap Function calculate vertical gap node. Function format: function(node) { return number } radial Whether enable radial layout ... Additional parameters pass layout. See https://g6.antv.antgroup.com/en/manual/layout/compact-box-layout.","code":""},{"path":"https://cynkra.github.io/g6R/reference/compact_box_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate G6 AntV Compact Box layout configuration — compact_box_layout","text":"list containing configuration G6 AntV Compact Box layout.","code":""},{"path":"https://cynkra.github.io/g6R/reference/compact_box_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate G6 AntV Compact Box layout configuration — compact_box_layout","text":"","code":"# Basic compact box layout box_config <- compact_box_layout()  # Vertical compact box layout box_config <- compact_box_layout(   direction = \"TB\" )  # Radial layout box_config <- compact_box_layout(   radial = TRUE )"},{"path":"https://cynkra.github.io/g6R/reference/concentric_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate G6 AntV Concentric layout configuration — concentric_layout","title":"Generate G6 AntV Concentric layout configuration — concentric_layout","text":"function creates configuration list G6 AntV Concentric layout available options parameters. Concentric layout places nodes concentric circles based centrality measure.","code":""},{"path":"https://cynkra.github.io/g6R/reference/concentric_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate G6 AntV Concentric layout configuration — concentric_layout","text":"","code":"concentric_layout(   center = NULL,   clockwise = FALSE,   equidistant = FALSE,   width = NULL,   height = NULL,   sortBy = \"degree\",   maxLevelDiff = NULL,   nodeSize = 30,   nodeSpacing = 10,   preventOverlap = FALSE,   startAngle = 3/2 * pi,   sweep = NULL,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/concentric_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate G6 AntV Concentric layout configuration — concentric_layout","text":"center center position circular layout [x, y] [x, y, z]. default, center position current container. clockwise Whether nodes arranged clockwise order. equidistant Whether distances rings equal. width width layout. default, container width used. height height layout. default, container height used. sortBy Specify sorting basis (node attribute name). higher value, central node placed. \"degree\", degree node calculated. higher degree, central node placed. maxLevelDiff maximum attribute difference nodes layer undefined, set maxValue / 4, maxValue maximum attribute value sorting basis. example, sortBy 'degree', maxValue degree node largest degree among nodes. nodeSize Node size (diameter). Used prevent collision detection nodes overlap. Can number, 2-element vector [width, height], function returns number. nodeSpacing Minimum distance rings, used adjust radius. Can number, vector numbers, function returns number. preventOverlap Whether prevent node overlap. Must coordinated nodeSize attribute data.size attribute node data. data.size set data nodeSize value current graph node size configured layout, can node overlap collision detection performed. startAngle arc start layout nodes (radians) sweep radian difference first last nodes layer undefined, set 2 * Math.PI * (1 - 1 / |level.nodes|), level.nodes number nodes layer calculated algorithm, |level.nodes| number nodes layer. ... Additional parameters pass layout. See https://g6.antv.antgroup.com/en/manual/layout/concentric-layout.","code":""},{"path":"https://cynkra.github.io/g6R/reference/concentric_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate G6 AntV Concentric layout configuration — concentric_layout","text":"list containing configuration G6 AntV Concentric layout","code":""},{"path":"https://cynkra.github.io/g6R/reference/concentric_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate G6 AntV Concentric layout configuration — concentric_layout","text":"","code":"# Basic concentric layout concentric_config <- concentric_layout()  # Custom concentric layout with degree-based sorting and overlap prevention concentric_config <- concentric_layout(   clockwise = TRUE,   sortBy = \"degree\",   preventOverlap = TRUE,   nodeSize = 30,   nodeSpacing = 20 )  # Custom concentric layout with specific center and dimensions concentric_config <- concentric_layout(   center = c(300, 300),   width = 600,   height = 600,   equidistant = TRUE,   startAngle = pi )"},{"path":"https://cynkra.github.io/g6R/reference/context_menu.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Context Menu Behavior — context_menu","title":"Configure Context Menu Behavior — context_menu","text":"Creates configuration object context-menu behavior G6. allows users display context menu right-clicking clicking graph elements.","code":""},{"path":"https://cynkra.github.io/g6R/reference/context_menu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Context Menu Behavior — context_menu","text":"","code":"context_menu(   key = \"contextmenu\",   className = \"g6-contextmenu\",   trigger = \"contextmenu\",   offset = c(4, 4),   onClick = NULL,   getItems = NULL,   getContent = NULL,   loadingContent = NULL,   enable = JS(\"(e) => e.targetType === 'node'\"),   ... )"},{"path":"https://cynkra.github.io/g6R/reference/context_menu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Context Menu Behavior — context_menu","text":"key Unique identifier behavior, used subsequent operations (string, default: \"context-menu\"). className Additional class name menu DOM (string, default: \"g6-contextmenu\"). trigger trigger menu: \"contextmenu\" right-click, \"click\" click (string, default: \"contextmenu\"). offset Offset menu display X Y directions (numeric vector, default: c(4, 4)). onClick Callback method triggered menu item clicked (JS function). default allows create edge either remove current node. getItems Returns list menu items, supports Promise (JS function, default: NULL). getContent Returns content menu, supports Promise (JS function, default: NULL). loadingContent Menu content used getContent returns Promise (string HTML element, default: NULL). enable Whether context menu available (boolean JS function, default: TRUE). ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/plugin/contextmenu.","code":""},{"path":"https://cynkra.github.io/g6R/reference/context_menu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Context Menu Behavior — context_menu","text":"list configuration settings context menu plugin.","code":""},{"path":"https://cynkra.github.io/g6R/reference/context_menu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Context Menu Behavior — context_menu","text":"","code":"# Basic configuration config <- context_menu()  # Custom configuration with JavaScript functions config <- context_menu(   key = \"my-context-menu\",   className = \"my-context-menu\",   trigger = \"click\",   offset = c(10, 10),   getItems = JS(\"(event) => {     const type = event.itemType;     const isNode = type === 'node';     return [       { key: 'delete', text: 'Delete' },       { key: 'edit', text: 'Edit' },       { key: 'details', text: 'View Details', disabled: !isNode }     ];   }\"),   onClick = JS(\"(value, target, current) => {     if (value === 'delete') {       // do stuff   }\") )"},{"path":"https://cynkra.github.io/g6R/reference/create_edge.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Create Edge Behavior — create_edge","title":"Configure Create Edge Behavior — create_edge","text":"Creates configuration object create-edge behavior G6. allows users create edges nodes clicking dragging.","code":""},{"path":"https://cynkra.github.io/g6R/reference/create_edge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Create Edge Behavior — create_edge","text":"","code":"create_edge(   key = \"create-edge\",   trigger = \"drag\",   enable = FALSE,   onCreate = NULL,   onFinish = NULL,   style = NULL,   notify = FALSE,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/create_edge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Create Edge Behavior — create_edge","text":"key Behavior unique identifier. Useful modify behavior JS side. trigger way trigger edge creation: \"click\" \"drag\" (string, default: \"drag\"). enable Whether enable behavior (boolean function, default: FALSE). default implementation works parallel context_menu plugin responsible activating edge behavior edge creation selected. onCreate Callback function creating edge, returns edge data (function, default: NULL). onFinish Callback function successfully creating edge (function). default, provide internal implementation disables edge mode edge creation succesful conflict drag behaviors. style Style newly created edge (list, default: NULL). notify Whether show feedback message ui. ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/behavior/create-edge.","code":""},{"path":"https://cynkra.github.io/g6R/reference/create_edge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Create Edge Behavior — create_edge","text":"list configuration settings create-edge behavior.","code":""},{"path":"https://cynkra.github.io/g6R/reference/create_edge.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Configure Create Edge Behavior — create_edge","text":"create_edge, drag_element drag_element_force incompatible default, triggers . can change trigger workaround .","code":""},{"path":"https://cynkra.github.io/g6R/reference/create_edge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Create Edge Behavior — create_edge","text":"","code":"# Basic configuration config <- create_edge()"},{"path":"https://cynkra.github.io/g6R/reference/d3_force_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate G6 D3 Force layout configuration — d3_force_layout","title":"Generate G6 D3 Force layout configuration — d3_force_layout","text":"function creates configuration list G6 D3 Force layout available options parameters.","code":""},{"path":"https://cynkra.github.io/g6R/reference/d3_force_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate G6 D3 Force layout configuration — d3_force_layout","text":"","code":"d3_force_layout(   link = list(distance = 100, strength = 2),   collide = list(radius = 40),   ... )"},{"path":"https://cynkra.github.io/g6R/reference/d3_force_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate G6 D3 Force layout configuration — d3_force_layout","text":"link list specifying force parameters links (edges), components: id Edge id generation function, format: function(edge, index, edges) { return string }. Default function(e) e.id distance Ideal edge length edges tend toward. Can number function function(edge, index, edges) { return number }. Default 30 strength strength force. Higher values make edge lengths closer ideal length. Can number function function(edge, index, edges) { return number }. Default 1 iterations Number iterations link force. Default 1 collide list specifying collision force parameters nodes, components: radius Collision radius. Nodes closer distance experience repulsive force. Can number function function(node, index, nodes) { return number }. Default 10 strength strength repulsive force. Higher values produce obvious repulsion. Default 1 iterations number iterations collision detection. Default 1 ... Additional parameters pass layout. See https://g6.antv.antgroup.com/en/manual/layout/d3-force.","code":""},{"path":"https://cynkra.github.io/g6R/reference/d3_force_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate G6 D3 Force layout configuration — d3_force_layout","text":"list containing configuration G6 AntV D3 Force layout.","code":""},{"path":"https://cynkra.github.io/g6R/reference/d3_force_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate G6 D3 Force layout configuration — d3_force_layout","text":"","code":"# Basic D3 force layout d3_force_config <- d3_force_layout()  # Custom link distance and collision radius d3_force_config <- d3_force_layout(   link = list(     distance = 150,     strength = 0.5,     iterations = 3   ),   collide = list(     radius = 30,     strength = 0.8   ) )"},{"path":"https://cynkra.github.io/g6R/reference/dag.html","id":null,"dir":"Reference","previous_headings":"","what":"Example DAG graph — dag","title":"Example DAG graph — dag","text":"graph directed acyclic graph","code":""},{"path":"https://cynkra.github.io/g6R/reference/dag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example DAG graph — dag","text":"","code":"data(dag)"},{"path":"https://cynkra.github.io/g6R/reference/dag.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example DAG graph — dag","text":"list 2 data frames: nodes data frame 12 rows nodes. edges data frame 12 rows edges. combo data frame 3 rows combos.","code":""},{"path":"https://cynkra.github.io/g6R/reference/dag.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example DAG graph — dag","text":"https://gw.alipayobjects.com/os/antvdemo/assets/data/algorithm-category.json","code":""},{"path":"https://cynkra.github.io/g6R/reference/dagre_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate G6 AntV Dagre layout configuration — dagre_layout","title":"Generate G6 AntV Dagre layout configuration — dagre_layout","text":"function creates configuration list G6 AntV Dagre layout available options parameters. Dagre layout designed directed graphs, creating hierarchical layouts nodes arranged layers.","code":""},{"path":"https://cynkra.github.io/g6R/reference/dagre_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate G6 AntV Dagre layout configuration — dagre_layout","text":"","code":"dagre_layout(   rankdir = c(\"TB\", \"BT\", \"LR\", \"RL\"),   align = c(\"UL\", \"UR\", \"DL\", \"DR\"),   nodesep = 50,   ranksep = 100,   ranker = c(\"network-simplex\", \"tight-tree\", \"longest-path\"),   nodeSize = NULL,   controlPoints = FALSE,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/dagre_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate G6 AntV Dagre layout configuration — dagre_layout","text":"rankdir Layout direction: \"TB\" (top bottom), \"BT\" (bottom top), \"LR\" (left right), \"RL\" (right left). align Node alignment: \"UL\" (upper left), \"UR\" (upper right), \"DL\" (left), \"DR\" (right). nodesep Node spacing (px). rankdir \"TB\" \"BT\", horizontal spacing nodes; rankdir \"LR\" \"RL\", vertical spacing nodes. ranksep Interlayer spacing (px). rankdir \"TB\" \"BT\", spacing adjacent layers vertical direction; rankdir \"LR\" \"RL\", represents spacing adjacent layers horizontal direction. ranker algorithm assigning level node: \"network-simplex\" (network simplex algorithm), \"tight-tree\" (compact tree algorithm), \"longest-path\" (longest path algorithm). nodeSize G6 custom attribute specify node size uniformly node. Can single number (width/height), array [width, height], function returns either. controlPoints Whether keep control points edge. ... Additional parameters pass layout. See https://g6.antv.antgroup.com/en/manual/layout/dagre-layout.","code":""},{"path":"https://cynkra.github.io/g6R/reference/dagre_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate G6 AntV Dagre layout configuration — dagre_layout","text":"list containing configuration G6 AntV Dagre layout.","code":""},{"path":"https://cynkra.github.io/g6R/reference/dagre_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate G6 AntV Dagre layout configuration — dagre_layout","text":"","code":"# Basic dagre layout dagre_config <- dagre_layout()  # Custom dagre layout with horizontal flow dagre_config <- dagre_layout(   rankdir = \"LR\",   nodesep = 80,   ranksep = 150,   ranker = \"tight-tree\" )  # Custom dagre layout with specific node size dagre_config <- dagre_layout(   nodeSize = 40,   controlPoints = TRUE )"},{"path":"https://cynkra.github.io/g6R/reference/dendrogram_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate G6 Dendrogram layout configuration — dendrogram_layout","title":"Generate G6 Dendrogram layout configuration — dendrogram_layout","text":"function creates configuration list G6 Dendrogram layout available options parameters.","code":""},{"path":"https://cynkra.github.io/g6R/reference/dendrogram_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate G6 Dendrogram layout configuration — dendrogram_layout","text":"","code":"dendrogram_layout(   direction = c(\"LR\", \"RL\", \"TB\", \"BT\", \"H\", \"V\"),   nodeSep = 20,   rankSep = 200,   radial = FALSE,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/dendrogram_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate G6 Dendrogram layout configuration — dendrogram_layout","text":"direction Character. Layout direction. Options: \"LR\", \"RL\", \"TB\", \"BT\", \"H\", \"V\". Defaults \"LR\". nodeSep Numeric. Node spacing, distance nodes level. Defaults 20. rankSep Numeric. Rank spacing, distance different levels. Defaults 200. radial Logical. Whether enable radial layout. Defaults FALSE. ... Additional parameters pass layout. See https://g6.antv.antgroup.com/en/manual/layout/dendrogram-layout.","code":""},{"path":"https://cynkra.github.io/g6R/reference/dendrogram_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate G6 Dendrogram layout configuration — dendrogram_layout","text":"list containing configuration G6 dendrogram layout.","code":""},{"path":"https://cynkra.github.io/g6R/reference/drag_canvas.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Drag Canvas Behavior — drag_canvas","title":"Configure Drag Canvas Behavior — drag_canvas","text":"Creates configuration object drag-canvas behavior G6. allows users drag canvas pan view.","code":""},{"path":"https://cynkra.github.io/g6R/reference/drag_canvas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Drag Canvas Behavior — drag_canvas","text":"","code":"drag_canvas(   key = \"drag-canvas\",   enable = NULL,   animation = NULL,   direction = c(\"both\", \"x\", \"y\"),   range = NULL,   sensitivity = 10,   trigger = NULL,   onFinish = NULL,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/drag_canvas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Drag Canvas Behavior — drag_canvas","text":"key Behavior unique identifier. Useful modify behavior JS side. enable Whether enable behavior (boolean function, default: function enables dragging canvas). animation Drag animation configuration keyboard movement (list, default: NULL). direction Allowed drag direction: \"x\", \"y\", \"\" (string, default: \"\"). range Draggable viewport range viewport size units (number numeric vector, default: Inf). sensitivity Distance trigger single keyboard movement (number, default: 10). trigger Keyboard keys trigger dragging (list, default: NULL). onFinish Callback function dragging completed (function, default: NULL). ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/behavior/drag-canvas.","code":""},{"path":"https://cynkra.github.io/g6R/reference/drag_canvas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Drag Canvas Behavior — drag_canvas","text":"list configuration settings drag-canvas behavior.","code":""},{"path":"https://cynkra.github.io/g6R/reference/drag_canvas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Drag Canvas Behavior — drag_canvas","text":"","code":"# Basic configuration config <- drag_canvas()  # Custom configuration config <- drag_canvas(   enable = TRUE,   direction = \"x\",   range = c(-100, 100),   sensitivity = 5,   trigger = list(    up = \"ArrowUp\",    down = \"ArrowDown\",    left = \"ArrowLeft\",    right = \"ArrowRight\"   ) )"},{"path":"https://cynkra.github.io/g6R/reference/drag_element.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Drag Element Behavior — drag_element","title":"Configure Drag Element Behavior — drag_element","text":"Creates configuration object drag-element behavior G6. allows users drag nodes combos graph.","code":""},{"path":"https://cynkra.github.io/g6R/reference/drag_element.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Drag Element Behavior — drag_element","text":"","code":"drag_element(   key = \"drag-element\",   enable = TRUE,   animation = TRUE,   state = \"selected\",   dropEffect = c(\"move\", \"link\", \"none\"),   hideEdge = c(\"none\", \"out\", \"in\", \"both\", \"all\"),   shadow = FALSE,   cursor = NULL,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/drag_element.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Drag Element Behavior — drag_element","text":"key Unique identifier behavior, used subsequent operations (string, default: NULL) enable Whether enable drag function (boolean function, default: function enables dragging nodes combos). animation Whether enable drag animation (boolean, default: TRUE). state Identifier selected state nodes (string, default: \"selected\"). dropEffect Defines operation effect dragging ends: \"link\", \"move\", \"none\" (string, default: \"move\"). hideEdge Controls display state edges dragging: \"none\", \"\", \"\", \"\", \"\" (string, default: \"none\"). shadow Whether enable ghost nodes (boolean, default: FALSE). cursor Customize mouse style dragging (list, default: NULL). ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/behavior/drag-element.","code":""},{"path":"https://cynkra.github.io/g6R/reference/drag_element.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Drag Element Behavior — drag_element","text":"list configuration settings drag-element behavior.","code":""},{"path":"https://cynkra.github.io/g6R/reference/drag_element.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Drag Element Behavior — drag_element","text":"","code":"# Basic configuration config <- drag_element()  # Custom configuration config <- drag_element(   key = \"my-drag-behavior\",   animation = FALSE,   dropEffect = \"link\",   hideEdge = \"both\",   shadow = TRUE,   cursor = list(     default = \"default\",     grab = \"grab\",     grabbing = \"grabbing\"   ),   enable = JS(    \"(e) => {      return e.targetType === 'node' || e.targetType === 'combo';    }\"   ) )"},{"path":"https://cynkra.github.io/g6R/reference/drag_element_force.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Drag Element Force Behavior — drag_element_force","title":"Configure Drag Element Force Behavior — drag_element_force","text":"Creates configuration object drag-element-force behavior G6. allows users drag nodes combos force-directed layout interactions.","code":""},{"path":"https://cynkra.github.io/g6R/reference/drag_element_force.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Drag Element Force Behavior — drag_element_force","text":"","code":"drag_element_force(   key = \"drag-element-force\",   fixed = FALSE,   enable = NULL,   state = \"selected\",   hideEdge = c(\"none\", \"out\", \"in\", \"both\", \"all\"),   cursor = NULL,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/drag_element_force.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Drag Element Force Behavior — drag_element_force","text":"key Unique identifier behavior, used subsequent operations (string, default: \"drag-element-force\"). fixed Whether keep node position fixed dragging ends (boolean, default: FALSE). enable Whether enable drag function (boolean JS function, default: JS function enables dragging nodes combos). state Identifier selected state nodes (string, default: \"selected\"). hideEdge Controls display state edges dragging: \"none\", \"\", \"\", \"\", \"\" (string, default: \"none\"). cursor Customize mouse style dragging (list, default: NULL). ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/behavior/drag-element-force.","code":""},{"path":"https://cynkra.github.io/g6R/reference/drag_element_force.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Drag Element Force Behavior — drag_element_force","text":"list configuration settings drag-element-force behavior.","code":""},{"path":"https://cynkra.github.io/g6R/reference/drag_element_force.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Drag Element Force Behavior — drag_element_force","text":"","code":"# Basic configuration config <- drag_element_force()  # Custom configuration with JavaScript arrow function and custom key config <- drag_element_force(   key = \"my-custom-drag-force\",   fixed = TRUE,   enable = JS(\"(event) => { return event.targetType === 'node'; }\"),   hideEdge = \"both\",   cursor = list(     default = \"default\",     grab = \"grab\",     grabbing = \"grabbing\"   ) )"},{"path":"https://cynkra.github.io/g6R/reference/edge_bundling.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Edge Bundling Plugin — edge_bundling","title":"Configure Edge Bundling Plugin — edge_bundling","text":"Creates configuration object edge-bundling plugin G6. plugin automatically bundles similar edges together reduce visual clutter.","code":""},{"path":"https://cynkra.github.io/g6R/reference/edge_bundling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Edge Bundling Plugin — edge_bundling","text":"","code":"edge_bundling(   key = \"edge-bundling\",   bundleThreshold = 0.6,   cycles = 6,   divisions = 1,   divRate = 2,   iterations = 90,   iterRate = 2/3,   K = 0.1,   lambda = 0.1,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/edge_bundling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Edge Bundling Plugin — edge_bundling","text":"key Unique identifier plugin (string, default: NULL). bundleThreshold Edge compatibility threshold, determines edges bundled together (number, default: 0.6). cycles Number simulation cycles (number, default: 6). divisions Initial number cut points (number, default: 1). divRate Growth rate cut points (number, default: 2). iterations Number iterations executed first cycle (number, default: 90). iterRate Iteration decrement rate (number, default: 2/3). K Edge strength, affects attraction repulsion edges (number, default: 0.1). lambda Initial step size (number, default: 0.1). ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/plugin/edge-bundling.","code":""},{"path":"https://cynkra.github.io/g6R/reference/edge_bundling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Edge Bundling Plugin — edge_bundling","text":"list configuration settings edge-bundling plugin.","code":""},{"path":"https://cynkra.github.io/g6R/reference/edge_bundling.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Edge Bundling Plugin — edge_bundling","text":"","code":"# Basic configuration config <- edge_bundling()  # Custom configuration config <- edge_bundling(   key = \"my-edge-bundling\",   bundleThreshold = 0.8,   cycles = 8,   K = 0.2 )"},{"path":"https://cynkra.github.io/g6R/reference/edge_filter_lens.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Edge Filter Lens Plugin — edge_filter_lens","title":"Configure Edge Filter Lens Plugin — edge_filter_lens","text":"Creates configuration object edge-filter-lens plugin G6. plugin creates lens filters displays edges within specific area.","code":""},{"path":"https://cynkra.github.io/g6R/reference/edge_filter_lens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Edge Filter Lens Plugin — edge_filter_lens","text":"","code":"edge_filter_lens(   key = \"edge-filter-lens\",   trigger = c(\"pointermove\", \"click\", \"drag\"),   r = 60,   maxR = NULL,   minR = 0,   scaleRBy = \"wheel\",   nodeType = c(\"both\", \"source\", \"target\", \"either\"),   filter = NULL,   style = NULL,   nodeStyle = list(label = FALSE),   edgeStyle = list(label = TRUE),   preventDefault = TRUE,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/edge_filter_lens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Edge Filter Lens Plugin — edge_filter_lens","text":"key Unique identifier plugin (string, default: NULL). trigger Method move lens: \"pointermove\", \"click\", \"drag\" (string, default: \"pointermove\"). r Radius lens (number, default: 60). maxR Maximum radius lens (number, default: NULL - half smaller canvas dimension). minR Minimum radius lens (number, default: 0). scaleRBy Method scale lens radius (string, default: \"wheel\"). nodeType Edge display condition: \"\", \"source\", \"target\", \"either\" (string, default: \"\"). filter Filter elements never displayed lens (JS function, default: NULL). style Style lens (list, default: NULL). nodeStyle Style nodes lens (list JS function, default: list(label = FALSE)). edgeStyle Style edges lens (list JS function, default: list(label = TRUE)). preventDefault Whether prevent default events (boolean, default: TRUE). ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/plugin/edge-filter-lens.","code":""},{"path":"https://cynkra.github.io/g6R/reference/edge_filter_lens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Edge Filter Lens Plugin — edge_filter_lens","text":"list configuration settings edge-filter-lens plugin.","code":""},{"path":"https://cynkra.github.io/g6R/reference/edge_filter_lens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Edge Filter Lens Plugin — edge_filter_lens","text":"","code":"# Basic configuration config <- edge_filter_lens()  # Custom configuration config <- edge_filter_lens(   key = \"my-edge-lens\",   trigger = \"drag\",   r = 100,   nodeType = \"either\",   style = list(     fill = \"rgba(200, 200, 200, 0.3)\",     stroke = \"#999\",     lineWidth = 2   ),   filter = JS(\"(id, type) => {     // Only display edges connected to specific nodes     if (type === 'edge') {       const edge = graph.getEdgeData(id);       return edge.source === 'node1' || edge.target === 'node1';     }     return true;   }\") )"},{"path":"https://cynkra.github.io/g6R/reference/edge_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Edge Options Configuration for G6 Graphs — edge_options","title":"Create Edge Options Configuration for G6 Graphs — edge_options","text":"Configures general options edges G6 graph. settings control type, style, state, palette, animation edges.","code":""},{"path":"https://cynkra.github.io/g6R/reference/edge_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Edge Options Configuration for G6 Graphs — edge_options","text":"","code":"edge_options(   type = c(\"line\", \"polyline\", \"arc\", \"quadratic\", \"cubic\", \"cubic-vertical\",     \"cubic-horizontal\", \"loop\"),   style = edge_style_options(),   state = NULL,   palette = NULL,   animation = NULL )"},{"path":"https://cynkra.github.io/g6R/reference/edge_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Edge Options Configuration for G6 Graphs — edge_options","text":"type Edge type. Can built-edge type name custom edge name. Built-types include \"line\", \"polyline\", \"arc\", \"quadratic\", \"cubic\", \"cubic-vertical\", \"cubic-horizontal\", \"loop\", etc. Default: \"line\". style Edge style configuration. Controls appearance edges including color, width, dash patterns, etc. Can created edge_style_options(). Default: NULL. state Defines style edge different states, hover, selected, disabled, etc. list mapping state names style configurations. Default: NULL. palette Defines color palette edge, used map colors based different data. Default: NULL. animation Defines animation effect edge. Can created animation_config(). Default: NULL.","code":""},{"path":"https://cynkra.github.io/g6R/reference/edge_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Edge Options Configuration for G6 Graphs — edge_options","text":"list containing edge options configuration can passed g6_options().","code":""},{"path":"https://cynkra.github.io/g6R/reference/edge_options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Edge Options Configuration for G6 Graphs — edge_options","text":"Edge options allow defining edges appear behave G6 graph. includes selecting edge types, setting styles, configuring state-based appearances, defining color palettes, specifying animation effects.","code":""},{"path":"https://cynkra.github.io/g6R/reference/edge_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Edge Options Configuration for G6 Graphs — edge_options","text":"","code":"# Basic edge options with default line type options <- edge_options()  # Curved edge with custom style options <- edge_options(   type = \"cubic\",   style = edge_style_options(     stroke = \"#1783FF\",     lineWidth = 2,     endArrow = TRUE   ) )"},{"path":"https://cynkra.github.io/g6R/reference/edge_style_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Edge Style Options for G6 Graphs — edge_style_options","title":"Create Edge Style Options for G6 Graphs — edge_style_options","text":"Configures styling options edges G6 graph. settings control appearance interaction behavior edges.","code":""},{"path":"https://cynkra.github.io/g6R/reference/edge_style_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Edge Style Options for G6 Graphs — edge_style_options","text":"","code":"edge_style_options(   class = NULL,   cursor = valid_cursors,   fill = NULL,   fillRule = c(\"nonzero\", \"evenodd\"),   filter = NULL,   increasedLineWidthForHitTesting = NULL,   isBillboard = TRUE,   lineDash = 0,   lineDashOffset = 0,   lineWidth = 1,   opacity = 1,   pointerEvents = NULL,   shadowBlur = NULL,   shadowColor = NULL,   shadowOffsetX = NULL,   shadowOffsetY = NULL,   shadowType = NULL,   sourcePort = NULL,   stroke = \"#000\",   strokeOpacity = 1,   targetPort = NULL,   transform = NULL,   transformOrigin = NULL,   visibility = c(\"visible\", \"hidden\"),   zIndex = -10000,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/edge_style_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Edge Style Options for G6 Graphs — edge_style_options","text":"class Edge class name custom styling CSS. Default: NULL. cursor Edge mouse hover cursor style. Common values include \"default\", \"pointer\", \"move\", etc. Default: \"default\". fill Edge area fill color (edges area, like loops). Default: NULL. fillRule Edge internal fill rule. Options: \"nonzero\", \"evenodd\". Default: NULL. filter Edge shadow filter effect. Default: NULL. increasedLineWidthForHitTesting edge width small, value increases interaction area make edges easier interact . Default: NULL. isBillboard Effective 3D scenes, always facing screen line width affected perspective projection. Default: TRUE. lineDash Edge dashed line style. Numeric vector specifying dash pattern. Default: 0. lineDashOffset Edge dashed line offset. Default: 0. lineWidth Edge width pixels. Default: 1. opacity Overall opacity edge. Value 0 1. Default: 1. pointerEvents Whether edge responds pointer events. Default: NULL. shadowBlur Edge shadow blur effect amount. Default: NULL. shadowColor Edge shadow color. Default: NULL. shadowOffsetX Edge shadow X-axis offset. Default: NULL. shadowOffsetY Edge shadow Y-axis offset. Default: NULL. shadowType Edge shadow type. Options: \"inner\", \"outer\", \"\". Default: NULL. sourcePort Source port edge connection. Default: NULL. stroke Edge color. Default: \"#000\". strokeOpacity Edge color opacity. Value 0 1. Default: 1. targetPort Target port edge connection. Default: NULL. transform CSS transform attribute rotate, scale, skew, translate edge. Default: NULL. transformOrigin Rotation scaling center point. Default: NULL. visibility Whether edge visible. Options: \"visible\", \"hidden\". Default: \"visible\". zIndex Edge rendering level (layering). Default: 1. ... Extra parameters.","code":""},{"path":"https://cynkra.github.io/g6R/reference/edge_style_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Edge Style Options for G6 Graphs — edge_style_options","text":"list containing edge style options can passed edge_options().","code":""},{"path":"https://cynkra.github.io/g6R/reference/edge_style_options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Edge Style Options for G6 Graphs — edge_style_options","text":"Edge style options allow fine-grained control edges rendered behave G6 graph. includes colors, widths, line styles, shadows, visibility, interaction properties.","code":""},{"path":"https://cynkra.github.io/g6R/reference/fish_eye.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Fish Eye Plugin — fish_eye","title":"Configure Fish Eye Plugin — fish_eye","text":"Creates configuration object fisheye plugin G6. plugin creates fisheye lens effect magnifies elements within specific area.","code":""},{"path":"https://cynkra.github.io/g6R/reference/fish_eye.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Fish Eye Plugin — fish_eye","text":"","code":"fish_eye(   key = \"fish-eye\",   trigger = c(\"pointermove\", \"click\", \"drag\"),   r = 120,   maxR = NULL,   minR = 0,   d = 1.5,   maxD = 5,   minD = 0,   scaleRBy = NULL,   scaleDBy = NULL,   showDPercent = TRUE,   style = NULL,   nodeStyle = list(label = TRUE),   preventDefault = TRUE,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/fish_eye.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Fish Eye Plugin — fish_eye","text":"key Unique identifier plugin (string, default: NULL). trigger Method move fisheye: \"pointermove\", \"click\", \"drag\" (string, default: \"pointermove\"). r Radius fisheye (number, default: 120). maxR Maximum adjustable radius fisheye (number, default: NULL - half smaller canvas dimension). minR Minimum adjustable radius fisheye (number, default: 0). d Distortion factor (number, default: 1.5). maxD Maximum adjustable distortion factor (number, default: 5). minD Minimum adjustable distortion factor (number, default: 0). scaleRBy Method adjust fisheye radius: \"wheel\" \"drag\" (string, default: NULL). scaleDBy Method adjust fisheye distortion factor: \"wheel\" \"drag\" (string, default: NULL). showDPercent Whether show distortion factor value fisheye (boolean, default: TRUE). style Style fisheye (list, default: NULL). nodeStyle Style nodes fisheye (list JS function, default: list(label = TRUE)). preventDefault Whether prevent default events (boolean, default: TRUE). ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/fisheye.","code":""},{"path":"https://cynkra.github.io/g6R/reference/fish_eye.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Fish Eye Plugin — fish_eye","text":"list configuration settings fisheye plugin.","code":""},{"path":"https://cynkra.github.io/g6R/reference/fish_eye.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Fish Eye Plugin — fish_eye","text":"","code":"# Basic configuration config <- fish_eye()  # Custom configuration config <- fish_eye(   key = \"my-fisheye\",   trigger = \"drag\",   r = 200,   d = 2.5,   scaleRBy = \"wheel\",   scaleDBy = \"drag\",   style = list(     stroke = \"#1890ff\",     fill = \"rgba(24, 144, 255, 0.1)\",     lineWidth = 2   ),   nodeStyle = JS(\"(datum) => {     return {       label: true,       labelCfg: {         style: {           fill: '#003a8c',           fontSize: 14         }       }     };   }\") )"},{"path":"https://cynkra.github.io/g6R/reference/fix_element_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Fix Element Size Behavior — fix_element_size","title":"Configure Fix Element Size Behavior — fix_element_size","text":"Creates configuration object fix-element-size behavior G6. allows maintaining fixed visual sizes elements zoom operations.","code":""},{"path":"https://cynkra.github.io/g6R/reference/fix_element_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Fix Element Size Behavior — fix_element_size","text":"","code":"fix_element_size(   key = \"fix-element-size\",   enable = TRUE,   reset = FALSE,   state = \"\",   node = NULL,   nodeFilter = JS(\"() => true\"),   edge = list(list(shape = \"key\", fields = c(\"lineWidth\")), list(shape = \"halo\", fields =     c(\"lineWidth\")), list(shape = \"label\", fields = c(\"fontSize\"))),   edgeFilter = JS(\"() => true\"),   combo = NULL,   comboFilter = JS(\"() => true\"),   ... )"},{"path":"https://cynkra.github.io/g6R/reference/fix_element_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Fix Element Size Behavior — fix_element_size","text":"key Unique identifier behavior, used subsequent operations (string, default: \"fix-element-size\"). enable Whether enable interaction (boolean JS function, default: TRUE). reset Whether restore style elements redrawn (boolean, default: FALSE). state Specify state elements fix size (string, default: \"\") node Node configuration item(s) define attributes maintain fixed size (list array lists, default: NULL). nodeFilter Node filter determine nodes maintain fixed size (JS function, default: returns TRUE nodes). edge Edge configuration item(s) define attributes maintain fixed size (list array lists, default: predefined list). edgeFilter Edge filter determine edges maintain fixed size (JS function, default: returns TRUE edges). combo Combo configuration item(s) define attributes maintain fixed size (list array lists, default: NULL). comboFilter Combo filter determine combos maintain fixed size (JS function, default: returns TRUE combos). ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/behavior/fix-element-size.","code":""},{"path":"https://cynkra.github.io/g6R/reference/fix_element_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Fix Element Size Behavior — fix_element_size","text":"list configuration settings fix-element-size behavior.","code":""},{"path":"https://cynkra.github.io/g6R/reference/fix_element_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Fix Element Size Behavior — fix_element_size","text":"","code":"# Basic configuration config <- fix_element_size()  # Custom configuration with filters and specific shape configurations config <- fix_element_size(   key = \"my-fix-size-behavior\",   reset = TRUE,   state = \"active\",   node = list(     list(shape = \"circle\", fields = c(\"r\", \"lineWidth\")),     list(shape = \"label\", fields = c(\"fontSize\"))   ),   nodeFilter = JS(\"(node) => node.type === 'important'\"),   edge = list(shape = \"line\", fields = c(\"lineWidth\", \"lineDash\")),   edgeFilter = JS(\"(edge) => edge.weight > 5\") )"},{"path":"https://cynkra.github.io/g6R/reference/focus_element.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Focus Element Behavior — focus_element","title":"Configure Focus Element Behavior — focus_element","text":"Creates configuration object focus-element behavior G6. behavior allows focusing specific elements automatically adjusting viewport.","code":""},{"path":"https://cynkra.github.io/g6R/reference/focus_element.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Focus Element Behavior — focus_element","text":"","code":"focus_element(   key = \"focus-element\",   animation = list(duration = 500, easing = \"ease-in\"),   enable = TRUE,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/focus_element.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Focus Element Behavior — focus_element","text":"key Unique identifier behavior, used subsequent operations (string, default: \"focus-element\"). animation Focus animation settings (list, default: list duration 500ms easing \"ease-\"). enable Whether enable focus feature (boolean JS function, default: TRUE). ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/behavior/focus-element.","code":""},{"path":"https://cynkra.github.io/g6R/reference/focus_element.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Focus Element Behavior — focus_element","text":"list configuration settings focus-element behavior.","code":""},{"path":"https://cynkra.github.io/g6R/reference/focus_element.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Focus Element Behavior — focus_element","text":"","code":"# Basic configuration config <- focus_element()  # Custom configuration config <- focus_element(   key = \"my-focus-behavior\",   animation = list(duration = 1000, easing = \"ease-out\"),   enable = JS(\"(event) => event.targetType === 'node'\") )"},{"path":"https://cynkra.github.io/g6R/reference/force_atlas2_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate G6 Force Atlas2 layout configuration — force_atlas2_layout","title":"Generate G6 Force Atlas2 layout configuration — force_atlas2_layout","text":"function creates configuration list G6 Force Atlas2 layout available options parameters.","code":""},{"path":"https://cynkra.github.io/g6R/reference/force_atlas2_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate G6 Force Atlas2 layout configuration — force_atlas2_layout","text":"","code":"force_atlas2_layout(   barnesHut = NULL,   dissuadeHubs = FALSE,   height = NULL,   kg = 1,   kr = 5,   ks = 0.1,   ksmax = 10,   mode = \"normal\",   nodeSize = NULL,   preventOverlap = FALSE,   prune = NULL,   tao = 0.1,   width = NULL,   center = NULL,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/force_atlas2_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate G6 Force Atlas2 layout configuration — force_atlas2_layout","text":"barnesHut Logical. Whether enable quadtree acceleration. enabled, improves performance large graphs may affect layout quality. default, enabled node count > 250. dissuadeHubs Logical. Whether enable hub mode. TRUE, nodes higher -degree likely placed center high -degree. Defaults FALSE. height Numeric. Layout height. Defaults container height. kg Numeric. Gravity coefficient. larger value, concentrated layout center. Defaults 1. kr Numeric. Repulsion coefficient. Adjusts compactness layout. larger value, looser layout. Defaults 5. ks Numeric. Controls speed node movement iteration. Defaults 0.1. ksmax Numeric. Maximum node movement speed iteration. Defaults 10. mode Character. Clustering mode. Options \"normal\" \"linlog\". \"linlog\" mode, clusters compact. Defaults \"normal\". nodeSize Numeric function. Node size (diameter). Used repulsion calculation preventOverlap enabled. set, uses data.size node data. preventOverlap Logical. Whether prevent node overlap. enabled, layout considers node size avoid overlap. Node size specified nodeSize data.size node data. Defaults FALSE. prune Logical. Whether enable auto-pruning. default, enabled node count > 100. Pruning speeds convergence may reduce layout quality. Set FALSE disable auto-activation. tao Numeric. Tolerance stopping oscillation layout near convergence. Defaults 0.1. width Numeric. Layout width. Defaults container width. center Numeric vector length 2. Layout center form [x, y]. node attracted point, gravity controlled kg. set, uses canvas center. ... Additional parameters pass layout. See https://g6.antv.antgroup.com/en/manual/layout/force-atlas2-layout.","code":""},{"path":"https://cynkra.github.io/g6R/reference/force_atlas2_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate G6 Force Atlas2 layout configuration — force_atlas2_layout","text":"list containing configuration G6 force atlas2 layout.","code":""},{"path":"https://cynkra.github.io/g6R/reference/force_atlas2_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate G6 Force Atlas2 layout configuration — force_atlas2_layout","text":"","code":"if (interactive()) {   g6(lesmis$nodes, lesmis$edges) |>     g6_layout(force_atlas2_layout(       kr = 20,       preventOverlap = TRUE,       center = c(250, 250))) |>     g6_options(autoResize = TRUE) |>     g6_behaviors(       \"zoom-canvas\",       drag_element()     ) }"},{"path":"https://cynkra.github.io/g6R/reference/fruchterman_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate G6 Fruchterman layout configuration — fruchterman_layout","title":"Generate G6 Fruchterman layout configuration — fruchterman_layout","text":"function creates configuration list G6 Fruchterman layout available options parameters.","code":""},{"path":"https://cynkra.github.io/g6R/reference/fruchterman_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate G6 Fruchterman layout configuration — fruchterman_layout","text":"","code":"fruchterman_layout(height = NULL, width = NULL, gravity = 10, speed = 5, ...)"},{"path":"https://cynkra.github.io/g6R/reference/fruchterman_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate G6 Fruchterman layout configuration — fruchterman_layout","text":"height Numeric. Layout height. Defaults container height. width Numeric. Layout width. Defaults container width. gravity Numeric. Central force attracting nodes center. Larger values make layout compact. Defaults 10. speed Numeric. Node movement speed per iteration. Higher values may cause oscillation. Defaults 5. ... Additional parameters pass layout. See https://g6.antv.antgroup.com/en/manual/layout/fruchterman-layout.","code":""},{"path":"https://cynkra.github.io/g6R/reference/fruchterman_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate G6 Fruchterman layout configuration — fruchterman_layout","text":"list containing configuration G6 fruchterman layout.","code":""},{"path":"https://cynkra.github.io/g6R/reference/fruchterman_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate G6 Fruchterman layout configuration — fruchterman_layout","text":"","code":"if (interactive()) {   g6(lesmis$nodes, lesmis$edges) |>    g6_layout(fruchterman_layout(      gravity = 5,      speed = 5    )) |>    g6_behaviors(      \"zoom-canvas\",      drag_element()    ) }"},{"path":"https://cynkra.github.io/g6R/reference/fullscreen.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Fullscreen Plugin — fullscreen","title":"Configure Fullscreen Plugin — fullscreen","text":"Creates configuration object fullscreen plugin G6. plugin enables fullscreen mode graph.","code":""},{"path":"https://cynkra.github.io/g6R/reference/fullscreen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Fullscreen Plugin — fullscreen","text":"","code":"fullscreen(   key = \"fullscreen\",   autoFit = TRUE,   trigger = NULL,   onEnter = NULL,   onExit = NULL,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/fullscreen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Fullscreen Plugin — fullscreen","text":"key Unique identifier plugin (string, default: NULL). autoFit Whether auto-fit canvas size screen fullscreen mode (boolean, default: TRUE). trigger Methods trigger fullscreen, e.g., list(request = \"button\", exit = \"escape\") (list, default: NULL). onEnter Callback function entering fullscreen mode (JS function, default: NULL). onExit Callback function exiting fullscreen mode (JS function, default: NULL). ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/plugin/fullscreen.","code":""},{"path":"https://cynkra.github.io/g6R/reference/fullscreen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Fullscreen Plugin — fullscreen","text":"list configuration settings fullscreen plugin.","code":""},{"path":"https://cynkra.github.io/g6R/reference/fullscreen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Fullscreen Plugin — fullscreen","text":"","code":"# Basic configuration config <- fullscreen()  # Custom configuration config <- fullscreen(   key = \"my-fullscreen\",   autoFit = TRUE,   trigger = list(     request = \"F\",     exit = \"Esc\"   ),   onEnter = JS(\"() => {     console.log('Entered fullscreen mode');   }\"),   onExit = JS(\"() => {     console.log('Exited fullscreen mode');   }\") )"},{"path":"https://cynkra.github.io/g6R/reference/g6-add.html","id":null,"dir":"Reference","previous_headings":"","what":"Add nodes/edges/combos to a g6 graph via proxy — g6_add_nodes","title":"Add nodes/edges/combos to a g6 graph via proxy — g6_add_nodes","text":"function adds one nodes/edges/combos existing g6 graph instance using proxy object. allows updating graph without completely re-rendering .","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6-add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add nodes/edges/combos to a g6 graph via proxy — g6_add_nodes","text":"","code":"g6_add_nodes(graph, nodes)  g6_add_edges(graph, edges)  g6_add_combos(graph, combos)  g6_add_data(graph, data)"},{"path":"https://cynkra.github.io/g6R/reference/g6-add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add nodes/edges/combos to a g6 graph via proxy — g6_add_nodes","text":"graph g6_proxy object created g6_proxy. nodes, edges, combos data frame list specifying elements added. Elements structure must compliant specifications listed https://g6.antv.antgroup.com/manual/element/overview data nested list possibly containing nodes, edges combo data.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6-add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add nodes/edges/combos to a g6 graph via proxy — g6_add_nodes","text":"g6_proxy object (invisibly), allowing method chaining.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6-add.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add nodes/edges/combos to a g6 graph via proxy — g6_add_nodes","text":"function can used g6_proxy object within Shiny application. work regular g6 objects outside Shiny. node ID already exists, added . See https://g6.antv.antgroup.com/en/api/data#graphaddnodedata, https://g6.antv.antgroup.com/en/api/data#graphaddedgedata https://g6.antv.antgroup.com/en/api/data#graphaddcombodata details.","code":""},{"path":[]},{"path":"https://cynkra.github.io/g6R/reference/g6-combo-action.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapse or expand a combo element in a g6 graph — g6_collapse_combo","title":"Collapse or expand a combo element in a g6 graph — g6_collapse_combo","text":"function collapses/expands specified combo (group nodes) g6 graph, hiding member nodes edges maintaining combo visible. useful simplifying complex graphs multiple hierarchical groups.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6-combo-action.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapse or expand a combo element in a g6 graph — g6_collapse_combo","text":"","code":"g6_collapse_combo(graph, id, options = NULL)  g6_expand_combo(graph, id, options = NULL)"},{"path":"https://cynkra.github.io/g6R/reference/g6-combo-action.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapse or expand a combo element in a g6 graph — g6_collapse_combo","text":"graph g6 graph object g6_proxy object Shiny applications. id Character string specifying ID combo collapse/expand. options List containing optional configuration parameters collapse/expand action: animate: Logical value indicating whether animate collapsing process. Default TRUE. align: Logical value ensure position expanded/collapsed nodes remains unchanged.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6-combo-action.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapse or expand a combo element in a g6 graph — g6_collapse_combo","text":"modified g6 graph g6_proxy object, allowing method chaining.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6-combo-action.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Collapse or expand a combo element in a g6 graph — g6_collapse_combo","text":"combo collapsed, member nodes edges hidden view combo remains visible, typically shown single node. helps reduce visual complexity large graphs hierarchical groupings.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6-combo-action.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Collapse or expand a combo element in a g6 graph — g6_collapse_combo","text":"https://g6.antv.antgroup.com/en/api/element#graphcollapseelementid-options, https://g6.antv.antgroup.com/en/api/element#graphexpandelementid-options","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6-element-toggle.html","id":null,"dir":"Reference","previous_headings":"","what":"Hide/show elements in a g6 graph — g6_hide_elements","title":"Hide/show elements in a g6 graph — g6_hide_elements","text":"function hides/shows specified elements (nodes, edges, combos) g6 graph. Hidden elements removed view remain graph data structure.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6-element-toggle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hide/show elements in a g6 graph — g6_hide_elements","text":"","code":"g6_hide_elements(graph, ids, animation = NULL)  g6_show_elements(graph, ids, animation = NULL)"},{"path":"https://cynkra.github.io/g6R/reference/g6-element-toggle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hide/show elements in a g6 graph — g6_hide_elements","text":"graph g6 graph object g6_proxy object Shiny applications. ids Character vector specifying IDs elements hide/show. Can include node IDs, edge IDs, combo IDs. animation Boolean toggle animation.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6-element-toggle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hide/show elements in a g6 graph — g6_hide_elements","text":"modified g6 graph g6_proxy object, allowing method chaining.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6-element-toggle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hide/show elements in a g6 graph — g6_hide_elements","text":"elements hidden, removed visual display still exist underlying data structure. means can shown later using g6_show_elements without recreate . Hidden elements participate layout calculations, may cause elements reposition. elements shown , graph may recalculate layout positions, can cause elements reposition.","code":""},{"path":[]},{"path":"https://cynkra.github.io/g6R/reference/g6-get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the state of nodes/edges/combos in a g6 graph via proxy — g6_get_nodes","title":"Get the state of nodes/edges/combos in a g6 graph via proxy — g6_get_nodes","text":"function gets state one nodes/edges/combos existing g6 graph instance using proxy object.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6-get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the state of nodes/edges/combos in a g6 graph via proxy — g6_get_nodes","text":"","code":"g6_get_nodes(graph, nodes)  g6_get_edges(graph, edges)  g6_get_combos(graph, combos)"},{"path":"https://cynkra.github.io/g6R/reference/g6-get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the state of nodes/edges/combos in a g6 graph via proxy — g6_get_nodes","text":"graph g6_proxy object created g6_proxy. nodes, edges, combos string character vector.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6-get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the state of nodes/edges/combos in a g6 graph via proxy — g6_get_nodes","text":"g6_proxy object (invisibly), allowing method chaining.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6-get.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the state of nodes/edges/combos in a g6 graph via proxy — g6_get_nodes","text":"function can used g6_proxy object within Shiny application. work regular g6 objects outside Shiny. node ID already exists, added . See https://g6.antv.antgroup.com/en/api/data#graphgetnodedata details.","code":""},{"path":[]},{"path":"https://cynkra.github.io/g6R/reference/g6-get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the state of nodes/edges/combos in a g6 graph via proxy — g6_get_nodes","text":"","code":"if (interactive()) {    library(shiny)    library(bslib)      ui <- page_fluid(       verbatimTextOutput(\"res\"),       g6Output(\"graph\")     )      server <- function(input, output, session) {       output$graph <- renderG6({         g6(           nodes = data.frame(id = c(\"node1\", \"node2\"))         ) |>           g6_options(animation = FALSE) |>           g6_layout() |>           g6_behaviors(click_select())       })        # Send query to JS       observeEvent(req(input[[\"graph-initialized\"]]), {         g6_proxy(\"graph\") |> g6_get_nodes(c(\"node1\", \"node2\"))       })        # Recover query result inside input[[\"<GRAPH_ID>-<ELEMENT_ID>-state\"]]       output$res <- renderPrint({         list(           node1_state = input[[\"graph-node1-state\"]],           node2_state = input[[\"graph-node2-state\"]]         )       })     }     shinyApp(ui, server)  }"},{"path":"https://cynkra.github.io/g6R/reference/g6-remove.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove nodes/edge/combos from a g6 graph via proxy — g6_remove_nodes","title":"Remove nodes/edge/combos from a g6 graph via proxy — g6_remove_nodes","text":"function removes one nodes/edges/combos existing g6 graph instance using proxy object. allows updating graph without completely re-rendering .","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6-remove.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove nodes/edge/combos from a g6 graph via proxy — g6_remove_nodes","text":"","code":"g6_remove_nodes(graph, ids)  g6_remove_edges(graph, ids)  g6_remove_combos(graph, ids)"},{"path":"https://cynkra.github.io/g6R/reference/g6-remove.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove nodes/edge/combos from a g6 graph via proxy — g6_remove_nodes","text":"graph g6_proxy object created g6_proxy. ids Character vector list containing IDs nodes/edges/combos removed. single ID provided, converted list internally. mix nodes, edges combos ids, elements type.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6-remove.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove nodes/edge/combos from a g6 graph via proxy — g6_remove_nodes","text":"g6_proxy object (invisibly), allowing method chaining.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6-remove.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove nodes/edge/combos from a g6 graph via proxy — g6_remove_nodes","text":"function can used g6_proxy object within Shiny application. work regular g6 objects outside Shiny. See https://g6.antv.antgroup.com/en/api/data#graphremovenodedata, https://g6.antv.antgroup.com/en/api/data#graphremoveedgedata https://g6.antv.antgroup.com/en/api/data#graphremovecombodata details.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6-remove.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Remove nodes/edge/combos from a g6 graph via proxy — g6_remove_nodes","text":"node removed, connected edges also removed.","code":""},{"path":[]},{"path":"https://cynkra.github.io/g6R/reference/g6-set.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the state of nodes/edges/combos in a g6 graph via proxy — g6_set_nodes","title":"Set the state of nodes/edges/combos in a g6 graph via proxy — g6_set_nodes","text":"function sets state one nodes/edges/combos existing g6 graph instance using proxy object. allows updating graph without completely re-rendering . Valid states \"selected\", \"active\", \"inactive\", \"disabled\", \"highlight\".","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the state of nodes/edges/combos in a g6 graph via proxy — g6_set_nodes","text":"","code":"g6_set_nodes(graph, nodes)  g6_set_edges(graph, edges)  g6_set_combos(graph, combos)  g6_set_data(graph, data)"},{"path":"https://cynkra.github.io/g6R/reference/g6-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the state of nodes/edges/combos in a g6 graph via proxy — g6_set_nodes","text":"graph g6_proxy object created g6_proxy. nodes key value pair list node id state. edges key value pair list edge id state. combos key value pair list combo id state. data nested list containing nodes, edges combo data.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6-set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the state of nodes/edges/combos in a g6 graph via proxy — g6_set_nodes","text":"g6_proxy object (invisibly), allowing method chaining.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6-set.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the state of nodes/edges/combos in a g6 graph via proxy — g6_set_nodes","text":"g6_set_data allows set graph data (nodes, edges combos). function can used g6_proxy object within Shiny application. work regular g6 objects outside Shiny. node ID already exists, added . See https://g6.antv.antgroup.com/en/api/element#graphsetelementstateid-state-options details.","code":""},{"path":[]},{"path":"https://cynkra.github.io/g6R/reference/g6-shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny bindings for g6 — g6-shiny","title":"Shiny bindings for g6 — g6-shiny","text":"Output render functions using g6 within Shiny applications interactive Rmd documents.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6-shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny bindings for g6 — g6-shiny","text":"","code":"g6Output(outputId, width = \"100%\", height = \"400px\")  g6_output(outputId, width = \"100%\", height = \"400px\")  renderG6(expr, env = parent.frame(), quoted = FALSE)  render_g6(expr, env = parent.frame(), quoted = FALSE)"},{"path":"https://cynkra.github.io/g6R/reference/g6-shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny bindings for g6 — g6-shiny","text":"outputId output variable read width, height Must valid CSS unit (like '100%', '400px', 'auto') number, coerced string 'px' appended. expr expression generates g6 env environment evaluate expr. quoted expr quoted expression (quote())? useful want save expression variable.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6-shiny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny bindings for g6 — g6-shiny","text":"g6Output g6_output return Shiny output function can used UI part Shiny app. renderG6 render_g6 return Shiny render function can used server part Shiny app render g6 element.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6-update.html","id":null,"dir":"Reference","previous_headings":"","what":"Update nodes/edges/combos to a g6 graph via proxy — g6_update_nodes","title":"Update nodes/edges/combos to a g6 graph via proxy — g6_update_nodes","text":"function updates one nodes/edges/combos existing g6 graph instance using proxy object. allows updating graph without completely re-rendering .","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6-update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update nodes/edges/combos to a g6 graph via proxy — g6_update_nodes","text":"","code":"g6_update_nodes(graph, nodes)  g6_update_edges(graph, edges)  g6_update_combos(graph, combos)"},{"path":"https://cynkra.github.io/g6R/reference/g6-update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update nodes/edges/combos to a g6 graph via proxy — g6_update_nodes","text":"graph g6_proxy object created g6_proxy. nodes, edges, combos data frame list specifying nodes/edges/combos updated. elements type, mix nodes edges.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6-update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update nodes/edges/combos to a g6 graph via proxy — g6_update_nodes","text":"g6_proxy object (invisibly), allowing method chaining.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6-update.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update nodes/edges/combos to a g6 graph via proxy — g6_update_nodes","text":"function can used g6_proxy object within Shiny application. work regular g6 objects outside Shiny. See https://g6.antv.antgroup.com/en/api/data#graphupdatenodedata, https://g6.antv.antgroup.com/en/api/data#graphupdateedgedata https://g6.antv.antgroup.com/en/api/data#graphupdatecombodata details.","code":""},{"path":[]},{"path":"https://cynkra.github.io/g6R/reference/g6.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a G6 Graph Visualization — g6","title":"Create a G6 Graph Visualization — g6","text":"Creates interactive graph visualization using G6 graph visualization library. function main entry point creating G6 graph visualizations R.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a G6 Graph Visualization — g6","text":"","code":"g6(   nodes = NULL,   edges = NULL,   combos = NULL,   jsonUrl = NULL,   iconsUrl = \"//at.alicdn.com/t/font_2678727_za4qjydwkkh.js\",   width = \"100%\",   height = NULL,   elementId = NULL )"},{"path":"https://cynkra.github.io/g6R/reference/g6.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a G6 Graph Visualization — g6","text":"nodes data frame list nodes graph. node least \"id\" field. See 'Data Structure' section details. Default: NULL. edges data frame list edges graph. edge \"source\" \"target\" fields identifying connected nodes. See 'Data Structure' section details. Default: NULL. combos data frame list combo groups graph. combo least \"id\" field. Nodes can assigned combos using \"combo\" field. See 'Data Structure' section details. Default: NULL. jsonUrl url pointing valid JSON containing graph data G6 format. See https://assets.antv.antgroup.com/g6/20000.json example. used time nodes, edges, combos. iconsUrl URL pointing JavaScript file containing custom icons. Default provides reasonable set icons https://.alicdn.com/t/project/2678727/caef142c-804a-4a2f-a914-ae82666a31ee.html?spm=a313x.7781069.1998910419.35. width Width graph container pixels valid CSS unit. Default: NULL (automatic sizing). height Height graph container pixels valid CSS unit. Default: NULL (automatic sizing). elementId unique ID graph HTML element. Default: NULL (automatically generated).","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a G6 Graph Visualization — g6","text":"htmlwidget object can printed, included R Markdown documents, used Shiny applications. widget contains graph data configuration necessary render G6 graph visualization.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a G6 Graph Visualization — g6","text":"g6 function creates G6 graph htmlwidget can used R Markdown, Shiny applications, rendered HTML. takes graph data form nodes, edges, optional combo groupings, along various configuration options customizing appearance behavior graph. Nodes assigned combos setting combo field ID combo.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6.html","id":"nodes","dir":"Reference","previous_headings":"","what":"Nodes","title":"Create a G6 Graph Visualization — g6","text":"nodes parameter data frame list nodes least id field node. Additional fields can include: id (required): Unique identifier node. Must character. type: Node type (e.g., \"circle\", \"rect\", \"diamond\"). data: Custom data associated node. style: List style attributes (color, size, etc.). states: String. Initial states node, selected, active, hover, etc. combo: ID combo node belongs .","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6.html","id":"edges","dir":"Reference","previous_headings":"","what":"Edges","title":"Create a G6 Graph Visualization — g6","text":"edges parameter data frame list edges least source target fields identifying connected nodes. Additional fields can include: source (required): ID source node. Must character. target (required): ID target node. Must character. id: Unique identifier edge. type: Edge type (e.g., \"line\", \"cubic\", \"arc\"). data: Custom data associated edge. style: List style attributes (color, width, etc.). states: String. Initial states edge.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6.html","id":"combos","dir":"Reference","previous_headings":"","what":"Combos","title":"Create a G6 Graph Visualization — g6","text":"combos parameter used grouping nodes can data frame list combo definitions. Fields include: id (required): Unique identifier combo. Must character. type: String: Combo type. can type built-Combo, custom Combo. data: Custom data associated combo. style: List style attributes. states: String. Initial states combo. combo: String. Parent combo ID. parent combo, null.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a G6 Graph Visualization — g6","text":"","code":"# Create a simple graph with two nodes and one edge nodes <- data.frame(   id = c(\"node1\", \"node2\") )  edges <- data.frame(   source = \"node1\",   target = \"node2\" )  g6(nodes = nodes, edges = edges)  {\"x\":{\"data\":{\"nodes\":[{\"id\":\"node1\"},{\"id\":\"node2\"}],\"edges\":[{\"source\":\"node1\",\"target\":\"node2\"}]},\"jsonUrl\":null,\"iconsUrl\":\"//at.alicdn.com/t/font_2678727_za4qjydwkkh.js\"},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://cynkra.github.io/g6R/reference/g6R-package.html","id":null,"dir":"Reference","previous_headings":"","what":"g6R: Graph Visualisation Engine Widget for R and 'shiny' Apps — g6R-package","title":"g6R: Graph Visualisation Engine Widget for R and 'shiny' Apps — g6R-package","text":"Create stunning network experiences powered 'G6' graph visualisation engine 'JavaScript' library https://g6.antv.antgroup.com/en. 'shiny' mode, modify graph directly server function dynamically interact nodes edges. Select favorite layout among 20 choices. 15 behaviors available interactive edge creation, collapse-expand brush select. 17 plugins designed improve user experience mini-map, toolbars grid lines. Customise look feel graph comprehensive options nodes, edges .","code":""},{"path":[]},{"path":"https://cynkra.github.io/g6R/reference/g6R-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"g6R: Graph Visualisation Engine Widget for R and 'shiny' Apps — g6R-package","text":"Maintainer: David Granjon dgranjon@ymail.com Authors: David Schoch david@schochastics.net contributors: cynkra GmbH [funder] Bristol Myers Squibb [funder]","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_add_plugin.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a plugin to a g6 graph via proxy — g6_add_plugin","title":"Add a plugin to a g6 graph via proxy — g6_add_plugin","text":"function adds one plugins existing g6 graph instance using proxy object within Shiny application.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_add_plugin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a plugin to a g6 graph via proxy — g6_add_plugin","text":"","code":"g6_add_plugin(graph, ...)"},{"path":"https://cynkra.github.io/g6R/reference/g6_add_plugin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a plugin to a g6 graph via proxy — g6_add_plugin","text":"graph g6_proxy object created g6_proxy. ... Named arguments name plugin type value list configuration options plugin.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_add_plugin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a plugin to a g6 graph via proxy — g6_add_plugin","text":"g6_proxy object (invisibly), allowing method chaining.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_add_plugin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a plugin to a g6 graph via proxy — g6_add_plugin","text":"function can used g6_proxy object within Shiny application. work regular g6 objects outside Shiny. G6 plugins extend functionality graph visualization features like minimaps, toolbar controls, contextual menus, . function allows adding plugins dynamically graph initialized.","code":""},{"path":[]},{"path":"https://cynkra.github.io/g6R/reference/g6_behaviors.html","id":null,"dir":"Reference","previous_headings":"","what":"Create G6 Graph Behaviors Configuration — g6_behaviors","title":"Create G6 Graph Behaviors Configuration — g6_behaviors","text":"Configures interaction behaviors G6 graph visualization. function collects combines multiple behavior configurations list can passed graph initialization functions.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_behaviors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create G6 Graph Behaviors Configuration — g6_behaviors","text":"","code":"g6_behaviors(graph, ...)"},{"path":"https://cynkra.github.io/g6R/reference/g6_behaviors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create G6 Graph Behaviors Configuration — g6_behaviors","text":"graph g6 graph instance. ... Behavior configuration objects created behavior-specific functions. can include following behaviors: Navigation behaviors: drag_canvas() - Drag entire canvas view zoom_canvas() - Zoom canvas view scroll_canvas() - Scroll canvas using wheel optimize_viewport_transform() - Optimize view transform performance Selection behaviors: click_select() - Click select graph elements brush_select() - Select elements dragging rectangular area lasso_select() - Freely draw area select elements Editing behaviors: create_edge() - Interactively create new edges drag_element() - Drag nodes combos drag_element_force() - Drag nodes force-directed layout Data Exploration behaviors: collapse_expand() - Expand collapse subtree nodes focus_element() - Focus specific elements automatically adjust view hover_activate() - Highlight elements hovering Visual Optimization behaviors: fix_element_size() - Fix element size specified value auto_adapt_label() - Automatically adjust label position","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_behaviors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create G6 Graph Behaviors Configuration — g6_behaviors","text":"list behavior configuration objects can passed G6 graph initialization","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_behaviors.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create G6 Graph Behaviors Configuration — g6_behaviors","text":"can create custom behaviors JavaScript use R side. See https://g6.antv.antgroup.com/en/manual/behavior/custom-behavior.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_behaviors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create G6 Graph Behaviors Configuration — g6_behaviors","text":"","code":"# Create a basic set of behaviors behaviors <- g6_behaviors(   g6(),   drag_canvas(),   zoom_canvas(),   click_select() )  # Create a more customized set of behaviors behaviors <- g6_behaviors(   g6(),   drag_canvas(),   zoom_canvas(sensitivity = 1.5),   hover_activate(state = \"highlight\"),   fix_element_size(     node = list(       list(shape = \"circle\", fields = c(\"r\", \"lineWidth\"))     )   ) )"},{"path":"https://cynkra.github.io/g6R/reference/g6_canvas_resize.html","id":null,"dir":"Reference","previous_headings":"","what":"Resize the canvas of a g6 graph via proxy — g6_canvas_resize","title":"Resize the canvas of a g6 graph via proxy — g6_canvas_resize","text":"function changes size canvas existing g6 graph instance using proxy object. allows updating graph dimensions without completely re-rendering .","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_canvas_resize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resize the canvas of a g6 graph via proxy — g6_canvas_resize","text":"","code":"g6_canvas_resize(graph, width, height)"},{"path":"https://cynkra.github.io/g6R/reference/g6_canvas_resize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resize the canvas of a g6 graph via proxy — g6_canvas_resize","text":"graph g6_proxy object created g6_proxy. width Numeric value specifying new width canvas pixels. height Numeric value specifying new height canvas pixels.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_canvas_resize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resize the canvas of a g6 graph via proxy — g6_canvas_resize","text":"g6_proxy object (invisibly), allowing method chaining.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_canvas_resize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Resize the canvas of a g6 graph via proxy — g6_canvas_resize","text":"function can used g6_proxy object within Shiny application. work regular g6 objects outside Shiny. See https://g6.antv.antgroup.com/en/api/canvas#graphsetsizewidth-height details.","code":""},{"path":[]},{"path":"https://cynkra.github.io/g6R/reference/g6_fit_center.html","id":null,"dir":"Reference","previous_headings":"","what":"Center graph — g6_fit_center","title":"Center graph — g6_fit_center","text":"function pans graph center viewport","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_fit_center.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Center graph — g6_fit_center","text":"","code":"g6_fit_center(graph, animation = NULL)"},{"path":"https://cynkra.github.io/g6R/reference/g6_fit_center.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Center graph — g6_fit_center","text":"graph g6_proxy object created g6_proxy. animation Optional list containing animation configuration parameters focus action. Common parameters include: duration: Duration animation milliseconds. easing: Animation easing function name (e.g., \"ease-\", \"ease-\"). NULL, animation applied.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_fit_center.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Center graph — g6_fit_center","text":"g6_proxy object (invisibly), allowing method chaining.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_fit_center.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Center graph — g6_fit_center","text":"function can used g6_proxy object within Shiny application. work regular g6 objects outside Shiny. See https://g6.antv.antgroup.com/en/api/viewport#graphfitcenteranimation details.","code":""},{"path":[]},{"path":"https://cynkra.github.io/g6R/reference/g6_focus_elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Focus on specific elements in a g6 graph via proxy — g6_focus_elements","title":"Focus on specific elements in a g6 graph via proxy — g6_focus_elements","text":"function focuses one elements (nodes/edges) existing g6 graph instance using proxy object. highlights specified elements can optionally animate view focus .","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_focus_elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Focus on specific elements in a g6 graph via proxy — g6_focus_elements","text":"","code":"g6_focus_elements(graph, ids, animation = NULL)"},{"path":"https://cynkra.github.io/g6R/reference/g6_focus_elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Focus on specific elements in a g6 graph via proxy — g6_focus_elements","text":"graph g6_proxy object created g6_proxy. ids Character vector containing IDs elements (nodes/edges) focus . animation Optional list containing animation configuration parameters focus action. Common parameters include: duration: Duration animation milliseconds. easing: Animation easing function name (e.g., \"ease-\", \"ease-\"). NULL, animation applied.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_focus_elements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Focus on specific elements in a g6 graph via proxy — g6_focus_elements","text":"g6_proxy object (invisibly), allowing method chaining.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_focus_elements.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Focus on specific elements in a g6 graph via proxy — g6_focus_elements","text":"function can used g6_proxy object within Shiny application. work regular g6 objects outside Shiny. See https://g6.antv.antgroup.com/en/api/element#graphfocuselementid-animation details.","code":""},{"path":[]},{"path":"https://cynkra.github.io/g6R/reference/g6_igraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a G6 Graph from an igraph Object — g6_igraph","title":"Create a G6 Graph from an igraph Object — g6_igraph","text":"Converts igraph graph object format required g6() function creates interactive G6 graph visualization. convenience wrapper around g6() allows work directly igraph objects.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_igraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a G6 Graph from an igraph Object — g6_igraph","text":"","code":"g6_igraph(   graph,   combos = NULL,   width = \"100%\",   height = NULL,   elementId = NULL )"},{"path":"https://cynkra.github.io/g6R/reference/g6_igraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a G6 Graph from an igraph Object — g6_igraph","text":"graph object class igraph::igraph containing graph visualize. combos data frame list combo groups graph. combo least \"id\" field. Nodes can assigned combos using \"combo\" field. See 'Data Structure' section details. Default: NULL. width Width graph container pixels valid CSS unit. Default: NULL (automatic sizing). height Height graph container pixels valid CSS unit. Default: NULL (automatic sizing). elementId unique ID graph HTML element. Default: NULL (automatically generated).","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_igraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a G6 Graph from an igraph Object — g6_igraph","text":"htmlwidget object can rendered R Markdown, Shiny apps, R console.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_igraph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a G6 Graph from an igraph Object — g6_igraph","text":"function extracts node edge data igraph object, converts appropriate format G6, passes g6(). Node styling derived vertex attributes, edge styling edge attributes. graph directed, edges automatically rendered arrows.","code":""},{"path":[]},{"path":"https://cynkra.github.io/g6R/reference/g6_igraph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a G6 Graph from an igraph Object — g6_igraph","text":"","code":"if (require(igraph)) {   g <- igraph::make_ring(5)   g6_igraph(g) } #> Loading required package: igraph #>  #> Attaching package: ‘igraph’ #> The following objects are masked from ‘package:stats’: #>  #>     decompose, spectrum #> The following object is masked from ‘package:base’: #>  #>     union  {\"x\":{\"data\":{\"nodes\":[{\"id\":\"1\",\"style\":{\"collapsed\":false,\"cursor\":\"default\",\"fill\":\"#1783FF\",\"fillOpacity\":1,\"increasedLineWidthForHitTesting\":0,\"lineCap\":\"butt\",\"lineJoin\":\"miter\",\"lineWidth\":1,\"opacity\":1,\"shadowType\":\"outer\",\"size\":32,\"stroke\":\"#000\",\"strokeOpacity\":1,\"visibility\":\"visible\",\"id\":\"1\"}},{\"id\":\"2\",\"style\":{\"collapsed\":false,\"cursor\":\"default\",\"fill\":\"#1783FF\",\"fillOpacity\":1,\"increasedLineWidthForHitTesting\":0,\"lineCap\":\"butt\",\"lineJoin\":\"miter\",\"lineWidth\":1,\"opacity\":1,\"shadowType\":\"outer\",\"size\":32,\"stroke\":\"#000\",\"strokeOpacity\":1,\"visibility\":\"visible\",\"id\":\"2\"}},{\"id\":\"3\",\"style\":{\"collapsed\":false,\"cursor\":\"default\",\"fill\":\"#1783FF\",\"fillOpacity\":1,\"increasedLineWidthForHitTesting\":0,\"lineCap\":\"butt\",\"lineJoin\":\"miter\",\"lineWidth\":1,\"opacity\":1,\"shadowType\":\"outer\",\"size\":32,\"stroke\":\"#000\",\"strokeOpacity\":1,\"visibility\":\"visible\",\"id\":\"3\"}},{\"id\":\"4\",\"style\":{\"collapsed\":false,\"cursor\":\"default\",\"fill\":\"#1783FF\",\"fillOpacity\":1,\"increasedLineWidthForHitTesting\":0,\"lineCap\":\"butt\",\"lineJoin\":\"miter\",\"lineWidth\":1,\"opacity\":1,\"shadowType\":\"outer\",\"size\":32,\"stroke\":\"#000\",\"strokeOpacity\":1,\"visibility\":\"visible\",\"id\":\"4\"}},{\"id\":\"5\",\"style\":{\"collapsed\":false,\"cursor\":\"default\",\"fill\":\"#1783FF\",\"fillOpacity\":1,\"increasedLineWidthForHitTesting\":0,\"lineCap\":\"butt\",\"lineJoin\":\"miter\",\"lineWidth\":1,\"opacity\":1,\"shadowType\":\"outer\",\"size\":32,\"stroke\":\"#000\",\"strokeOpacity\":1,\"visibility\":\"visible\",\"id\":\"5\"}}],\"edges\":[{\"source\":\"1\",\"target\":\"2\",\"style\":{\"cursor\":\"default\",\"fillRule\":\"nonzero\",\"isBillboard\":true,\"lineDash\":0,\"lineDashOffset\":0,\"lineWidth\":1,\"opacity\":1,\"sourcePort\":\"1\",\"stroke\":\"#000\",\"strokeOpacity\":1,\"targetPort\":\"2\",\"visibility\":\"visible\",\"zIndex\":-10000}},{\"source\":\"2\",\"target\":\"3\",\"style\":{\"cursor\":\"default\",\"fillRule\":\"nonzero\",\"isBillboard\":true,\"lineDash\":0,\"lineDashOffset\":0,\"lineWidth\":1,\"opacity\":1,\"sourcePort\":\"2\",\"stroke\":\"#000\",\"strokeOpacity\":1,\"targetPort\":\"3\",\"visibility\":\"visible\",\"zIndex\":-10000}},{\"source\":\"3\",\"target\":\"4\",\"style\":{\"cursor\":\"default\",\"fillRule\":\"nonzero\",\"isBillboard\":true,\"lineDash\":0,\"lineDashOffset\":0,\"lineWidth\":1,\"opacity\":1,\"sourcePort\":\"3\",\"stroke\":\"#000\",\"strokeOpacity\":1,\"targetPort\":\"4\",\"visibility\":\"visible\",\"zIndex\":-10000}},{\"source\":\"4\",\"target\":\"5\",\"style\":{\"cursor\":\"default\",\"fillRule\":\"nonzero\",\"isBillboard\":true,\"lineDash\":0,\"lineDashOffset\":0,\"lineWidth\":1,\"opacity\":1,\"sourcePort\":\"4\",\"stroke\":\"#000\",\"strokeOpacity\":1,\"targetPort\":\"5\",\"visibility\":\"visible\",\"zIndex\":-10000}},{\"source\":\"1\",\"target\":\"5\",\"style\":{\"cursor\":\"default\",\"fillRule\":\"nonzero\",\"isBillboard\":true,\"lineDash\":0,\"lineDashOffset\":0,\"lineWidth\":1,\"opacity\":1,\"sourcePort\":\"1\",\"stroke\":\"#000\",\"strokeOpacity\":1,\"targetPort\":\"5\",\"visibility\":\"visible\",\"zIndex\":-10000}}]},\"jsonUrl\":null,\"iconsUrl\":\"//at.alicdn.com/t/font_2678727_za4qjydwkkh.js\"},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://cynkra.github.io/g6R/reference/g6_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the layout algorithm for a g6 graph — g6_layout","title":"Set the layout algorithm for a g6 graph — g6_layout","text":"function configures layout algorithm used position nodes g6 graph.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the layout algorithm for a g6 graph — g6_layout","text":"","code":"g6_layout(graph, layout = d3_force_layout())"},{"path":"https://cynkra.github.io/g6R/reference/g6_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the layout algorithm for a g6 graph — g6_layout","text":"graph g6 graph object created g6(). layout existing layout function like circular_layout string like circular-layout. minimum, can list contain type element specifying layout algorithm. Additional parameters depend layout type chosen, instance list(type = \"force\").","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the layout algorithm for a g6 graph — g6_layout","text":"modified g6 graph object specified layout, allowing method chaining.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_layout.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the layout algorithm for a g6 graph — g6_layout","text":"G6 provides several layout algorithms, suitable different graph structures: force: Force-directed layout using physical simulation forces. random: Random layout placing nodes randomly. circular: Arranges nodes circle. radial: Radial layout nodes arranged outward central node. grid: Arranges nodes grid pattern. concentric: Concentric circles important nodes center. dagre: Hierarchical layout directed acyclic graphs. fruchterman: Force-directed layout based Fruchterman-Reingold algorithm. mds: Multidimensional scaling layout. comboForce: Force-directed layout specially designed combo graphs. layout algorithm specific configuration options. See G6 documentation detailed information layout parameters: https://g6.antv.antgroup.com/en/manual/layout/overview.","code":""},{"path":[]},{"path":"https://cynkra.github.io/g6R/reference/g6_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Global Options for G6 Graph — g6_options","title":"Configure Global Options for G6 Graph — g6_options","text":"Sets global configuration options G6 graph including node, edge combo styles, layout, canvas, animation, interactive behavior settings.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Global Options for G6 Graph — g6_options","text":"","code":"g6_options(   graph,   node = NULL,   edge = NULL,   combo = NULL,   autoFit = NULL,   canvas = NULL,   animation = TRUE,   autoResize = FALSE,   background = NULL,   cursor = valid_cursors,   devicePixelRatio = NULL,   renderer = NULL,   padding = NULL,   rotation = 0,   x = NULL,   y = NULL,   zoom = 1,   zoomRange = c(0.01, 10),   theme = \"light\",   ... )"},{"path":"https://cynkra.github.io/g6R/reference/g6_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Global Options for G6 Graph — g6_options","text":"graph g6 graph instance. node Node configuration. Controls default appearance behavior nodes. Created node_options(). Default: NULL. edge Edge configuration. Controls default appearance behavior edges. Created edge_options(). Default: NULL. combo Combo configuration. Controls default appearance behavior combo nodes. Created combo_options(). Default: NULL. autoFit Automatically fit graph content canvas. Created auto_fit_config(). Default: NULL. canvas Canvas configuration graph rendering surface. Created canvas_config(). Default: NULL. animation Global animation configuration graph transitions. Created animation_config(). Default: TRUE. autoResize Whether graph automatically resize window size changes. Default: FALSE. background Background color graph. specified, background transparent. Default: NULL. cursor Default mouse cursor style hovering graph. Options include: \"default\", \"pointer\", \"move\", etc. Default: \"default\". devicePixelRatio Device pixel ratio rendering high-DPI displays. NULL, browser's default device pixel ratio used. Default: NULL. renderer Rendering engine use. Options: \"canvas\", \"svg\", \"webgl\", \"webgpu\". Default: NULL (G6 choose appropriate renderer). padding Padding around graph content pixels. Can single number equal padding sides vector four numbers [top, right, bottom, left]. Default: NULL. rotation Rotation angle entire graph degrees. Default: 0. x X-coordinate graph's center relative container. Default: NULL (use container center). y Y-coordinate graph's center relative container. Default: NULL (use container center). zoom Initial zoom level graph. 1 represents 100% (original size). Default: 1. zoomRange Minimum maximum allowed zoom levels, specified vector two elements: c(min_zoom, max_zoom). Default: c(0.01, 10). theme Color theme graph. Either light dark list representing custom theme: see https://g6.antv.antgroup.com/en/manual/theme/custom-theme. ... configuration parameters.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Global Options for G6 Graph — g6_options","text":"list containing specified G6 graph configuration options.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Configure Global Options for G6 Graph — g6_options","text":"g6_options function provides comprehensive configuration interface G6 graphs. allows control aspects graph rendering behavior, styling individual elements global visualization settings.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Global Options for G6 Graph — g6_options","text":"","code":"# Basic usage with defaults opts <- g6_options(g6())  # Customize node and edge styles opts <- g6_options(   g6(),   node = node_options(     type = \"circle\",     style = node_style_options(       fill = \"#1783FF\",       stroke = \"#0066CC\"     )   ),   edge = edge_options(     type = \"cubic\",     style = edge_style_options(       stroke = \"#999999\",       lineWidth = 1.5     )   ) )  # Configure graph with dark theme, auto-resize, and custom background opts <- g6_options(   g6(),   theme = \"dark\",   autoResize = TRUE,   background = \"#222222\",   padding = 20,   zoom = 0.8,   zoomRange = c(0.5, 2) )  # Configure with custom animations opts <- g6_options(   g6(),   animation = animation_config(     duration = 500,     easing = \"easeCubic\"   ),   autoFit = auto_fit_config(duration = 300, easing = \"ease-out\") )"},{"path":"https://cynkra.github.io/g6R/reference/g6_plugins.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a List of G6 Plugins — g6_plugins","title":"Create a List of G6 Plugins — g6_plugins","text":"Combines multiple G6 plugins list can passed G6 graph configuration. G6 plugins extend functionality base graph visualization additional features.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_plugins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a List of G6 Plugins — g6_plugins","text":"","code":"g6_plugins(graph, ...)"},{"path":"https://cynkra.github.io/g6R/reference/g6_plugins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a List of G6 Plugins — g6_plugins","text":"graph G6 graph instance. ... G6 plugin configuration objects created plugin-specific functions","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_plugins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a List of G6 Plugins — g6_plugins","text":"list G6 plugin configurations can passed G6 graph.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_plugins.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a List of G6 Plugins — g6_plugins","text":"G6 plugins provide extended functionality beyond core graph visualization capabilities. Plugins divided several categories:","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_plugins.html","id":"visual-style-enhancement","dir":"Reference","previous_headings":"","what":"Visual Style Enhancement","title":"Create a List of G6 Plugins — g6_plugins","text":"Grid Line (grid-line): Displays grid reference lines canvas Background (background): Adds background images colors canvas Watermark (watermark): Adds watermark canvas protect copyright Hull (hull): Creates outline specified set nodes Bubble Sets (bubble-sets): Creates smooth bubble-like element outlines Snapline (snapline): Displays alignment reference lines dragging elements","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_plugins.html","id":"navigation-and-overview","dir":"Reference","previous_headings":"","what":"Navigation and Overview","title":"Create a List of G6 Plugins — g6_plugins","text":"Minimap (minimap): Displays thumbnail preview graph, supporting navigation Fullscreen (fullscreen): Supports full-screen display exit charts Timebar (timebar): Provides filtering playback control temporal data","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_plugins.html","id":"interactive-controls","dir":"Reference","previous_headings":"","what":"Interactive Controls","title":"Create a List of G6 Plugins — g6_plugins","text":"Toolbar (toolbar): Provides collection common operation buttons Context Menu (contextmenu): Displays menu selectable operations right-click Tooltip (tooltip): Displays detailed information elements hover Legend (legend): Displays categories corresponding style descriptions chart data","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_plugins.html","id":"data-exploration","dir":"Reference","previous_headings":"","what":"Data Exploration","title":"Create a List of G6 Plugins — g6_plugins","text":"Fisheye (fisheye): Provides focus + context exploration experience Edge Filter Lens (edge-filter-lens): Filters displays edges within specified area Edge Bundling (edge-bundling): Bundles edges similar paths together reduce visual clutter","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_plugins.html","id":"advanced-features","dir":"Reference","previous_headings":"","what":"Advanced Features","title":"Create a List of G6 Plugins — g6_plugins","text":"History (history): Supports undo/redo operations Camera Setting (camera-setting): Configures camera parameters 3D scene","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_plugins.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a List of G6 Plugins — g6_plugins","text":"can also build plugins described https://g6.antv.antgroup.com/en/manual/plugin/custom-plugin.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_plugins.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a List of G6 Plugins — g6_plugins","text":"","code":"# Create a configuration with multiple plugins plugins <- g6_plugins(   g6(),   minimap(),   grid_line(),   tooltips(     getContent = JS(\"(e, items) => {       return `<div>${items[0].id}<\/div>`;     }\")   ) )  # Add a context menu and toolbar plugins <- g6_plugins(   g6(),   context_menu(     key = \"my-context-menu\",     className = \"my-context-menu\",     trigger = \"click\",     offset = c(10, 10),     getItems = JS(\"(event) => {       const type = event.itemType;       const isNode = type === 'node';       return [         { key: 'delete', text: 'Delete' },         { key: 'edit', text: 'Edit' },         { key: 'details', text: 'View Details', disabled: !isNode }       ];     }\"),     onClick = JS(\"(value, target, current) => {       if (value === 'delete') {         // do stuff     }\")   ),   toolbar(     position = \"top-right\",     getItems = JS(\"() => [       { id: 'zoom-in', value: 'zoom-in' },       { id: 'zoom-out', value: 'zoom-out' },       { id: 'fit', value: 'fit' }     ]\"),     onClick = JS(\"(value) => {       if (value === 'zoom-in') graph.zoomTo(1.1);       else if (value === 'zoom-out') graph.zoomTo(0.9);       else if (value === 'fit') graph.fitView();     }\")   ) )"},{"path":"https://cynkra.github.io/g6R/reference/g6_proxy.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a proxy object to modify an existing g6 graph instance — g6_proxy","title":"Create a proxy object to modify an existing g6 graph instance — g6_proxy","text":"function creates proxy object can used update existing g6 graph instance rendered UI. proxy allows server-side modifications graph without completely re-rendering .","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_proxy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a proxy object to modify an existing g6 graph instance — g6_proxy","text":"","code":"g6_proxy(id, session = shiny::getDefaultReactiveDomain())"},{"path":"https://cynkra.github.io/g6R/reference/g6_proxy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a proxy object to modify an existing g6 graph instance — g6_proxy","text":"id Character string matching ID g6 graph instance modified. session Shiny session object within graph exists. default, uses current reactive domain.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_proxy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a proxy object to modify an existing g6 graph instance — g6_proxy","text":"proxy object class \"g6_proxy\" can used g6 proxy methods g6_add_nodes(), g6_remove_nodes(), etc.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_set_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Set options for a g6 graph via proxy — g6_set_options","title":"Set options for a g6 graph via proxy — g6_set_options","text":"function allows updating various configuration options existing g6 graph instance using proxy object within Shiny application.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_set_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set options for a g6 graph via proxy — g6_set_options","text":"","code":"g6_set_options(graph, ...)"},{"path":"https://cynkra.github.io/g6R/reference/g6_set_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set options for a g6 graph via proxy — g6_set_options","text":"graph g6_proxy object created g6_proxy. ... Named arguments representing options update new values. can include valid g6 graph options fitView, animate, modes, etc.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_set_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set options for a g6 graph via proxy — g6_set_options","text":"g6_proxy object (invisibly), allowing method chaining.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_set_options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set options for a g6 graph via proxy — g6_set_options","text":"function can used g6_proxy object within Shiny application. work regular g6 objects outside Shiny. function allows updating various graph options dynamically without re-render entire graph. useful changing behavior, appearance, interaction modes response user input.","code":""},{"path":[]},{"path":"https://cynkra.github.io/g6R/reference/g6_set_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the theme for a g6 graph via proxy — g6_set_theme","title":"Set the theme for a g6 graph via proxy — g6_set_theme","text":"function sets theme existing g6 graph instance","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_set_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the theme for a g6 graph via proxy — g6_set_theme","text":"","code":"g6_set_theme(graph, theme)"},{"path":"https://cynkra.github.io/g6R/reference/g6_set_theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the theme for a g6 graph via proxy — g6_set_theme","text":"graph g6_proxy object created g6_proxy. theme character string representing theme apply graph. 2 internal predefined themes: light dark. Alternatively, can pass custom theme object conforms G6 theme specifications, according documentation https://g6.antv.antgroup.com/en/manual/theme/custom-theme.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_set_theme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the theme for a g6 graph via proxy — g6_set_theme","text":"g6_proxy object (invisibly), allowing method chaining.","code":""},{"path":[]},{"path":"https://cynkra.github.io/g6R/reference/g6_update_behavior.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a behavior in a g6 graph via proxy — g6_update_behavior","title":"Update a behavior in a g6 graph via proxy — g6_update_behavior","text":"function allows updating configuration existing behavior g6 graph instance using proxy object within Shiny application.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_update_behavior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a behavior in a g6 graph via proxy — g6_update_behavior","text":"","code":"g6_update_behavior(graph, key, ...)"},{"path":"https://cynkra.github.io/g6R/reference/g6_update_behavior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a behavior in a g6 graph via proxy — g6_update_behavior","text":"graph g6_proxy object created g6_proxy. key Character string identifying behavior update. ... Named arguments representing behavior configuration options update new values.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_update_behavior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a behavior in a g6 graph via proxy — g6_update_behavior","text":"g6_proxy object (invisibly), allowing method chaining.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_update_behavior.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update a behavior in a g6 graph via proxy — g6_update_behavior","text":"function can used g6_proxy object within Shiny application. work regular g6 objects outside Shiny. Behaviors G6 define graph responds user interactions like dragging, zooming, clicking, etc. function allows dynamically updating configuration behaviors without reinitialize graph.","code":""},{"path":[]},{"path":"https://cynkra.github.io/g6R/reference/g6_update_plugin.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a plugin in a g6 graph via proxy — g6_update_plugin","title":"Update a plugin in a g6 graph via proxy — g6_update_plugin","text":"function allows updating configuration existing plugin g6 graph instance using proxy object within Shiny application.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_update_plugin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a plugin in a g6 graph via proxy — g6_update_plugin","text":"","code":"g6_update_plugin(graph, key, ...)"},{"path":"https://cynkra.github.io/g6R/reference/g6_update_plugin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a plugin in a g6 graph via proxy — g6_update_plugin","text":"graph g6_proxy object created g6_proxy. key Character string identifying plugin update. ... Named arguments representing plugin configuration options update new values.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_update_plugin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a plugin in a g6 graph via proxy — g6_update_plugin","text":"g6_proxy object (invisibly), allowing method chaining.","code":""},{"path":"https://cynkra.github.io/g6R/reference/g6_update_plugin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update a plugin in a g6 graph via proxy — g6_update_plugin","text":"function can used g6_proxy object within Shiny application. work regular g6 objects outside Shiny. function allows dynamically updating configuration existing plugin without reinitialize . useful changing plugin behavior appearance response user interactions.","code":""},{"path":[]},{"path":"https://cynkra.github.io/g6R/reference/grid_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Grid Line Plugin — grid_line","title":"Configure Grid Line Plugin — grid_line","text":"Creates configuration object grid-line plugin G6. plugin adds background grid graph canvas.","code":""},{"path":"https://cynkra.github.io/g6R/reference/grid_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Grid Line Plugin — grid_line","text":"","code":"grid_line(   key = \"grid-line\",   border = TRUE,   borderLineWidth = 1,   borderStroke = \"#eee\",   borderStyle = \"solid\",   follow = FALSE,   lineWidth = 1,   size = 20,   stroke = \"#eee\",   ... )"},{"path":"https://cynkra.github.io/g6R/reference/grid_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Grid Line Plugin — grid_line","text":"key Unique identifier plugin (string, default: NULL). border Whether display border (boolean, default: TRUE). borderLineWidth Border line width (number, default: 1). borderStroke Border color (string, default: \"#eee\"). borderStyle Border style (string, default: \"solid\"). follow Whether grid follows canvas movements (boolean list, default: FALSE). lineWidth Grid line width (number string, default: 1). size Grid unit size pixels (number, default: 20). stroke Grid line color (string, default: \"#eee\"). ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/plugin/grid-line.","code":""},{"path":"https://cynkra.github.io/g6R/reference/grid_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Grid Line Plugin — grid_line","text":"list configuration settings grid-line plugin.","code":""},{"path":"https://cynkra.github.io/g6R/reference/grid_line.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Grid Line Plugin — grid_line","text":"","code":"# Basic configuration config <- grid_line()  # Custom configuration config <- grid_line(   key = \"my-grid\",   border = TRUE,   borderLineWidth = 2,   borderStroke = \"#ccc\",   borderStyle = \"dashed\",   follow = list(     translate = TRUE,     zoom = FALSE   ),   lineWidth = 0.5,   size = 30,   stroke = \"#e0e0e0\" )"},{"path":"https://cynkra.github.io/g6R/reference/history.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure History Plugin — history","title":"Configure History Plugin — history","text":"Creates configuration object history plugin G6. plugin enables undo/redo functionality graph operations.","code":""},{"path":"https://cynkra.github.io/g6R/reference/history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure History Plugin — history","text":"","code":"history(   key = \"history\",   afterAddCommand = NULL,   beforeAddCommand = NULL,   executeCommand = NULL,   stackSize = 0,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/history.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure History Plugin — history","text":"key Unique identifier plugin (string, default: NULL). afterAddCommand Callback function called command added undo/redo queue (JS function, default: NULL). beforeAddCommand Callback function called command added undo/redo queue (JS function, default: NULL). executeCommand Callback function called executing command (JS function, default: NULL). stackSize Maximum length history records recorded, 0 means unlimited (number, default: 0). ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/plugin/history.","code":""},{"path":"https://cynkra.github.io/g6R/reference/history.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure History Plugin — history","text":"list configuration settings history plugin.","code":""},{"path":"https://cynkra.github.io/g6R/reference/history.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure History Plugin — history","text":"","code":"# Basic configuration config <- history()  # Custom configuration config <- history(   key = \"my-history\",   stackSize = 50,   beforeAddCommand = JS(\"function(cmd, revert) {     console.log('Before adding command:', cmd);     // Only allow certain operations to be recorded     return cmd.method !== 'update';   }\"),   afterAddCommand = JS(\"function(cmd, revert) {     console.log('Command added to ' + (revert ? 'undo' : 'redo') + ' stack');   }\"),   executeCommand = JS(\"function(cmd) {     console.log('Executing command:', cmd);   }\") )"},{"path":"https://cynkra.github.io/g6R/reference/hover_activate.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Hover Activate Behavior — hover_activate","title":"Configure Hover Activate Behavior — hover_activate","text":"Creates configuration object hover-activate behavior G6. behavior activates elements mouse hovers .","code":""},{"path":"https://cynkra.github.io/g6R/reference/hover_activate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Hover Activate Behavior — hover_activate","text":"","code":"hover_activate(   key = \"hover-activate\",   animation = TRUE,   enable = TRUE,   degree = 0,   direction = c(\"both\", \"in\", \"out\"),   state = \"active\",   inactiveState = NULL,   onHover = NULL,   onHoverEnd = NULL,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/hover_activate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Hover Activate Behavior — hover_activate","text":"key Unique identifier behavior (string, default: \"hover-activate\"). animation Whether enable animation (boolean, default: TRUE). enable Whether enable hover feature (boolean JS function, default: TRUE). degree Degree relationship activate elements (number JS function, default: 0). direction Specify edge direction: \"\", \"\", \"\" (string, default: \"\"). state State activated elements (string, default: \"active\"). inactiveState State inactive elements (string, default: NULL). onHover Callback element hovered (JS function, default: NULL). onHoverEnd Callback hover ends (JS function, default: NULL). ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/behavior/hover-activate.","code":""},{"path":"https://cynkra.github.io/g6R/reference/hover_activate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Hover Activate Behavior — hover_activate","text":"list configuration settings hover-activate behavior.","code":""},{"path":"https://cynkra.github.io/g6R/reference/hover_activate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Hover Activate Behavior — hover_activate","text":"","code":"# Basic configuration config <- hover_activate()  # Custom configuration config <- hover_activate(   key = \"my-hover-behavior\",   animation = FALSE,   degree = 1,   direction = \"out\",   state = \"highlight\",   inactiveState = \"inactive\",   onHover = JS(\"(event) => { console.log('Hover on:', event.target.id); }\") )"},{"path":"https://cynkra.github.io/g6R/reference/hull.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Hull Plugin — hull","title":"Configure Hull Plugin — hull","text":"Creates configuration object hull plugin G6. plugin creates hull (convex concave) surrounds specified graph elements.","code":""},{"path":"https://cynkra.github.io/g6R/reference/hull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Hull Plugin — hull","text":"","code":"hull(   members,   key = \"hull\",   concavity = Inf,   corner = c(\"rounded\", \"smooth\", \"sharp\"),   padding = 10,   label = TRUE,   labelText = NULL,   labelPlacement = c(\"bottom\", \"left\", \"right\", \"top\", \"center\"),   labelBackground = FALSE,   labelPadding = 0,   labelCloseToPath = TRUE,   labelAutoRotate = TRUE,   labelOffsetX = 0,   labelOffsetY = 0,   labelMaxWidth = 0,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/hull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Hull Plugin — hull","text":"members Elements within hull, including nodes edges (character/numeric vector, required). key Unique identifier plugin (string, default: NULL). concavity Concavity parameter, larger values create less concave hulls (number, default: Infinity). corner Corner type: \"rounded\", \"smooth\", \"sharp\" (string, default: \"rounded\"). padding Padding around elements (number, default: 10). label Whether display label (boolean, default: TRUE). labelText Label text content. Default NULL. labelPlacement Label position: \"left\", \"right\", \"top\", \"bottom\", \"center\" (string, default: \"bottom\"). labelBackground Whether display background (boolean, default: FALSE). labelPadding Label padding (number numeric vector, default: 0). labelCloseToPath Whether label close hull (boolean, default: TRUE). labelAutoRotate Whether label rotates hull, effective closeToPath true (boolean, default: TRUE). labelOffsetX X-axis offset (number, default: 0). labelOffsetY Y-axis offset (number, default: 0). labelMaxWidth Maximum width text, exceeding ellipsized (number, default: 0). ... options. See https://g6.antv.antgroup.com/en/manual/plugin/hull.","code":""},{"path":"https://cynkra.github.io/g6R/reference/hull.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Hull Plugin — hull","text":"list configuration settings hull plugin.","code":""},{"path":"https://cynkra.github.io/g6R/reference/hull.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Hull Plugin — hull","text":"","code":"# Basic configuration config <- hull(members = c(\"node1\", \"node2\", \"node3\"))  # Custom configuration for a cluster config <- hull(   key = \"cluster-hull\",   members = c(\"node1\", \"node2\", \"node3\", \"node4\"),   concavity = 0.8,   corner = \"smooth\",   padding = 15,   label = TRUE,   labelPlacement = \"top\",   labelBackground = TRUE,   labelPadding = c(4, 8),   labelMaxWidth = 100 )"},{"path":"https://cynkra.github.io/g6R/reference/lasso_select.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Lasso Select Behavior — lasso_select","title":"Configure Lasso Select Behavior — lasso_select","text":"Creates configuration object lasso-select behavior G6. behavior allows selecting elements drawing lasso around .","code":""},{"path":"https://cynkra.github.io/g6R/reference/lasso_select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Lasso Select Behavior — lasso_select","text":"","code":"lasso_select(   key = \"lasso-select\",   animation = FALSE,   enable = TRUE,   enableElements = \"node\",   immediately = FALSE,   mode = c(\"default\", \"union\", \"intersect\", \"diff\"),   onSelect = NULL,   state = \"selected\",   style = NULL,   trigger = c(\"shift\"),   ... )"},{"path":"https://cynkra.github.io/g6R/reference/lasso_select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Lasso Select Behavior — lasso_select","text":"key Unique identifier behavior (string, default: \"lasso-select\"). animation Whether enable animation (boolean, default: FALSE). enable Whether enable lasso selection (boolean JS function, default: TRUE). enableElements Types elements can selected (character vector, default: c(\"node\", \"combo\", \"edge\")). immediately Whether select immediately, effective selection mode default (boolean, default: FALSE). mode Selection mode: \"union\", \"intersect\", \"diff\", \"default\" (string, default: \"default\"). onSelect Callback selected element state (JS function, default: NULL). state State switch selected (string, default: \"selected\"). style Style lasso selection (list, default: NULL). trigger Press shortcut key along mouse click select (character vector, default: c(\"shift\")). ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/behavior/lasso-select.","code":""},{"path":"https://cynkra.github.io/g6R/reference/lasso_select.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Lasso Select Behavior — lasso_select","text":"list configuration settings lasso-select behavior.","code":""},{"path":"https://cynkra.github.io/g6R/reference/lasso_select.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Lasso Select Behavior — lasso_select","text":"","code":"# Basic configuration config <- lasso_select()  # Custom configuration config <- lasso_select(   key = \"my-lasso-select\",   animation = TRUE,   enableElements = c(\"node\", \"combo\"),   mode = \"union\",   state = \"highlight\",   trigger = c(\"control\"),   style = list(     stroke = \"#1890FF\",     lineWidth = 2,     fillOpacity = 0.1   ) )"},{"path":"https://cynkra.github.io/g6R/reference/legend.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Legend Plugin — legend","title":"Configure Legend Plugin — legend","text":"Creates configuration object legend plugin G6. plugin adds legend graph, allowing users identify interact different categories elements.","code":""},{"path":"https://cynkra.github.io/g6R/reference/legend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Legend Plugin — legend","text":"","code":"legend(   key = \"legend\",   trigger = c(\"hover\", \"click\"),   position = c(\"bottom\", \"top\", \"left\", \"right\", \"top-left\", \"top-right\", \"bottom-left\",     \"bottom-right\"),   container = NULL,   className = NULL,   containerStyle = NULL,   nodeField = NULL,   edgeField = NULL,   comboField = NULL,   orientation = c(\"horizontal\", \"vertical\"),   layout = c(\"flex\", \"grid\"),   showTitle = FALSE,   titleText = \"\",   x = NULL,   y = NULL,   width = 240,   height = 160,   itemSpacing = 4,   rowPadding = 10,   colPadding = 10,   itemMarkerSize = 16,   itemLabelFontSize = 16,   gridCol = NULL,   gridRow = NULL,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/legend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Legend Plugin — legend","text":"key Unique identifier plugin (string, default: NULL). trigger legend items trigger highlighting: \"hover\" \"click\" (string, default: \"hover\"). position Relative position legend canvas (string, default: \"bottom\"). container Container legend mounted (HTML element string, default: NULL). className Legend canvas class name (string, default: NULL). containerStyle Style legend container (list JS object, default: NULL). nodeField Node classification identifier (string JS function, default: NULL). edgeField Edge classification identifier (string JS function, default: NULL). comboField Combo classification identifier (string JS function, default: NULL). orientation Layout direction: \"horizontal\" \"vertical\" (string, default: \"horizontal\"). layout Layout method: \"flex\" \"grid\" (string, default: \"flex\"). showTitle Whether display title (boolean, default: FALSE). titleText Title content (string, default: \"\"). x Relative horizontal position (number, default: NULL). y Relative vertical position (number, default: NULL). width Width legend (number, default: 240). height Height legend (number, default: 160). itemSpacing Spacing text marker (number, default: 4). rowPadding Spacing rows (number, default: 10). colPadding Spacing columns (number, default: 10). itemMarkerSize Size legend item marker (number, default: 16). itemLabelFontSize Font size legend item text (number, default: 16). gridCol Maximum number columns grid layout (number, default: NULL). gridRow Maximum number rows grid layout (number, default: NULL). ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/plugin/legend.","code":""},{"path":"https://cynkra.github.io/g6R/reference/legend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Legend Plugin — legend","text":"list configuration settings legend plugin.","code":""},{"path":"https://cynkra.github.io/g6R/reference/legend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Legend Plugin — legend","text":"","code":"# Basic configuration for node categories config <- legend(   nodeField = \"category\" )  # Advanced configuration config <- legend(   key = \"my-legend\",   position = \"top-right\",   nodeField = \"type\",   edgeField = \"relation\",   orientation = \"vertical\",   layout = \"grid\",   showTitle = TRUE,   titleText = \"Graph Elements\",   width = 300,   height = 200,   gridCol = 2,   containerStyle = list(     background = \"#f9f9f9\",     border = \"1px solid #ddd\",     borderRadius = \"4px\",     padding = \"8px\"   ) )  # Using a function for classification config <- legend(   nodeField = JS(\"(item) => {     return item.data.importance > 0.5 ? 'Important' : 'Regular';   }\") )"},{"path":"https://cynkra.github.io/g6R/reference/lesmis.html","id":null,"dir":"Reference","previous_headings":"","what":"Character network from ","title":"Character network from ","text":"dataset containing Les Misérables characters network, encoding interactions characters Victor Hugo's novel. Two characters connected whenever appear chapter. dataset first created Donald Knuth part Stanford Graph Base. (https://people.sc.fsu.edu/~jburkardt/datasets/sgb/sgb.html). contains 77 nodes corresponding characters novel, 254 edges.","code":""},{"path":"https://cynkra.github.io/g6R/reference/lesmis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Character network from ","text":"","code":"data(lesmis)"},{"path":"https://cynkra.github.io/g6R/reference/lesmis.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Character network from ","text":"list 2 data frames: nodes data frame 77 rows nodes. Contains node labels x/y coordinates. edges data frame 254 rows edges. Contains souyrce/target number times interaction happened.","code":""},{"path":"https://cynkra.github.io/g6R/reference/lesmis.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Character network from ","text":"https://networks.skewed.de/net/lesmis","code":""},{"path":"https://cynkra.github.io/g6R/reference/minimap.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Minimap Plugin — minimap","title":"Configure Minimap Plugin — minimap","text":"Creates configuration object minimap plugin G6. plugin adds minimap/thumbnail view entire graph.","code":""},{"path":"https://cynkra.github.io/g6R/reference/minimap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Minimap Plugin — minimap","text":"","code":"minimap(   key = \"minimap\",   className = NULL,   container = NULL,   containerStyle = NULL,   delay = 128,   filter = NULL,   maskStyle = NULL,   padding = 10,   position = \"right-bottom\",   renderer = NULL,   shape = \"key\",   size = c(240, 160),   ... )"},{"path":"https://cynkra.github.io/g6R/reference/minimap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Minimap Plugin — minimap","text":"key Unique identifier plugin (string, default: NULL). className Class name thumbnail canvas (string, default: NULL). container Container thumbnail mounted (HTML element string, default: NULL). containerStyle Style thumbnail container (list JS object, default: NULL). delay Delay update time milliseconds performance optimization (number, default: 128). filter Function filter elements display minimap (JS function, default: NULL). maskStyle Style mask (list JS object, default: NULL). padding Padding around minimap (number numeric vector, default: 10). position Position thumbnail relative canvas (string numeric vector, default: \"right-bottom\"). renderer Custom renderer (JS object, default: NULL). shape Method generating element thumbnails (string JS function, default: \"key\"). size Width height minimap [width, height] (numeric vector, default: c(240, 160)). ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/plugin/minimap.","code":""},{"path":"https://cynkra.github.io/g6R/reference/minimap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Minimap Plugin — minimap","text":"list configuration settings minimap plugin.","code":""},{"path":"https://cynkra.github.io/g6R/reference/minimap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Minimap Plugin — minimap","text":"","code":"# Basic configuration config <- minimap()  # Custom configuration config <- minimap(   key = \"my-minimap\",   position = \"left-top\",   size = c(200, 150),   padding = 15,   containerStyle = list(     border = \"1px solid #ddd\",     borderRadius = \"4px\",     boxShadow = \"0 0 8px rgba(0,0,0,0.1)\"   ),   maskStyle = list(     stroke = \"#1890ff\",     strokeWidth = 2,     fill = \"rgba(24, 144, 255, 0.1)\"   ) )  # With custom filtering function config <- minimap(   filter = JS(\"(id, elementType) => {     // Only show nodes and important edges in the minimap     if (elementType === 'node') return true;     if (elementType === 'edge') {       // Assuming edges have an 'important' attribute       const edge = graph.findById(id);       return edge.getModel().important === true;     }     return false;   }\") )"},{"path":"https://cynkra.github.io/g6R/reference/node_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Node Options Configuration for G6 Graphs — node_options","title":"Create Node Options Configuration for G6 Graphs — node_options","text":"Configures general options nodes G6 graph. settings control type, style, state, palette, animation nodes.","code":""},{"path":"https://cynkra.github.io/g6R/reference/node_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Node Options Configuration for G6 Graphs — node_options","text":"","code":"node_options(   type = c(\"circle\", \"rect\", \"ellipse\", \"diamond\", \"triangle\", \"star\", \"image\",     \"modelRect\"),   style = node_style_options(),   state = NULL,   palette = NULL,   animation = NULL )"},{"path":"https://cynkra.github.io/g6R/reference/node_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Node Options Configuration for G6 Graphs — node_options","text":"type Node type. Can built-node type name custom node name. Built-types include \"circle\", \"rect\", \"ellipse\", \"diamond\", \"triangle\", etc. Default: \"circle\". style Node style configuration. Controls appearance nodes including color, size, border, etc. Can created node_style_options(). Default: NULL. state Defines style node different states, hover, selected, disabled, etc. list mapping state names style configurations. Default: NULL. palette Defines color palette node, used map colors based different data. Default: NULL. animation Defines animation effect node. Can created animation_config(). Default: NULL.","code":""},{"path":"https://cynkra.github.io/g6R/reference/node_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Node Options Configuration for G6 Graphs — node_options","text":"list containing node options configuration can passed g6_options().","code":""},{"path":"https://cynkra.github.io/g6R/reference/node_options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Node Options Configuration for G6 Graphs — node_options","text":"Node options allow defining nodes appear behave G6 graph. includes selecting node types, setting styles, configuring state-based appearances, defining color palettes, specifying animation effects.","code":""},{"path":"https://cynkra.github.io/g6R/reference/node_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Node Options Configuration for G6 Graphs — node_options","text":"","code":"# Basic node options with default circle type options <- node_options()  # Rectangle node with custom style options <- node_options(   type = \"rect\",   style = node_style_options(     fill = \"#E8F7FF\",     stroke = \"#1783FF\",     lineWidth = 2   ) )"},{"path":"https://cynkra.github.io/g6R/reference/node_style_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Node Style Options for G6 Graphs — node_style_options","title":"Create Node Style Options for G6 Graphs — node_style_options","text":"Configures styling options nodes G6 graph. settings control appearance interaction behavior nodes. Used node_options.","code":""},{"path":"https://cynkra.github.io/g6R/reference/node_style_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Node Style Options for G6 Graphs — node_style_options","text":"","code":"node_style_options(   collapsed = FALSE,   cursor = \"default\",   fill = \"#1783FF\",   fillOpacity = 1,   increasedLineWidthForHitTesting = 0,   lineCap = c(\"butt\", \"round\", \"square\"),   lineDash = NULL,   lineDashOffset = NULL,   lineJoin = c(\"miter\", \"round\", \"bevel\"),   lineWidth = 1,   opacity = 1,   shadowBlur = NULL,   shadowColor = NULL,   shadowOffsetX = NULL,   shadowOffsetY = NULL,   shadowType = c(\"outer\", \"inner\"),   size = 32,   stroke = \"#000\",   strokeOpacity = 1,   transform = NULL,   transformOrigin = NULL,   visibility = c(\"visible\", \"hidden\"),   x = NULL,   y = NULL,   z = NULL,   zIndex = NULL,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/node_style_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Node Style Options for G6 Graphs — node_style_options","text":"collapsed Whether current node/group collapsed. Default: FALSE. cursor Node mouse hover cursor style. Common values include \"default\", \"pointer\", \"move\", etc. Default: \"default\". fill Node fill color. Can valid CSS color value. Default: \"#1783FF\". fillOpacity Node fill color opacity. Value 0 1. Default: 1. increasedLineWidthForHitTesting lineWidth small, value increases interactive area make \"thin lines\" easier interact . Default: 0. lineCap Node stroke end style. Options: \"round\", \"square\", \"butt\". Default: \"butt\". lineDash Node stroke dash style. Vector numbers specifying dash pattern. lineDashOffset Node stroke dash offset. Default: NULL. lineJoin Node stroke join style. Options: \"round\", \"bevel\", \"miter\". Default: \"miter\". lineWidth Node stroke width. Default: 1. opacity Node overall opacity. Value 0 1. Default: 1. shadowBlur Node shadow blur amount. Default: NULL. shadowColor Node shadow color. Default: NULL. shadowOffsetX Node shadow offset x-axis direction. Default: NULL. shadowOffsetY Node shadow offset y-axis direction. Default: NULL. shadowType Node shadow type. Options: \"inner\", \"outer\". Default: \"outer\". size Node size. Can single number equal width/height vector two numbers [width, height]. Default: 32. stroke Node stroke (border) color. Default: \"#000\". strokeOpacity Node stroke color opacity. Value 0 1. Default: 1. transform CSS transform attribute rotate, scale, skew, translate node. Default: NULL. transformOrigin Rotation scaling center point. Default: NULL. visibility Whether node visible. Options: \"visible\", \"hidden\". Default: \"visible\". x Node x coordinate. Default: 0. y Node y coordinate. Default: 0. z Node z coordinate (3D). Default: 0. zIndex Node rendering level (layering). Default: 0. ... parameters.","code":""},{"path":"https://cynkra.github.io/g6R/reference/node_style_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Node Style Options for G6 Graphs — node_style_options","text":"list containing node style options can passed node_options().","code":""},{"path":"https://cynkra.github.io/g6R/reference/node_style_options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Node Style Options for G6 Graphs — node_style_options","text":"Node style options allow fine-grained control nodes rendered behave G6 graph. includes colors, sizes, borders, shadows, visibility, positioning, interaction states.","code":""},{"path":"https://cynkra.github.io/g6R/reference/node_style_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Node Style Options for G6 Graphs — node_style_options","text":"","code":"# Basic node style with blue fill and red border styles <- node_style_options(   fill = \"#1783FF\",   stroke = \"#FF0000\",   lineWidth = 2 )  # Create a node with shadow effects styles <- node_style_options(   fill = \"#FFFFFF\",   stroke = \"#333333\",   lineWidth = 1,   shadowBlur = 10,   shadowColor = \"rgba(0,0,0,0.3)\",   shadowOffsetX = 5,   shadowOffsetY = 5 )  # Custom sized node with dashed border styles <- node_style_options(   size = c(100, 50),   fill = \"#E8F7FF\",   stroke = \"#1783FF\",   lineDash = c(5, 5),   opacity = 0.8 )"},{"path":"https://cynkra.github.io/g6R/reference/optimize_viewport_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Optimize Viewport Transform Behavior — optimize_viewport_transform","title":"Configure Optimize Viewport Transform Behavior — optimize_viewport_transform","text":"Creates configuration object optimize-viewport-transform behavior G6. behavior improves performance viewport transformations temporarily hiding certain elements.","code":""},{"path":"https://cynkra.github.io/g6R/reference/optimize_viewport_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Optimize Viewport Transform Behavior — optimize_viewport_transform","text":"","code":"optimize_viewport_transform(   key = \"optimize-viewport-transform\",   enable = TRUE,   debounce = 200,   shapes = JS(\"(type) => type === 'node'\"),   ... )"},{"path":"https://cynkra.github.io/g6R/reference/optimize_viewport_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Optimize Viewport Transform Behavior — optimize_viewport_transform","text":"key Unique identifier behavior (string, default: \"optimize-viewport-transform\"). enable Whether enable behavior (boolean JS function, default: TRUE). debounce long operation ends restore visibility elements milliseconds (number, default: 200). shapes Function specify graphical elements remain visible canvas operations (JS function, default: returns TRUE nodes). ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/behavior/optimize-viewport-transform.","code":""},{"path":"https://cynkra.github.io/g6R/reference/optimize_viewport_transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Optimize Viewport Transform Behavior — optimize_viewport_transform","text":"list configuration settings optimize-viewport-transform behavior.","code":""},{"path":"https://cynkra.github.io/g6R/reference/optimize_viewport_transform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Optimize Viewport Transform Behavior — optimize_viewport_transform","text":"","code":"# Basic configuration config <- optimize_viewport_transform()  # Custom configuration config <- optimize_viewport_transform(   key = \"my-optimize-transform\",   debounce = 500,   shapes = JS(\"(type) => type === 'node' || type === 'edge'\") )  # With conditional enabling config <- optimize_viewport_transform(   enable = JS(\"(event) => event.getCurrentTransform().zoom < 0.5\") )"},{"path":"https://cynkra.github.io/g6R/reference/poke.html","id":null,"dir":"Reference","previous_headings":"","what":"Example pokemon data — poke","title":"Example pokemon data — poke","text":"Pokemon evolution network showcase combo features.","code":""},{"path":"https://cynkra.github.io/g6R/reference/poke.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example pokemon data — poke","text":"","code":"data(poke)"},{"path":"https://cynkra.github.io/g6R/reference/poke.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example pokemon data — poke","text":"list 3 nested lists: nodes list 120 pokemon. edges list 69 connections. combo list 51 pokemon families. family contains evolutions pokemon.","code":""},{"path":"https://cynkra.github.io/g6R/reference/poke.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example pokemon data — poke","text":"https://pokeapi.co/docs/v2","code":""},{"path":"https://cynkra.github.io/g6R/reference/radial.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Network for radial layouts — radial","title":"Example Network for radial layouts — radial","text":"Example Network radial layouts","code":""},{"path":"https://cynkra.github.io/g6R/reference/radial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Network for radial layouts — radial","text":"","code":"data(radial)"},{"path":"https://cynkra.github.io/g6R/reference/radial.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Network for radial layouts — radial","text":"list 2 data frames: nodes data frame 34 rows nodes. edges data frame 58 rows edges.","code":""},{"path":"https://cynkra.github.io/g6R/reference/radial.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example Network for radial layouts — radial","text":"https://assets.antv.antgroup.com/g6/radial.json","code":""},{"path":"https://cynkra.github.io/g6R/reference/radial_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate G6 Radial layout configuration — radial_layout","title":"Generate G6 Radial layout configuration — radial_layout","text":"function creates configuration list G6 Radial layout available options parameters.","code":""},{"path":"https://cynkra.github.io/g6R/reference/radial_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate G6 Radial layout configuration — radial_layout","text":"","code":"radial_layout(   center = NULL,   focusNode = NULL,   height = NULL,   width = NULL,   nodeSize = NULL,   nodeSpacing = 10,   linkDistance = 50,   unitRadius = 100,   maxIteration = 1000,   maxPreventOverlapIteration = 200,   preventOverlap = FALSE,   sortBy = NULL,   sortStrength = 10,   strictRadial = TRUE,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/radial_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate G6 Radial layout configuration — radial_layout","text":"center Numeric vector length 2. Center coordinates. focusNode Character, list (Node), NULL. Radiating center node. Defaults NULL. height Numeric. Canvas height. width Numeric. Canvas width. nodeSize Numeric. Node size (diameter). nodeSpacing Numeric function. Minimum node spacing (effective preventing overlap). Defaults 10. linkDistance Numeric. Edge length. Defaults 50. unitRadius Numeric NULL. Radius per circle. Defaults 100. maxIteration Numeric. Maximum number iterations. Defaults 1000. maxPreventOverlapIteration Numeric. Max iterations overlap prevention. Defaults 200. preventOverlap Logical. Whether prevent node overlap. Defaults FALSE. sortBy Character. Field sorting nodes layer. sortStrength Numeric. Sorting strength nodes layer. Defaults 10. strictRadial Logical. Strictly place nodes layer ring. Defaults TRUE. ... Additional parameters pass layout. See https://g6.antv.antgroup.com/en/manual/layout/radial-layout.","code":""},{"path":"https://cynkra.github.io/g6R/reference/radial_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate G6 Radial layout configuration — radial_layout","text":"list containing configuration G6 radial layout.","code":""},{"path":"https://cynkra.github.io/g6R/reference/radial_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate G6 Radial layout configuration — radial_layout","text":"","code":"if (interactive()) {   g6(jsonUrl = \"https://assets.antv.antgroup.com/g6/radial.json\") |>     g6_layout(       radial_layout(         unitRadius = 100,         linkDistance = 200       )     ) |>     g6_behaviors(       \"zoom-canvas\",       drag_element()     ) }"},{"path":"https://cynkra.github.io/g6R/reference/scroll_canvas.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Scroll Canvas Behavior — scroll_canvas","title":"Configure Scroll Canvas Behavior — scroll_canvas","text":"Creates configuration object scroll-canvas behavior G6. behavior allows scrolling canvas mouse wheel keyboard.","code":""},{"path":"https://cynkra.github.io/g6R/reference/scroll_canvas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Scroll Canvas Behavior — scroll_canvas","text":"","code":"scroll_canvas(   key = \"scroll-canvas\",   enable = TRUE,   direction = NULL,   range = 1,   sensitivity = 1,   trigger = NULL,   onFinish = NULL,   preventDefault = TRUE,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/scroll_canvas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Scroll Canvas Behavior — scroll_canvas","text":"key Unique identifier behavior (string, default: \"scroll-canvas\"). enable Whether enable behavior (boolean JS function, default: TRUE). direction Allowed scrolling direction: \"x\", \"y\", NULL limit (string NULL, default: NULL). range Scrollable viewport range viewport size units (numeric numeric vector, default: 1). sensitivity Scrolling sensitivity, larger value, faster scrolling (numeric, default: 1). trigger Keyboard shortcuts trigger scrolling (list, default: NULL). onFinish Callback function scrolling finished (JS function, default: NULL). preventDefault Whether prevent browser's default event (boolean, default: TRUE). ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/behavior/scroll-canvas.","code":""},{"path":"https://cynkra.github.io/g6R/reference/scroll_canvas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Scroll Canvas Behavior — scroll_canvas","text":"list configuration settings scroll-canvas behavior.","code":""},{"path":"https://cynkra.github.io/g6R/reference/scroll_canvas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Scroll Canvas Behavior — scroll_canvas","text":"","code":"# Basic configuration config <- scroll_canvas()  # Custom configuration config <- scroll_canvas(   key = \"my-scroll-behavior\",   direction = \"x\",   range = c(-2, 2),   sensitivity = 1.5,   preventDefault = FALSE )  # With keyboard triggers and callback config <- scroll_canvas(   enable = JS(\"(event) => !event.altKey\"),   trigger = list(     up = \"w\",     down = \"s\",     left = \"a\",     right = \"d\"   ),   onFinish = JS(\"() => { console.log('Scrolling finished'); }\") )"},{"path":"https://cynkra.github.io/g6R/reference/snapline.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Snapline Plugin — snapline","title":"Configure Snapline Plugin — snapline","text":"Creates configuration object snapline plugin G6. plugin provides alignment guidelines moving nodes.","code":""},{"path":"https://cynkra.github.io/g6R/reference/snapline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Snapline Plugin — snapline","text":"","code":"snapline(   key = \"snapline\",   tolerance = 5,   offset = 20,   autoSnap = TRUE,   shape = \"key\",   verticalLineStyle = list(stroke = \"#1783FF\"),   horizontalLineStyle = list(stroke = \"#1783FF\"),   filter = NULL,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/snapline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Snapline Plugin — snapline","text":"key Unique identifier plugin (string, default: NULL). tolerance alignment accuracy pixels (number, default: 5). offset extension distance snapline (number, default: 20). autoSnap Whether enable automatic snapping (boolean, default: TRUE). shape Specifies shape use reference: \"key\" function (string JS function, default: \"key\"). verticalLineStyle Vertical snapline style (list JS object, default: list(stroke = \"#1783FF\")). horizontalLineStyle Horizontal snapline style (list JS object, default: list(stroke = \"#1783FF\")). filter Function filter nodes participate alignment (JS function, default: NULL). ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/plugin/snapline.","code":""},{"path":"https://cynkra.github.io/g6R/reference/snapline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Snapline Plugin — snapline","text":"list configuration settings snapline plugin.","code":""},{"path":"https://cynkra.github.io/g6R/reference/snapline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Snapline Plugin — snapline","text":"","code":"# Basic configuration config <- snapline()  # Custom configuration config <- snapline(   key = \"my-snapline\",   tolerance = 8,   offset = 30,   verticalLineStyle = list(     stroke = \"#f00\",     strokeWidth = 1.5,     lineDash = c(5, 2)   ),   horizontalLineStyle = list(     stroke = \"#00f\",     strokeWidth = 1.5,     lineDash = c(5, 2)   ) )  # With custom filter function config <- snapline(   filter = JS(\"(node) => {     // Only allow regular nodes to participate in alignment     // Exclude special nodes like 'start' or 'end'     const model = node.getModel();     return model.type !== 'start' && model.type !== 'end';   }\") )"},{"path":"https://cynkra.github.io/g6R/reference/timebar.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Timebar Plugin — timebar","title":"Configure Timebar Plugin — timebar","text":"Creates configuration object timebar plugin G6. plugin adds timeline chart-based control time-related data visualization.","code":""},{"path":"https://cynkra.github.io/g6R/reference/timebar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Timebar Plugin — timebar","text":"","code":"timebar(   data,   key = \"timebar\",   className = \"g6-timebar\",   x = NULL,   y = NULL,   width = 450,   height = 60,   position = c(\"bottom\", \"top\"),   padding = 10,   timebarType = c(\"time\", \"chart\"),   elementTypes = c(\"node\", \"edge\", \"combo\"),   mode = c(\"modify\", \"visibility\"),   values = NULL,   loop = FALSE,   getTime = NULL,   labelFormatter = NULL,   onChange = NULL,   onReset = NULL,   onSpeedChange = NULL,   onPlay = NULL,   onPause = NULL,   onBackward = NULL,   onForward = NULL,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/timebar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Timebar Plugin — timebar","text":"data Time data, either vector timestamps list objects time value (required). key Unique identifier plugin (string, default: NULL). className Additional class name timebar DOM (string, default: \"g6-timebar\"). x X position, ignored position set (number, default: NULL). y Y position, ignored position set (number, default: NULL). width Timebar width (number, default: 450). height Timebar height (number, default: 60). position Timebar position: \"bottom\" \"top\" (string, default: \"bottom\"). padding Padding around timebar (number numeric vector, default: 10). timebarType Display type: \"time\" \"chart\" (string, default: \"time\"). elementTypes Filter element types: vector \"node\", \"edge\", /\"combo\" (character vector, default: c(\"node\")). mode Control element filtering method: \"modify\" \"visibility\" (string, default: \"modify\"). values Current time value (number, vector two numbers, Date, vector two Dates, default: NULL). loop Whether loop playback (boolean, default: FALSE). getTime Method get element time (JS function, default: NULL). labelFormatter Custom time formatting chart mode (JS function, default: NULL). onChange Callback time interval changes (JS function, default: NULL). onReset Callback reset (JS function, default: NULL). onSpeedChange Callback playback speed changes (JS function, default: NULL). onPlay Callback playback starts (JS function, default: NULL). onPause Callback paused (JS function, default: NULL). onBackward Callback moving backward (JS function, default: NULL). onForward Callback moving forward (JS function, default: NULL). ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/plugin/timebar.","code":""},{"path":"https://cynkra.github.io/g6R/reference/timebar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Timebar Plugin — timebar","text":"list configuration settings timebar plugin.","code":""},{"path":"https://cynkra.github.io/g6R/reference/timebar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Timebar Plugin — timebar","text":"","code":"# Basic timebar with array of timestamps config <- timebar(   data = c(1609459200000, 1609545600000, 1609632000000)  # Jan 1-3, 2021 in milliseconds )  # Chart-type timebar with time-value pairs config <- timebar(   data = list(     list(time = 1609459200000, value = 10),     list(time = 1609545600000, value = 25),     list(time = 1609632000000, value = 15)   ),   timebarType = \"chart\",   width = 600,   height = 100,   position = \"top\" )  # With custom callbacks config <- timebar(   data = c(1609459200000, 1609545600000, 1609632000000),   onChange = JS(\"(values) => {     console.log('Time changed:', values);   }\"),   onPlay = JS(\"() => {     console.log('Playback started');   }\") )  # With custom time getter function for elements config <- timebar(   data = c(1609459200000, 1609545600000, 1609632000000),   getTime = JS(\"(datum) => {     return datum.created_at; // Get time from created_at property   }\") )"},{"path":"https://cynkra.github.io/g6R/reference/toolbar.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Toolbar Plugin — toolbar","title":"Configure Toolbar Plugin — toolbar","text":"Creates configuration object toolbar plugin G6. plugin adds customizable toolbar items graph operations.","code":""},{"path":"https://cynkra.github.io/g6R/reference/toolbar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Toolbar Plugin — toolbar","text":"","code":"toolbar(   getItems = NULL,   key = \"toolbar\",   className = NULL,   position = c(\"top-left\", \"top\", \"top-right\", \"right\", \"bottom-right\", \"bottom\",     \"bottom-left\", \"left\"),   style = NULL,   onClick = NULL,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/toolbar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Toolbar Plugin — toolbar","text":"getItems Function returns list toolbar items (JS function, required). key Unique identifier plugin (string, default: NULL). className Additional CSS class name toolbar DOM element (string, default: NULL). position Toolbar position relative canvas (string, default: \"top-left\"). style Custom style toolbar DOM element (list JS object, default: NULL). onClick Callback function toolbar item clicked (JS function, default: NULL). ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/plugin/toolbar.","code":""},{"path":"https://cynkra.github.io/g6R/reference/toolbar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Toolbar Plugin — toolbar","text":"list configuration settings toolbar plugin.","code":""},{"path":"https://cynkra.github.io/g6R/reference/toolbar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Toolbar Plugin — toolbar","text":"","code":"# Basic toolbar with zoom controls config <- toolbar(   position = \"top-right\",   getItems = JS(\"() => [     { id: 'zoom-in', value: 'zoom-in' },     { id: 'zoom-out', value: 'zoom-out' },     { id: 'undo', value: 'undo' },     { id: 'redo', value: 'redo' },     { id: 'auto-fit', value: 'fit' }   ]\"),   onClick = JS(\"(value) => {     // redo, undo need to be used with the history plugin     const history = graph.getPluginInstance('history');     switch (value) {       case 'zoom-in':         graph.zoomTo(1.1);         break;       case 'zoom-out':         graph.zoomTo(0.9);         break;       case 'undo':         history?.undo();         break;       case 'redo':         history?.redo();         break;       case 'fit':         graph.fitView();         break;       default:         break;     }   }\") )"},{"path":"https://cynkra.github.io/g6R/reference/tooltips.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Tooltip Plugin — tooltips","title":"Configure Tooltip Plugin — tooltips","text":"Creates configuration object tooltip plugin G6. plugin displays tooltips interacting graph elements.","code":""},{"path":"https://cynkra.github.io/g6R/reference/tooltips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Tooltip Plugin — tooltips","text":"","code":"tooltips(   key = \"tooltip\",   position = c(\"top-right\", \"top\", \"bottom\", \"left\", \"right\", \"top-left\", \"bottom-left\",     \"bottom-right\"),   enable = TRUE,   getContent = NULL,   onOpenChange = NULL,   trigger = c(\"hover\", \"click\"),   container = NULL,   offset = c(10, 10),   enterable = FALSE,   title = NULL,   style = NULL,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/tooltips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Tooltip Plugin — tooltips","text":"key Unique identifier plugin (string, default: NULL). position Tooltip position relative element (string, default: \"top-right\"). enable Whether plugin enabled (boolean function, default: TRUE). getContent Function generate custom tooltip content (JS function, default: NULL). onOpenChange Callback tooltip show/hide events (JS function, default: NULL). trigger Trigger behavior: \"hover\" \"click\" (string, default: \"hover\"). container Custom rendering container tooltip (string HTML element, default: NULL). offset Offset distance vector two numbers [x, y] (numeric vector, default: c(10, 10)). enterable Whether pointer can enter tooltip (boolean, default: FALSE). title Title tooltip (string, default: NULL). style Custom style tooltip (list JS object, default: list(\".tooltip\" = list(visibility = \"hidden\"))). ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/plugin/tooltip.","code":""},{"path":"https://cynkra.github.io/g6R/reference/tooltips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Tooltip Plugin — tooltips","text":"list configuration settings tooltip plugin.","code":""},{"path":"https://cynkra.github.io/g6R/reference/tooltips.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Tooltip Plugin — tooltips","text":"","code":"# Basic tooltip config <- tooltips()  # Tooltip with custom position and content config <- tooltips(   position = \"bottom\",   getContent = JS(\"(event, items) => {     let result = `<h4>Custom Content<\/h4>`;     items.forEach((item) => {       result += `<p>Type: ${item.data.description}<\/p>`;     });     return result;   }\") )  # Click-triggered tooltip with custom style config <- tooltips(   trigger = \"click\",   position = \"bottom-left\",   offset = c(15, 20),   style = list(     \".tooltip\" = list(       backgroundColor = \"#fff\",       border = \"1px solid #ccc\",       borderRadius = \"4px\",       boxShadow = \"0 2px 6px rgba(0,0,0,0.1)\",       padding = \"10px\",       maxWidth = \"300px\"     )   ) )  # Conditional tooltip based on node type config <- tooltips(   enable = JS(\"(event, items) => {     // Only show tooltip for nodes with type 'important'     const item = items[0];     return item.type === 'important';   }\"),   enterable = TRUE,   onOpenChange = JS(\"(open) => {     console.log('Tooltip visibility changed:', open);   }\") )"},{"path":"https://cynkra.github.io/g6R/reference/tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Example tree graph — tree","title":"Example tree graph — tree","text":"graph contains classification algorithm categories","code":""},{"path":"https://cynkra.github.io/g6R/reference/tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example tree graph — tree","text":"","code":"data(tree)"},{"path":"https://cynkra.github.io/g6R/reference/tree.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example tree graph — tree","text":"list 2 data frames: nodes data frame 31 rows nodes. edges data frame 30 rows edges.","code":""},{"path":"https://cynkra.github.io/g6R/reference/tree.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example tree graph — tree","text":"https://gw.alipayobjects.com/os/antvdemo/assets/data/algorithm-category.json","code":""},{"path":"https://cynkra.github.io/g6R/reference/watermark.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Watermark Plugin — watermark","title":"Configure Watermark Plugin — watermark","text":"Creates configuration object watermark plugin G6. plugin adds watermark graph canvas.","code":""},{"path":"https://cynkra.github.io/g6R/reference/watermark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Watermark Plugin — watermark","text":"","code":"watermark(   key = \"watermark\",   width = 200,   height = 100,   opacity = 0.2,   rotate = pi/12,   imageURL = NULL,   text = NULL,   textFill = \"#000\",   textFontSize = 16,   textFontFamily = NULL,   textFontWeight = NULL,   textFontVariant = NULL,   textAlign = c(\"center\", \"end\", \"left\", \"right\", \"start\"),   textBaseline = c(\"alphabetic\", \"bottom\", \"hanging\", \"ideographic\", \"middle\", \"top\"),   backgroundRepeat = \"repeat\",   backgroundAttachment = NULL,   backgroundBlendMode = NULL,   backgroundClip = NULL,   backgroundColor = NULL,   backgroundImage = NULL,   backgroundOrigin = NULL,   backgroundPosition = NULL,   backgroundPositionX = NULL,   backgroundPositionY = NULL,   backgroundSize = NULL,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/watermark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Watermark Plugin — watermark","text":"key Unique identifier plugin (string, default: NULL). width Width single watermark (number, default: 200). height Height single watermark (number, default: 100). opacity Opacity watermark (number, default: 0.2). rotate Rotation angle watermark radians (number, default: pi/12). imageURL Image watermark URL, higher priority text watermark (string, default: NULL). text Watermark text content (string, default: NULL). textFill Color text watermark (string, default: \"#000\"). textFontSize Font size text watermark (number, default: 16). textFontFamily Font text watermark (string, default: NULL). textFontWeight Font weight text watermark (string, default: NULL). textFontVariant Font variant text watermark (string, default: NULL). textAlign Text alignment watermark (string, default: \"center\"). textBaseline Baseline alignment text watermark (string, default: \"middle\"). backgroundRepeat Repeat mode watermark (string, default: \"repeat\"). backgroundAttachment Background attachment behavior watermark (string, default: NULL). backgroundBlendMode Background blend mode watermark (string, default: NULL). backgroundClip Background clip watermark (string, default: NULL). backgroundColor Background color watermark (string, default: NULL). backgroundImage Background image watermark (string, default: NULL). backgroundOrigin Background origin watermark (string, default: NULL). backgroundPosition Background position watermark (string, default: NULL). backgroundPositionX Horizontal position watermark background (string, default: NULL). backgroundPositionY Vertical position watermark background (string, default: NULL). backgroundSize Background size watermark (string, default: NULL). ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/plugin/watermark.","code":""},{"path":"https://cynkra.github.io/g6R/reference/watermark.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Watermark Plugin — watermark","text":"list configuration settings watermark plugin.","code":""},{"path":"https://cynkra.github.io/g6R/reference/watermark.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Watermark Plugin — watermark","text":"","code":"# Basic text watermark config <- watermark(   text = \"G6 Graph\",   opacity = 0.1 )  # Image watermark config <- watermark(   imageURL = \"https://gw.alipayobjects.com/os/s/prod/antv/assets/image/logo-with-text-73b8a.svg\",   width = 150,   height = 75,   opacity = 0.15,   rotate = 0 )  # Customized text watermark config <- watermark(   text = \"CONFIDENTIAL\",   textFill = \"#ff0000\",   textFontSize = 24,   textFontWeight = \"bold\",   opacity = 0.08,   rotate = pi/6,   backgroundRepeat = \"repeat-x\" )  # Watermark with background styling config <- watermark(   text = \"Draft Document\",   textFill = \"#333\",   backgroundColor = \"#f9f9f9\",   backgroundClip = \"content-box\",   backgroundSize = \"cover\" )"},{"path":"https://cynkra.github.io/g6R/reference/zoom_canvas.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Zoom Canvas Behavior — zoom_canvas","title":"Configure Zoom Canvas Behavior — zoom_canvas","text":"Creates configuration object zoom-canvas behavior G6. behavior allows zooming canvas mouse wheel keyboard shortcuts.","code":""},{"path":"https://cynkra.github.io/g6R/reference/zoom_canvas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Zoom Canvas Behavior — zoom_canvas","text":"","code":"zoom_canvas(   key = \"zoom-canvas\",   animation = list(duration = 200),   enable = TRUE,   origin = NULL,   onFinish = NULL,   preventDefault = TRUE,   sensitivity = 1,   trigger = NULL,   ... )"},{"path":"https://cynkra.github.io/g6R/reference/zoom_canvas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Zoom Canvas Behavior — zoom_canvas","text":"key Unique identifier behavior (string, default: \"zoom-canvas\"). animation Zoom animation effect settings (list, default: list duration 200ms). enable Whether enable behavior (boolean JS function, default: TRUE). origin Zoom center point viewport coordinates (list x, y values, default: NULL). onFinish Callback function zooming finished (JS function, default: NULL). preventDefault Whether prevent browser's default event (boolean, default: TRUE). sensitivity Zoom sensitivity, larger value, faster zoom (numeric, default: 1). trigger trigger zooming, supports mouse wheel keyboard shortcuts (list, default: NULL). ... Extra parameters. See https://g6.antv.antgroup.com/en/manual/behavior/zoom-canvas.","code":""},{"path":"https://cynkra.github.io/g6R/reference/zoom_canvas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Zoom Canvas Behavior — zoom_canvas","text":"list configuration settings zoom-canvas behavior.","code":""},{"path":"https://cynkra.github.io/g6R/reference/zoom_canvas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Zoom Canvas Behavior — zoom_canvas","text":"","code":"# Basic configuration config <- zoom_canvas()  # Custom configuration config <- zoom_canvas(   key = \"my-zoom-behavior\",   animation = list(duration = 300, easing = \"ease-in-out\"),   origin = list(x = 0, y = 0),   sensitivity = 1.5,   preventDefault = FALSE )  # With keyboard triggers and callback config <- zoom_canvas(   enable = JS(\"(event) => !event.altKey\"),   trigger = list(     zoomIn = \"+\",     zoomOut = \"-\",     reset = \"0\"   ),   onFinish = JS(\"() => { console.log('Zooming finished'); }\") )"},{"path":"https://cynkra.github.io/g6R/news/index.html","id":"g6r-020","dir":"Changelog","previous_headings":"","what":"g6R 0.2.0","title":"g6R 0.2.0","text":"Fix: state never get set first render. Fix #23: graph re-rendered dynamic plugin addition new elements like hull drawn. Fix #22: internal typo JS function error caught graph. Add input$<graph_ID>-contextmenu extract type id element clicked context menu. can listened Shiny server function. Fix layout behavior issues examples: drag_element_force works animation TRUE. Also added autoFit = TRUE wherever required (manual layout vignette).","code":""},{"path":"https://cynkra.github.io/g6R/news/index.html","id":"g6r-010","dir":"Changelog","previous_headings":"","what":"g6R 0.1.0","title":"g6R 0.1.0","text":"CRAN release: 2025-07-10 Initial CRAN submission.","code":""}]
